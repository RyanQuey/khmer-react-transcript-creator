{"version":3,"sources":["lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css","lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/speechmatics/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/Util/export-adapters/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","lib/updated-react-speech-recognition/src/index.js","lib/updated-react-speech-recognition/src/SpeechRecognition.js","lib/GenerateTranscript/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css"],"names":["module","exports","color-light-grey","color-labs-red","bar","selectPlayerControl","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-darkest-grey","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","color-subt-green","DraftEditor-root","editor","help","icon","helpMessage","mutability","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","style","speaker","EditLabel","onClick","handleOnClickEdit","index_es","faUserEdit","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","blockProps","handleAnalyticsEvents","category","action","value","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","handleTimecodeClick","onWordClick","state","timecodeOffset","get","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","showSpeakers","showTimecodes","text","Draft","React","Component","generateEntitiesRanges","words","wordAttributeName","position","map","word","result","offset","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","tmpWords","results","retval","console","log","wordsByParagraphs","paragraph","forEach","push","punct","groupWordsInParagraphs","draftJsContentBlockParagraph","join","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","test","getSpeaker","speakers","speakerIdx","speechmaticsToDraft","speechmaticsJson","tmpSpeakers","curatedWords","curatePunctuation","element","index","toLowerCase","paragraphStart","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","error","txt","blockData","x","exportAdapter","exportFormat","JSON","stringify","ext","draftToTxt","TimedTextEditor","KeyBindingUtil","hasCommandModifier","onChange","getCurrentContent","isPauseWhileTypingOn","isPlaying","playMedia","clearTimeout","plauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","saveTimer","localSave","mediaUrl","handleDoubleClick","event","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","mediaUrlName","fileName","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","getWordCount","wordArray","getPlainText","trim","match","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","altKey","getDefaultKeyBinding","preventDefault","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","afterMergeContentState","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","initialSelectionOffset","renderBlockWithTimecodes","component","editable","getCurrentWord","currentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","prevProps","prevState","isPresentInLocalStorage","alert","format","getItem","parse","lastLocalSavedDate","_this2","faMousePointer","faICursor","faKeyboard","faSave","tooltip","es","content","fadeDuration","fadeEasing","placement","radius","faQuestionCircle","round","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","onLoadedData","onLoadedDataGetDuration","ref","videoRef","VolumeControl","styles","switchContainer","switch","defaultChecked","handleMuteVolume","slider","Select","options","option","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","skipBackward","interval","setInterval","setIntervalHelperForward","skipForward","clearIntervalHelper","clearInterval","title","rollback","faUndo","onMouseDown","onMouseUp","faBackward","faPause","faPlay","faForward","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","promptSetCurrentTime","handleSaveTranscript","pictureInPicture","faTv","MediaPlayer_VolumeControl","ProgressBar","progress","buttonClick","min","max","returnHotKeys","self","alt+k","priority","handler","togglePlayMedia","displayKeyCombination","alt+l","alt+j","alt+-","decreasePlaybackRate","alt+=","increasePlaybackRate","alt+r","rollBack","alt+t","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","rollBackValueInSeconds","tmpDesiredCurrentTime","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","input","slower","reverse","find","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","handleProgressBarClick","getMediaCurrentTime","handleMediaDurationChange","currentDuration","currentDurationWithOffset","durationInSeconds","mediaDuration","handlePictureInPicture","pictureInPictureElement","exitPictureInPicture","catch","requestPictureInPicture","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","playingWhileListening","player","MediaPlayer_VideoPlayer","playerControlsSection","controlsSection","titleBox","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","defaultValue","handleToggle","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","faWindowClose","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","keys","shortcut","listItem","shortcutLabel","shortcuts","handleShortcutsToggle","TranscriptEditor","ifPresentRetrieveTranscriptFromLocalStorage","timedTextEditorRef","info","loadLocalSavedData","handleWordClick","handlePlayMedia","bool","handleIsPlaying","isChecked","checked","rollBackValue","forceUpdate","showSettings","showShortcuts","getEditorContent","lastLocalSavedTime","mediaPlayer","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","Settings_Shortcuts","timedTextEditor","TranscriptEditor_TimedTextEditor","container","aside","settingsContainer","settingsButton","faCog","main","SpeechRecognition","SpeechRecognitionInner","WrappedComponent","listening","BrowserSpeechRecognition","window","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","browserSupportsSpeechRecognition","autoStart","pauseAfterDisconnect","interimTranscript","finalTranscript","newTranscriptData","status","wonid","_Component","SpeechRecognitionContainer","minElapsed","now","speechTimerStartedAt","newWordData","wordResults","transcript","allWordData","onRecognitionDisconnect","startListening","updateTranscript","allResults","resultIndex","isFinal","concatTranscripts","resetTranscript","disconnect","DOMException","abortListening","stopListening","inherits","createClass","continuous","interimResults","onresult","onend","disconnectType","abort","stop","_len","arguments","transcriptParts","_key","totalTimeElapsed","assign","GenerateTranscript","reset","generateJSON","lang","transcriptJSON","filename","prettyData","download","_this$props","height","overflowY","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$transcriptEdito","transcriptEditorRef","contentType","blob","Blob","href","URL","createObjectURL","click","clearLocalStorage","clear","analyticsEvents","toConsumableArray","handleChangeTranscriptName","sttType","startListeningAndPlayingMedia","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","evt","readAsText","_this3","rel","lib_GenerateTranscript","loadDemo","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_stt_json_type","handleChangeLoadTranscriptJson","select_export_format","lib_TranscriptEditor","width","render","src_App","getElementById","color-mid-grey","color-dark-grey","color-lightest-grey","helpText","hideInMobile"],"mappings":"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","file":"static/js/main.aaec416a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__3lESu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__K8I2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__131gP\",\"header\":\"Settings_header__3gK1h\",\"closeButton\":\"Settings_closeButton__wD_fB\",\"controlsContainer\":\"Settings_controlsContainer__j6tEh\",\"settingElement\":\"Settings_settingElement__ErFP7\",\"label\":\"Settings_label__3QTmN\",\"rollbackValue\":\"Settings_rollbackValue__1OTsV\",\"timecodeLabel\":\"Settings_timecodeLabel__1LKIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__17zIK\",\"playerButton\":\"PlayerControls_playerButton__1zxDP\",\"playBackRate\":\"PlayerControls_playBackRate__3b9Gj\",\"timeBox\":\"PlayerControls_timeBox__3gHFS\",\"currentTime\":\"PlayerControls_currentTime__16CX-\",\"separator\":\"PlayerControls_separator__3IO7E\",\"duration\":\"PlayerControls_duration__1r95o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__bIxvS\",\"editor\":\"TimedTextEditor_editor__2Qhw9\",\"help\":\"TimedTextEditor_help__AP8BA\",\"icon\":\"TimedTextEditor_icon__1BfEt\",\"helpMessage\":\"TimedTextEditor_helpMessage__3fn_W\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'react-simple-tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faMousePointer, faICursor, faUserEdit, faKeyboard, faSave } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier,\n  KeyBindingUtil\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nconst { hasCommandModifier } = KeyBindingUtil;\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      // inputCount: 0,\n      currentWord: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && ( this.props.mediaUrl!== null && !this.isPresentInLocalStorage(this.props.mediaUrl) )\n    ) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.plauseWhileTypingTimeOut);\n          this.plauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState(() => ({\n        editorState\n      }), () => {\n        // saving when user has stopped typing for more then five seconds\n        if (this.saveTimer!== undefined) {\n          clearTimeout(this.saveTimer);\n        }\n        this.saveTimer = setTimeout(() => {\n          this.localSave(this.props.mediaUrl);\n        }, 5000);\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      console.log(\"transcript data and json type\", this.props.transcriptData, this.props.sttJsonType)\n      console.log(\"blocks\", blocks.blocks)\n      if (blocks.blocks.length === 0) {\n        console.error(\"No Blocks returned!\")\n        alert(\"No Blocks returned!\")\n\n        // TODO this still breaks but allows user to continue doing some stuff at least...\n        // probably want better error handling\n        return \n      }\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    console.log('localSave');\n    clearTimeout(this.saveTimer);\n    let mediaUrlName = this.props.mediaUrl;\n    // if using local media instead of using random blob name\n    // that makes it impossible to retrieve from on page refresh\n    // use file name\n    if (this.props.mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrlName }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrlName }`, newLastLocalSavedDate);\n\n    // return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    if (mediaUrl !== null) {\n      let mediaUrlName = mediaUrl;\n\n      if (mediaUrl.includes('blob')) {\n        mediaUrlName = this.props.fileName;\n      }\n\n      const data = localStorage.getItem(`draftJs-${ mediaUrlName }`);\n      if (data !== null) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    let mediaUrlName = mediaUrl;\n    if (mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrlName }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrlName }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  // originally from\n  // https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-counter-plugin/src/WordCounter/index.js#L12\n  getWordCount = (editorState) => {\n    const plainText = editorState.getCurrentContent().getPlainText('');\n    const regex = /(?:\\r\\n|\\r|\\n)/g; // new line, carriage return, line feed\n    const cleanString = plainText.replace(regex, ' ').trim(); // replace above characters w/ space\n    const wordArray = cleanString.match(/\\S+/g); // matches words according to whitespace\n\n    return wordArray ? wordArray.length : 0;\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    console.log(\"data\", data)\n    if (!data || !data.blocks.length) {\n      console.error(\"No data given!\")\n    }\n    const contentState = convertFromRaw(data);\n    console.log(\"content State\", contentState)\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TimedTextEditor',\n        action: 'setEditorContentState',\n        name: 'getWordCount',\n        value: this.getWordCount(editorState)\n      });\n    }\n\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator = () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState = this.state.editorState.getCurrentContent();\n    const decorator = this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = (e) => {\n    const enterKey = 13;\n    const spaceKey =32;\n    const kKey = 75;\n    const lKey = 76;\n    const jKey = 74;\n    const equalKey = 187;//used for +\n    const minusKey = 189; // -\n    const rKey = 82;\n    const tKey = 84;\n\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n    // if alt key is pressed in combination with these other keys\n    if (e.altKey && ((e.keyCode === spaceKey)\n    || (e.keyCode === spaceKey)\n    || (e.keyCode === kKey)\n    || (e.keyCode === lKey)\n    || (e.keyCode === jKey)\n    || (e.keyCode === equalKey)\n    || (e.keyCode === minusKey)\n    || (e.keyCode === rKey)\n    || (e.keyCode === tKey))\n    ) {\n      e.preventDefault();\n\n      return 'keyboard-shortcuts';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    if (command === 'keyboard-shortcuts') {\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key\n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection, originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word)\n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState);\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onWordClick: this.props.onWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n\n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`span.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'nearest', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const helpMessage = <div className={ style.helpMessage }>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faMousePointer } />Double click on a word or timestamp to jump to that point in the video.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faICursor } />Start typing to edit text.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faUserEdit } />You can add and change names of speakers in your transcript.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faKeyboard } />Use keyboard shortcuts for quick control.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faSave } />Save & export to get a copy to your desktop.</span>\n    </div>;\n\n    const tooltip = <Tooltip\n      className={ style.help }\n      content={ helpMessage }\n      fadeDuration={ 250 }\n      fadeEasing={ 'ease-in' }\n      placement={ 'bottom' }\n      radius={ 5 }>\n      <FontAwesomeIcon className={ style.icon } icon={ faQuestionCircle } />\n      How does this work?\n    </Tooltip>;\n\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#69e3c2';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`span.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {`span.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }`}\n          {`span.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`span.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { tooltip }\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <span\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }>\n          <FontAwesomeIcon icon={ faUserEdit } />\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n\n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode, secondsToTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0,\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n\n    this.setState({\n      speaker: speaker,\n      start: start\n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n      if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n        this.props.blockProps.handleAnalyticsEvents({\n          category: 'WrapperBlock',\n          action: 'handleOnClickEdit',\n          name: 'newSpeakerName',\n          value: newSpeakerName\n        });\n      }\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  handleTimecodeClick = () => {\n    this.props.blockProps.onWordClick(this.state.start);\n    if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n      this.props.blockProps.handleAnalyticsEvents({\n        category: 'WrapperBlock',\n        action: 'handleTimecodeClick',\n        name: 'onWordClick',\n        value: secondsToTimecode(this.state.start)\n      });\n    }\n\n  }\n\n  render() {\n    let startTimecode = this.state.start;\n    if (this.props.blockProps.timecodeOffset) {\n      startTimecode += this.props.blockProps.timecodeOffset;\n    }\n\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement = <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          {this.props.blockProps.showSpeakers ? speakerElement : ''}\n          {this.props.blockProps.showTimecodes ? timecodeElement : ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  // for us, until can figure out a way to go from speech recognition to punctuation, so can divide up speech blocks, with Khmer just want to make each word a paragraph, since that's kind of what ends up happening.\n  words.forEach((word) => {\n    console.log(\"word\", word)\n    // if word contains punctuation TODO add Khmer punctuation. Right now, will always return false\n    if (true || /[.?!\\s]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n  // RQ added. If we don't add this though, I think it ends up skipping the last paragraph...or for Khmer, maybe the whole transcript!\n  results.push(paragraph);\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  console.log(\"tmpWords\", tmpWords)\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  console.log(\"wordsByParagraphs\", wordsByParagraphs)\n  wordsByParagraphs.forEach((paragraph, i) => {\n    if (!paragraph.words.length) {\n      return\n    }\n\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","/**\n *  Convert Speechmatics\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from speechmatics based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @todo As this function is also used in the bbc-kaldi adapter, should it be refactored into its own file?\n * @param {array} words - array of words objects from speechmatics transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\n/**\n * Determines the speaker of a paragraph by comparing the start time of the paragraph with\n * the speaker times.\n * @param {float} start - Starting point of paragraph\n * @param {array} speakers - list of all speakers with start and end time\n */\nconst getSpeaker = (start, speakers) => {\n  for (var speakerIdx in speakers) {\n    const speaker = speakers[speakerIdx];\n    if (start >= speaker.start & start < speaker.end) {\n      return speaker.name;\n    }\n  }\n\n  return 'UNK';\n};\n\n/**\n * Speechmatics treats punctuation as own words. This function merges punctuations with\n * the pevious word and adjusts the total duration of the word.\n * @param {array} words - array of words objects from speechmatics transcript\n */\nconst curatePunctuation = (words) => {\n  const curatedWords = [];\n  words.forEach((word) => {\n    if (/[.?!]/.test(word.name)) {\n      curatedWords[curatedWords.length-1].name = curatedWords[curatedWords.length-1].name + word.name;\n      curatedWords[curatedWords.length-1].duration = (parseFloat(curatedWords[curatedWords.length-1].duration) + parseFloat(word.duration)).toString();\n    } else {\n      curatedWords.push(word);\n    }\n  }\n  );\n\n  return curatedWords;\n};\n\nconst speechmaticsToDraft = (speechmaticsJson) => {\n  const results = [];\n\n  let tmpWords;\n  tmpWords = curatePunctuation(speechmaticsJson.words);\n  tmpWords = tmpWords.map((element, index) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      confidence: element.confidence,\n      word: element.name.toLowerCase().replace(/[.?!]/g, ''),\n      punct: element.name,\n      index: index,\n    });\n  });\n\n  let tmpSpeakers;\n  tmpSpeakers = speechmaticsJson.speakers;\n  tmpSpeakers = tmpSpeakers.map((element) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      name: element.name,\n    });\n  });\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    const paragraphStart = paragraph.words[0].start;\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: getSpeaker(paragraphStart, tmpSpeakers),\n        words: paragraph.words,\n        start: paragraphStart\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default speechmaticsToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\nimport speechmaticsToDraft from './speechmatics/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'speechmatics':\n    blocks = speechmaticsToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        onLoadedData={ this.props.onLoadedDataGetDuration }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object,\n  onLoadedDataGetDuration: PropTypes.func\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n  render() {\n    return (\n      <div className={ styles.switchContainer }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked=\"true\"\n            onChange={ this.props.handleMuteVolume }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        <label className={ styles.label }>Volume</label>\n      </div>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VolumeControl from './VolumeControl';\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faSave,\n  faTv,\n  faPlay,\n  faPause,\n  faBackward,\n  faForward,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          title=\"Rollback\"\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          <FontAwesomeIcon icon={ faUndo } />\n        </button>\n\n        <button\n          title=\"Rewind\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faBackward } />\n\n        </button>\n\n        <button\n          title=\"Play\"\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? <FontAwesomeIcon icon={ faPause } /> : <FontAwesomeIcon icon={ faPlay } />}\n        </button>\n\n        <button\n          title=\"Forward\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faForward } />\n        </button>\n\n        <span className={ style.playBackRate }>\n          <Select\n            title=\"Playback rate\"\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playbackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate } />\n        </span>\n\n        <div className={ style.timeBox }>\n          <span title=\"Current time\" className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span title=\"Clip duration\" className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        <button\n          title=\"Save\"\n          className={ style.playerButton }\n          onClick={ this.props.handleSaveTranscript }>\n          <FontAwesomeIcon icon={ faSave } />\n        </button>\n\n        <button\n          title=\"Picture-in-picture\"\n          className={ style.playerButton }\n          onClick={ this.props.pictureInPicture }\n        >\n          <FontAwesomeIcon icon={ faTv } />\n        </button>\n\n        <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        />\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func,\n  pictureInPicture: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max.toString() }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.string,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'alt+k': {\n      priority: 1,\n      handler: () => {\n        self.togglePlayMedia();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+k',\n          name: 'togglePlayMedia',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + k',\n      label: 'Play Media',\n    },\n    'alt+l': {\n      priority: 1,\n      handler: () => {\n        self.skipForward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+l',\n          name: 'skipForward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + l',\n      label: 'Fast Forward',\n    },\n    'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.skipBackward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'skipBackward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Rewind',\n    },\n    'alt+-': {\n      priority: 1,\n      handler: () => {\n        self.decreasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+-',\n          name: 'decreasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + -',\n      label: 'Decrease Playback Speed',\n    },\n    // https://github.com/ccampbell/mousetrap/issues/266\n    'alt+=': {\n      priority: 1,\n      handler: () => {\n        self.increasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+plus',\n          name: 'increasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + +',\n      label: 'Increase Playback Speed',\n    },\n    'alt+r': {\n      priority: 1,\n      handler: () => {\n        self.rollBack();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+r',\n          name: 'rollBack',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + r',\n      label: 'Roll Back',\n    },\n    'alt+t': {\n      priority: 1,\n      handler: () => {\n        self.promptSetCurrentTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+t',\n          name: 'promptSetCurrentTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + t',\n      label: 'set current time',\n    }\n  };\n}\nexport default returnHotKeys;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\nimport { timingSafeEqual } from 'crypto';\n\nconst PLAYBACK_RATES = [\n  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  { value: 2, label: '2' },\n  { value: 2.5, label: '2.5' },\n  { value: 3, label: '3' },\n  { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES,\n      mediaDuration: '00:00:00:00'\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.state.isPlaying) {\n      this.playMedia()\n    }\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // TODO: add some validation, eg if user types just a string it won't crash.\n    // needs function to check it's either timecode on the formats specified above or a number\n    // this could be part of the timecode module(?)\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'promptSetCurrentTime',\n        name: 'userTimecodeValue',\n        value: userTimecodeValue\n      });\n    }\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n\n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'setTimeCodeOffset',\n        name: 'timecodeOffsetValue',\n        value: newTimeCodeOffSet\n      });\n    }\n\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'rollBack',\n          name: 'rollBackValue',\n          value: this.state.rollBackValueInSeconds\n        });\n      }\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.videoRef.current.playbackRate = input;\n\n          if (this.props.handleAnalyticsEvents !== undefined) {\n            this.props.handleAnalyticsEvents({\n              category: 'MediaPlayer',\n              action: 'setPlayBackRate',\n              name: 'playbackRateNewValue',\n              value: input\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'pauseMedia',\n        name: 'pauseMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'playMedia',\n        name: 'playMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = () => {\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying) {\n        this.pauseMedia();\n      }\n      else {\n        this.playMedia();\n      }\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      // TODO track this?\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    // TODO track this?\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'handleProgressBarClick',\n        name: 'roundNewCurrentTime',\n        value: time\n      });\n    }\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n  handleMediaDurationChange =(e) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'mediaDuration',\n        name: secondsToTimecode(e.target.duration),\n        value: e.target.duration\n      });\n    }\n  }\n\n  onLoadedDataGetDuration = (e) => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset = currentDuration+ this.state.timecodeOffset;\n    const durationInSeconds = secondsToTimecode( currentDuration+ currentDurationWithOffset);\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'onLoadedDataGetDuration',\n        name: 'durationInSeconds-WithoutOffset',\n        value: secondsToTimecode( currentDuration)\n      });\n    }\n\n  }\n\n  handlePictureInPicture = () => {\n    if (this.videoRef.current !== null) {\n      if (document.pictureInPictureElement !== undefined) {\n      // from https://developers.google.com/web/updates/2017/09/picture-in-picture\n        if (!document.pictureInPictureElement) {\n\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-on'\n          });\n\n          this.videoRef.current.requestPictureInPicture()\n            .catch(error => {\n              // Video failed to enter Picture-in-Picture mode.\n              console.error('Video failed to enter Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-on-error'\n              });\n\n            });\n\n        } else {\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-off'\n          });\n          document.exitPictureInPicture()\n            .catch(error => {\n              // Video failed to leave Picture-in-Picture mode.\n              console.error('Video failed to leave Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-off-error'\n              });\n            });\n        }\n      } else {\n        alert('Picture in Picture not supported in this browser, try chrome.');\n\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'handlePictureInPicture',\n          name: 'picture-in-picture-not-supported'\n        });\n\n      }\n    }\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n      onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.fileName? this.props.fileName : this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.state.mediaDuration }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n          pictureInPicture={ this.handlePictureInPicture }\n          handleSaveTranscript={ () => {this.props.handleSaveTranscript();} }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration).toString() : '100' }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  fileName: PropTypes.string,\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'resetTimecodeOffset',\n      name: 'resetTimecodeOffset',\n      value: 0\n    });\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'setTimecodeOffset',\n      name: 'setTimecodeOffset',\n      value: this.state.timecodeOffset\n    });\n\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds ==='string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"text\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key, i) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ i } className={ style.listItem }>\n        <div className={ style.shortcut }>{shortcut.displayKeyCombination}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <h2 className={ style.header }>Shortcuts</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleShortcutsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nShortcuts.propTypes = {\n  handleShortcutsToggle: PropTypes.func\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faKeyboard } from '@fortawesome/free-solid-svg-icons';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\nimport { secondsToTimecode } from '../Util/timecode-converter/index';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n    this.timedTextEditorRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Transcript and media passed to component at same time\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n        && (prevProps.mediaUrl !== this.props.mediaUrl )\n    ) {\n      console.info('Transcript and media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Transcript first and then media passed to component\n    else if (\n      (prevState.transcriptData === this.state.transcriptData)\n      && (prevProps.mediaUrl !== this.props.mediaUrl)\n    ) {\n      console.info('Transcript first and then media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Media first and then transcript passed to component\n    else if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && (prevProps.mediaUrl === this.props.mediaUrl)\n    ) {\n      console.info('Media first and then transcript');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n  }\n\n  ifPresentRetrieveTranscriptFromLocalStorage = () => {\n    // if (this.timedTextEditorRef.current!== undefined) {\n    if (this.timedTextEditorRef.current) {\n      console.log(this.timedTextEditorRef)\n      if (this.timedTextEditorRef.current.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.info('was already present in local storage');\n        this.timedTextEditorRef.current.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.info('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleWordClick = (startTime) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'doubleClickOnWord',\n        name: 'startTime',\n        value: secondsToTimecode(startTime)\n      });\n    }\n\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleIsScrollIntoViewChange',\n        name: 'isScrollIntoViewOn',\n        value: isChecked\n      });\n    }\n\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handlePauseWhileTyping',\n        name: 'isPauseWhileTypingOn',\n        value: isChecked\n      });\n    }\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleRollBackValueInSeconds',\n        name: 'rollBackValueInSeconds',\n        value: rollBackValue\n      });\n    }\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n\n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.timedTextEditorRef.current.forceUpdate();\n      });\n  }\n\n  handleShowTimecodes = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowTimecodes',\n        name: 'showTimecodes',\n        value: isChecked\n      });\n    }\n  }\n\n  handleShowSpeakers = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowSpeakers',\n        name: 'showSpeakers',\n        value:  isChecked\n      });\n    }\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleSettingsToggle',\n        name: 'showSettings',\n        value:  !this.state.showSettings\n      });\n    }\n  }\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShortcutsToggle',\n        name: 'showShortcuts',\n        value:  !this.state.showShortcuts\n      });\n    }\n  }\n\n  getEditorContent = (exportFormat) => {\n    return this.timedTextEditorRef.current.getEditorContent(exportFormat);\n  }\n\n  handleSaveTranscript = () => {\n    return this.timedTextEditorRef.current.localSave(this.props.mediaUrl);\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      fileName={ this.props.fileName }\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n      // ref={ 'MediaPlayer' }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n      handleSaveTranscript={ this.handleSaveTranscript }\n      playingWhileListening = { this.props.playingWhileListening }\n    />;\n\n    const settings = <Settings\n      handleSettingsToggle={ this.handleSettingsToggle }\n      defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n      defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n      defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      handlePauseWhileTyping={ this.handlePauseWhileTyping }\n      handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n      handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n      handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n      handleShowTimecodes={ this.handleShowTimecodes }\n      handleShowSpeakers={ this.handleShowSpeakers }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    const shortcuts = <Shortcuts\n      handleShortcutsToggle={ this.handleShortcutsToggle }\n    />;\n\n    const timedTextEditor = <TimedTextEditor\n      fileName={ this.props.fileName }\n      transcriptData={ this.state.transcriptData }\n      timecodeOffset={ this.state.timecodeOffset }\n      onWordClick={ this.handleWordClick }\n      playMedia={ this.handlePlayMedia }\n      isPlaying={ this.handleIsPlaying }\n      currentTime={ this.state.currentTime }\n      isEditable={ this.props.isEditable }\n      sttJsonType={ this.props.sttJsonType }\n      mediaUrl={ this.props.mediaUrl }\n      isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n      isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      ref={ this.timedTextEditorRef }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    return (\n      <div className={ style.container }>\n        <header className={ style.header }>\n          { this.state.showSettings ? settings : null }\n          { this.state.showShortcuts ? shortcuts : null }\n        </header>\n\n        <aside className={ style.aside }>{ this.props.mediaUrl ? mediaPlayer : null }</aside>\n\n        <div className={ style.settingsContainer }>\n          <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }>\n            <FontAwesomeIcon icon={ faCog } />\n          </button>\n          <button className={ style.settingsButton } onClick={ this.handleShortcutsToggle }>\n            <FontAwesomeIcon icon={ faKeyboard } />\n          </button>\n        </div>\n\n        <main className={ style.main }>\n          {this.props.mediaUrl === null? null : timedTextEditor}\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n  handleAnalyticsEvents: PropTypes.func,\n  fileName: PropTypes.string\n};\n\nexport default TranscriptEditor;\n","import SpeechRecognition from './SpeechRecognition'\n\nexport default SpeechRecognition\n","import React, { Component } from 'react'\n\nexport default function SpeechRecognition(options) {\n  const SpeechRecognitionInner = function (WrappedComponent) {\n    const BrowserSpeechRecognition =\n      typeof window !== 'undefined' &&\n      (window.SpeechRecognition ||\n        window.webkitSpeechRecognition ||\n        window.mozSpeechRecognition ||\n        window.msSpeechRecognition ||\n        window.oSpeechRecognition)\n    const recognition = BrowserSpeechRecognition\n      ? new BrowserSpeechRecognition()\n      : null\n    const browserSupportsSpeechRecognition = recognition !== null\n    let listening\n    if (\n      !browserSupportsSpeechRecognition ||\n      (options && options.autoStart === false)\n    ) {\n      listening = false\n    } else {\n      recognition.start()\n      listening = true\n    }\n    let pauseAfterDisconnect = false\n    let interimTranscript = ''\n    let finalTranscript = ''\n\n    // TODO put this as the retval key using template found in src/sample-data/KateDarling_2018S-bbc-kaldi.json\n    const newTranscriptData = () => ({\n      status: true,\n      wonid: \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\", // don't know this one, probably will generate something\n      punct: \"\", // total transcript of all the words TODO currently not setting\n      words: [], // array of newWordData objects\n    })\n    \n\n    return class SpeechRecognitionContainer extends Component {\n      constructor(props) {\n        super(props)\n\n        this.state = {\n          interimTranscript,\n          finalTranscript,\n          transcriptData: {},\n          listening: false,\n          allResults: [],\n          speechTimerStartedAt: false, // ms since Jan 1 1970\n        }\n\n        // TODO do the binding thing so don't have to do the crazy arrow funcs here\n      }\n\n      componentWillMount() {\n        if (recognition) {\n          recognition.continuous = false // originally set to true, but this breaks up the words into smaller fragments much better\n          recognition.interimResults = true\n          recognition.onresult = this.updateTranscript.bind(this)\n          recognition.onend = this.onRecognitionDisconnect.bind(this)\n          // onspeechstart/end or onsoundstart/end might be useful\n          /*\n    recognition.onspeechend = () => {console.log(\"speech is now ending\")}\n    recognition.onspeechstart = () => {console.log(\"speech is now starting\")}\n    recognition.onsoundstart = () => {console.log(\"sound is now starting\")}\n    recognition.onsoundend = () => {console.log(\"sound is now ending\")}\n    recognition.nomatch = () => {console.log(\"no match!!!11\")}\n    recognition.onboundary = () => {console.log(\"boundary found!\")}\n    recognition.onresume = () => {console.log(\"resume found!\")}\n    recognition.onmark = () => {console.log(\"mark found!\")}\n    recognition.onpause = () => {console.log(\"pause found!\")}\n    */\n          this.setState({\n            listening,\n            transcriptData: newTranscriptData()\n          })\n        }\n      }\n\n      disconnect (disconnectType) {\n        if (recognition) {\n          switch (disconnectType) {\n            case 'ABORT':\n              pauseAfterDisconnect = true\n              recognition.abort()\n              break\n            case 'RESET':\n              pauseAfterDisconnect = false\n              recognition.abort()\n              break\n            case 'STOP':\n            default:\n              pauseAfterDisconnect = true\n              recognition.stop()\n          }\n        }\n      }\n\n      // minutes elapsed since started.\n      minElapsed = () => {\n        return (Date.now() - this.state.speechTimerStartedAt)/1000;\n      }\n\n      newWordData = (wordResults) => {\n        const words = wordResults.transcript;\n        // remove all punctuation and lowercase it\n        const allWordData = this.state.transcriptData.words;\n        const start = allWordData.length > 0 ? allWordData[allWordData.length - 1].end : 0;\n        const end = this.minElapsed();\n        const punct = words.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '');\n\n        // format required for the bbc lib\n        return {\n          start, // time in minutes, using decimals not seconds, eg 13.02 (float)\n          confidence: wordResults.confidence, // %, out of 1, eg 0.68 (float)\n          end, // end time in min\n          word: words, // all words, not formatted (and lowercase), eg \"there\" (string)\n          punct, // word, as displayed, eg \"There\" (string)\n          index: allWordData.length,\n        }\n      }\n\n      onRecognitionDisconnect = () => {\n        listening = false\n        if (pauseAfterDisconnect) {\n          this.setState({ listening })\n        } else {\n          this.startListening()\n        }\n        pauseAfterDisconnect = false\n      }\n\n      // TODO might stop getting interim results and handling them if it hurts performance\n      updateTranscript = (event) => {\n        interimTranscript = ''\n        // looks like they iterate over same results every time, rather than gradually compiling as it goes. Could slow things down if transcript gets long TODO\n        let newState = {\n          // might not need\n          allResults: event.results\n        }\n        // console.log(event.results)\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            let wordResults = event.results[i][0]\n            finalTranscript = this.concatTranscripts(\n              finalTranscript,\n              wordResults.transcript\n            )\n\n            let newWordData = this.newWordData(wordResults)\n            //TODO bad practice modifying original object like this!\n            let transcriptData = this.state.transcriptData\n            transcriptData.words.push(newWordData)\n            \n            newState.finalTranscript = finalTranscript\n            newState.transcriptData = transcriptData\n\n          } else {\n            interimTranscript = this.concatTranscripts(\n              interimTranscript,\n              event.results[i][0].transcript\n            )\n            newState.finalTranscript = interimTranscript\n          }\n        }\n\n        this.setState(newState)\n      }\n\n      // returns string with all transcript together\n      concatTranscripts(...transcriptParts) {\n        return transcriptParts.map(t => t.trim()).join(' ').trim()\n      }\n\n      resetTranscript = () => {\n        interimTranscript = ''\n        finalTranscript = ''\n        this.disconnect('RESET')\n        this.setState({ \n          interimTranscript, \n          finalTranscript,\n          transcriptData: newTranscriptData(),\n          speechTimerStartedAt: false,\n        })\n      }\n\n      startListening = () => {\n        if (recognition && !listening) {\n          try {\n            recognition.start()\n          } catch (DOMException) {\n            // Tried to start recognition after it has already started - safe to swallow this error\n          }\n          listening = true\n          let newState = {listening}\n          if (!this.state.speechTimerStartedAt) {\n            newState.speechTimerStartedAt = Date.now()\n          }\n\n          this.setState(newState)\n        }\n      }\n\n      abortListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('ABORT')\n      }\n\n      stopListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('STOP')\n      }\n\n      render() {\n        // includes both\n        const transcript = this.concatTranscripts(\n          finalTranscript,\n          interimTranscript\n        )\n\n        const totalTimeElapsed = this.minElapsed()\n\n        return (\n          <WrappedComponent\n            resetTranscript={this.resetTranscript}\n            startListening={this.startListening}\n            abortListening={this.abortListening}\n            stopListening={this.stopListening}\n            transcript={transcript}\n            recognition={recognition}\n            allResults={this.state.allResults}\n            listening={this.state.listening}\n            transcriptData={this.state.transcriptData}\n            interimTranscript={this.state.interimTranscript}\n            finalTranscript={this.state.finalTranscript}\n            browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n            totalTimeElapsed={totalTimeElapsed}\n            {...this.props} />\n        )\n      }\n    }\n  }\n\n  if (typeof options === 'function') {\n    return SpeechRecognitionInner(options)\n  } else {\n    return SpeechRecognitionInner\n  }\n}\n","import React, { Component } from 'react'\n// import getAudio from './getAudio'\nimport SpeechRecognition from '../updated-react-speech-recognition/src/'\nimport { secondsToTimecode, timecodeToSeconds } from '../Util/timecode-converter/index';\n\n/*\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n}\n*/\n\nclass GenerateTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.stop = this.stop.bind(this)\n    this.start = this.start.bind(this)\n    this.reset = this.reset.bind(this)\n    this.generateJSON = this.generateJSON.bind(this)\n\n    // props.recognition.onresult\n    // set default language to Khmer TODO add options?\n    // https://www.science.co.il/language/Locale-codes.php for codes\n    props.recognition.lang = \"km\"\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.props.listening) {\n      this.props.startListening()\n    }\n  }\n\n  stop(e) {\n    this.props.stopListening()\n  }\n  start(e) {\n    // console.log(\"starting\")\n    this.props.startListening()\n  }\n  generateJSON(e) {\n    let transcriptJSON = {\n      action: \"audio-transcribe\",\n      retval: this.props.transcriptData\n    }\n    // if use finalTranscript, anything that hasn't been finalized isn't counted, which would be confusing, since even if you wait sometimes it isn't yet made final\n    transcriptJSON.retval.punct = this.props.transcript\n\n    this.setState({\n      transcriptJSON\n    })\n\n    // console.log(transcriptJSON)\n    // content, filename, format\n    let filename = this.props.fileName.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/\\s/g, \"-\")\n    let prettyData = JSON.stringify(transcriptJSON, null, 4)\n\n    this.props.download(prettyData, `${ filename }.json`)\n\n    return transcriptJSON\n  }\n  reset(e) {\n    this.props.resetTranscript()\n  }\n  render() {\n    const {\n      transcript,\n      browserSupportsSpeechRecognition,\n      // interimTranscript,\n      listening,\n      // allResults\n    } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      // NOTE happens several times, as this gets rerendered for some reason. Returns false even when browser can support sometimes for some reason too, but eventually returns true\n      return null\n    }\n    //TODO add back in once we switch over to using my fork  which passes down all results as an array rather than compiling all into a string\n\n    return (\n      <div>\n        <h1>Speech Recognition</h1>\n        <button onClick = { this.reset } >Reset</button>\n        <button onClick = { this.start } >Start</button>\n        <button onClick = { this.stop } >Stop</button>\n        <button onClick = { this.generateJSON } >Generate Transcript JSON</button>\n        <div className=\"transcript-container\" style={ { height: '240px', overflowY: 'auto' } }>\n          {\n            <div>{transcript}</div>\n          }\n        </div>\n        { listening ? (\n          <span>\n            *Listening* Total Time Elapsed: {secondsToTimecode(this.props.totalTimeElapsed)}\n          </span>\n        ) : (\n          <div>&nbsp;</div>\n        )}\n        {false && <div>\n          <p>Volume</p>\n          <input id=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.5\"/>\n        </div>}\n\n      </div>\n    )\n  }\n}\n\n// GenerateTranscript.propTypes = propTypes\n\nconst options = {\n  autoStart: false\n}\nexport default SpeechRecognition(options)(GenerateTranscript)\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\">Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor, GenerateTranscript } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n      analyticsEvents: [],\n      fileName: 'Khmer Transcript Data',\n      playingWhileListening: false,\n    };\n\n    this.transcriptEditorRef = React.createRef();\n    this.startListeningAndPlayingMedia = this.startListeningAndPlayingMedia.bind(this)\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  startListeningAndPlayingMedia(e) {\n    this.setState({playingWhileListening: true})\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n        fileName: file.name\n      });\n    }\n    else {\n      alert('select a valid audio or video file');\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const file = files[0];\n\n    if (file.type ==='application/json') {\n      const fr = new FileReader();\n\n      fr.onload = (evt) => {\n        this.setState({\n          transcriptData: JSON.parse(evt.target.result)\n        });\n      };\n\n      fr.readAsText(file);\n\n    }\n    else {\n      alert('select a valid json file');\n    }\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.transcriptEditorRef.current.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n  download = (content, filename, contentType) => {\n    const type = contentType || 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([ content ], { type: type });\n\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n  }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   handleAnalyticsEvents = (event) => {\n     this.setState({ analyticsEvents: [ ...this.state.analyticsEvents, event ] });\n   }\n\n   handleChangeTranscriptName = (value) => {\n     this.setState({ fileName: value });\n   }\n\n   playMedia\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>Khmer Transcript Creator</mark> - Component |&nbsp;\n           <a\n             href=\"https://github.com/RyanQuey/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <GenerateTranscript\n           download = { this.download }\n           fileName = {this.state.fileName}\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>Load Local Audio or Video Media:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or&nbsp;\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n         <br/>\n         <label>Transcript Json Format:&nbsp;</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         &nbsp;&nbsp;\n         <label>Transcript Json:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n         <br />\n\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n\n         <label>Transcript Name</label>\n         <input\n           type=\"text\"\n           onChange={ e => this.handleChangeTranscriptName(e.target.value) }\n           value={ this.state.fileName }\n         />\n         <br />\n\n         <label>Export Edited Transcript:&nbsp;</label>\n         <button onClick={ () => this.exportTranscript() }>Export</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         {this.state.mediaUrl &&\n           <button onClick={ () => this.startListeningAndPlayingMedia() }>Generate Transcript from Media</button>\n         }\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData = { this.state.transcriptData }\n           fileName = { this.state.fileName }\n           mediaUrl = { this.state.mediaUrl }\n           isEditable = { this.state.isTextEditable }\n           sttJsonType = { this.state.sttType }\n           handleAnalyticsEvents = { this.handleAnalyticsEvents }\n           ref = { this.transcriptEditorRef }\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <hr/>\n\n         <label>Components Analytics</label>\n         <textarea\n           style={ { height: '200px', width: '100%' } }\n           value={ JSON.stringify(this.state.analyticsEvents, null, 2) }\n           disabled>\n         </textarea>\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__3Ky6T\",\"markers\":\"WrapperBlock_markers__3ILw6\",\"text\":\"WrapperBlock_text__29dkP\",\"speaker\":\"WrapperBlock_speaker__3hDu5\",\"time\":\"WrapperBlock_time__7MR_0\",\"EditLabel\":\"WrapperBlock_EditLabel__3srCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__E-szq\",\"header\":\"Shortcuts_header__ujg-G\",\"closeButton\":\"Shortcuts_closeButton__1uaCk\",\"list\":\"Shortcuts_list__1wVGG\",\"listItem\":\"Shortcuts_listItem__Jnjzl\",\"shortcut\":\"Shortcuts_shortcut__GWLsC\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__1cOKX\",\"settingElement\":\"Shortcuts_settingElement__38_ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"container\":\"TranscriptEditor_container__2Ykm6\",\"header\":\"TranscriptEditor_header__3PNk9\",\"main\":\"TranscriptEditor_main__VyUon\",\"aside\":\"TranscriptEditor_aside__fkJSE\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__LUrRi\",\"settingsButton\":\"TranscriptEditor_settingsButton__1jEwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__2Wqp0\",\"playerSection\":\"MediaPlayer_playerSection__1WRFX\",\"controlsSection\":\"MediaPlayer_controlsSection__2JdaW\",\"titleBox\":\"MediaPlayer_titleBox__2Alx5\",\"title\":\"MediaPlayer_title__1Tw_5\",\"helpText\":\"MediaPlayer_helpText__3vCf-\",\"hideInMobile\":\"MediaPlayer_hideInMobile__1PWAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"VolumeControl_switchContainer__3Rvar\",\"label\":\"VolumeControl_label__3BTVJ\",\"switch\":\"VolumeControl_switch__39OLJ\",\"slider\":\"VolumeControl_slider__nvKJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__3IRin\",\"inputBox\":\"TimecodeOffset_inputBox__1lmnx\",\"button\":\"TimecodeOffset_button__5qwpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__3zVEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__3i-of\",\"label\":\"Toggle_label__1xsUr\",\"switch\":\"Toggle_switch__v31XM\",\"slider\":\"Toggle_slider__3r6Az\"};"],"sourceRoot":""}