{"version":3,"sources":["lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css","lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/Util/khmer-numbers/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/speechmatics/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/Util/export-adapters/index.js","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","lib/updated-react-speech-recognition/src/index.js","lib/updated-react-speech-recognition/src/SpeechRecognition.js","lib/GenerateTranscript/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css"],"names":["module","exports","color-light-grey","color-labs-red","bar","selectPlayerControl","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-darkest-grey","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","color-subt-green","DraftEditor-root","editor","help","icon","helpMessage","color-mid-grey","color-dark-grey","WrapperBlock","markers","text","speaker","time","EditLabel","jumpToHere","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","block","getData","words","Map","isMap","toJSON","wordsData","react_default","a","createElement","style","display","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","data-block-key","getKey","className","children","PureComponent","SpeakerLabel","onClick","handleOnClickEdit","index_es","faUserEdit","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","numberMap","១","២","៣","៤","៥","៦","៧","៨","៩","០","convertToArabicNumbers","num","String","keys","Object","key","RegExp","window","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","blockProps","handleAnalyticsEvents","category","action","value","keyForCurrentCurrentBlock","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","contentState","setEditorNewContentState","getPrevStartTime","prevBlock","getBlockBefore","prevBlockStart","get","getEndTime","nextBlock","getBlockAfter","nextBlockStart","handleTimecodeClick","wasPlaying","isPlaying","togglePlayMedia","interval","setInterval","clearInterval","currentBlockTime","currentVideoTime","newStartTime","NaN","endTime","isNaN","alert","console","log","newBlockData","newerEditorState","previousBlock","previousBlockSelection","prevBlockSelectionState","prevWordsData","List","isList","newPrevBlockData","newPrevBlockContentState","getCurrentContent","error","doIt","handleJumpToHereClick","e","preventDefault","onJumpToHereClick","state","timecodeOffset","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","showSpeakers","faMapMarker","onMouseDown","showTimecodes","TimedTextEditor_Word","Draft","React","Component","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","word","push","punct","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","type","generateEntitiesRanges","wordAttributeName","position","map","result","offset","random","toString","substring","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","test","entityRanges","getSpeaker","speakers","speakerIdx","speechmaticsToDraft","speechmaticsJson","tmpWords","tmpSpeakers","curatedWords","curatePunctuation","element","index","toLowerCase","paragraphStart","sttJsonAdapter","transcriptData","sttJsonType","blocks","entityMap","txt","blockData","x","exportAdapter","exportFormat","JSON","stringify","ext","draftToTxt","TimedTextEditor","KeyBindingUtil","hasCommandModifier","onChange","isPauseWhileTypingOn","playMedia","clearTimeout","pauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","saveTimer","localSave","mediaUrl","handleDoubleClick","event","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","onWordClick","mediaUrlName","fileName","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","getWordCount","wordArray","getPlainText","trim","match","setEditorContentState","convertFromRaw","createWithContent","forceRenderDecorator","newState","newEditorState","customKeyBindingFn","keyCode","altKey","getDefaultKeyBinding","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","originalBlockData","blockSpeaker","wordStartTime","wordsDataForNew","fromJS","newBlock","setIn","getText","afterMergeContentState","newestEditorState","wordsDataForOld","wordsLeft","afterMergeContentState2","updateTimecode","renderBlockWithTimecodes","component","editable","settingTimecodeFor","getCurrentWord","checkToScroll","arguments","currentWord","nextWord","next","isScrollIntoViewOn","nextWordElement","document","querySelector","scrollIntoView","inline","loadData","prevProps","prevState","isPresentInLocalStorage","format","getItem","parse","lastLocalSavedDate","_this2","faMousePointer","faICursor","faKeyboard","faSave","tooltip","es","content","fadeDuration","fadeEasing","placement","radius","faQuestionCircle","round","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","onLoadedData","onLoadedDataGetDuration","ref","videoRef","VolumeControl","styles","switchContainer","switch","defaultChecked","handleMuteVolume","slider","Select","options","option","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","skipBackward","setIntervalHelperForward","skipForward","clearIntervalHelper","title","rollback","faUndo","onMouseUp","faBackward","faPause","faPlay","faForward","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","promptSetCurrentTime","handleSaveTranscript","pictureInPicture","faTv","MediaPlayer_VolumeControl","ProgressBar","progress","buttonClick","min","max","returnHotKeys","self","alt+k","priority","handler","displayKeyCombination","alt+l","alt+-","decreasePlaybackRate","alt+=","increasePlaybackRate","alt+u","jumpToStartOfBlock","alt+j","rollBack","alt+t","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","rollBackValueInSeconds","tmpDesiredCurrentTime","timedTextEditorRef","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","input","slower","reverse","find","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","bool","handleProgressBarClick","getMediaCurrentTime","handleMediaDurationChange","currentDuration","currentDurationWithOffset","durationInSeconds","mediaDuration","handlePictureInPicture","pictureInPictureElement","exitPictureInPicture","catch","requestPictureInPicture","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","playingWhileListening","player","MediaPlayer_VideoPlayer","playerControlsSection","controlsSection","titleBox","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","defaultValue","handleToggle","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","faWindowClose","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","shortcut","listItem","shortcutLabel","shortcuts","handleShortcutsToggle","list","TranscriptEditor","ifPresentRetrieveTranscriptFromLocalStorage","info","loadLocalSavedData","handleWordClick","handlePlayMedia","handleIsPlaying","isChecked","checked","rollBackValue","forceUpdate","showSettings","showShortcuts","getEditorContent","lastLocalSavedTime","mediaPlayer","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","Settings_Shortcuts","timedTextEditor","TranscriptEditor_TimedTextEditor","container","aside","settingsContainer","settingsButton","faCog","main","SpeechRecognition","SpeechRecognitionInner","WrappedComponent","listening","BrowserSpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","browserSupportsSpeechRecognition","autoStart","pauseAfterDisconnect","interimTranscript","finalTranscript","newTranscriptData","status","wonid","_Component","SpeechRecognitionContainer","minElapsed","now","speechTimerStartedAt","newWordData","wordResults","transcript","allWordData","onRecognitionDisconnect","startListening","updateTranscript","allResults","resultIndex","isFinal","concatTranscripts","resetTranscript","disconnect","DOMException","abortListening","stopListening","inherits","createClass","continuous","interimResults","onresult","onend","disconnectType","abort","stop","_len","transcriptParts","Array","_key","totalTimeElapsed","assign","GenerateTranscript","reset","generateJSON","lang","transcriptJSON","filename","prettyData","download","_this$props","height","overflowY","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$transcriptEdito","transcriptEditorRef","contentType","blob","Blob","href","URL","createObjectURL","click","clearLocalStorage","clear","analyticsEvents","toConsumableArray","handleChangeTranscriptName","sttType","startListeningAndPlayingMedia","hunSenInterviewPart1Transcript","files","file","canPlayType","fileURL","fr","FileReader","onload","evt","readAsText","_this3","rel","lib_GenerateTranscript","loadDemo","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_stt_json_type","handleChangeLoadTranscriptJson","select_export_format","lib_TranscriptEditor","width","render","src_App","getElementById","color-lightest-grey","helpText","hideInMobile"],"mappings":"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","file":"static/js/main.29a691c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__3lESu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__K8I2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__131gP\",\"header\":\"Settings_header__3gK1h\",\"closeButton\":\"Settings_closeButton__wD_fB\",\"controlsContainer\":\"Settings_controlsContainer__j6tEh\",\"settingElement\":\"Settings_settingElement__ErFP7\",\"label\":\"Settings_label__3QTmN\",\"rollbackValue\":\"Settings_rollbackValue__1OTsV\",\"timecodeLabel\":\"Settings_timecodeLabel__1LKIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__17zIK\",\"playerButton\":\"PlayerControls_playerButton__1zxDP\",\"playBackRate\":\"PlayerControls_playBackRate__3b9Gj\",\"timeBox\":\"PlayerControls_timeBox__3gHFS\",\"currentTime\":\"PlayerControls_currentTime__16CX-\",\"separator\":\"PlayerControls_separator__3IO7E\",\"duration\":\"PlayerControls_duration__1r95o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__bIxvS\",\"editor\":\"TimedTextEditor_editor__2Qhw9\",\"help\":\"TimedTextEditor_help__AP8BA\",\"icon\":\"TimedTextEditor_icon__1BfEt\",\"helpMessage\":\"TimedTextEditor_helpMessage__3fn_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__3Ky6T\",\"markers\":\"WrapperBlock_markers__3ILw6\",\"text\":\"WrapperBlock_text__29dkP\",\"speaker\":\"WrapperBlock_speaker__3hDu5\",\"time\":\"WrapperBlock_time__7MR_0\",\"EditLabel\":\"WrapperBlock_EditLabel__3srCB\",\"jumpToHere\":\"WrapperBlock_jumpToHere__14vpQ\"};","import React, { PureComponent } from 'react';\nimport { Map, List, fromJS } from 'immutable'\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    // including a lot of catchers since there always seems to be an empty block with no text and data sneaking in here\n    let data = this.props.block && this.props.block.getData() || { words: [ {} ] }\n    if (Map.isMap(data)) {\n      data = data.toJSON()\n    }\n    let wordsData = data.words || {}\n    wordsData = wordsData[0] ? wordsData[0] : {}\n\n\n    return (\n      <div\n        style={ {\n          display: 'inline-block',\n        } }\n        data-start={ wordsData.start }\n        data-end={ wordsData.end }\n        data-confidence = { this.generateConfidence(wordsData) }\n        data-prev-times = { this.generatePreviousTimes(wordsData) }\n        data-entity-key={ '' }\n        data-block-key={ this.props.block.getKey() }\n        className=\"Word\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  //entityKey: PropTypes.string,\n  block: PropTypes.object,\n  // children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }>\n          <FontAwesomeIcon icon={ faUserEdit } />\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n\n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","/**\n */\n\n/**\n * @param {*} time string potentially with khmer numbers\n */\nconst numberMap = {\n  '១': 1,\n  '២': 2,\n  '៣': 3,\n  '៤': 4,\n  '៥': 5,\n  '៦': 6,\n  '៧': 7,\n  '៨': 8,\n  '៩': 9,\n  '០': 0\n}\n\n// quick and dirty solution, though probably not as fast as char codes or whatever\nconst convertToArabicNumbers = (num) => {\n  let str = num\n  if (typeof str !== 'string') {\n    str = String(str)\n  }\n  const keys = Object.keys(numberMap)\n  for (var i = 0; i < keys.length; i ++) {\n    let key = keys[i]\n    str = str.replace(new RegExp(key, \"g\"), numberMap[key])\n  }\n\n\n  return str\n};\n\nexport { convertToArabicNumbers };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport Word from './Word';\nimport { shortTimecode, secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/';\nimport { convertToArabicNumbers } from '../../Util/khmer-numbers/';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapMarker } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\nimport { Map, List, fromJS } from 'immutable'\n\nwindow.convertToArabicNumbers = convertToArabicNumbers\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0, // time in seconds from start of media\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n\n    this.setState({\n      speaker: speaker,\n      start: start,\n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n      if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n        this.props.blockProps.handleAnalyticsEvents({\n          category: 'WrapperBlock',\n          action: 'handleOnClickEdit',\n          name: 'newSpeakerName',\n          value: newSpeakerName\n        });\n      }\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  getPrevStartTime = () => {\n    const keyForCurrentCurrentBlock = this.props.block.getKey();\n    const prevBlock = this.props.contentState.getBlockBefore(keyForCurrentCurrentBlock); \n    // won't be a prev block if it's the first block!\n    const prevBlockStart = prevBlock ? prevBlock.getData().get('start') : 0;\n\n    return parseFloat(prevBlockStart)\n  }\n\n  getEndTime = () => {\n    const keyForCurrentCurrentBlock = this.props.block.getKey();\n    const nextBlock = this.props.contentState.getBlockAfter(keyForCurrentCurrentBlock); \n    // won't be a next block if it's the last block, so setting really high number\n    const nextBlockStart = nextBlock ? nextBlock.getData().get('start') : 9*999*999*999;\n\n    return parseFloat(nextBlockStart)\n  }\n\n  // changes the timeblock's timing\n  handleTimecodeClick = () => {\n    let wasPlaying = this.props.blockProps.isPlaying();\n    this.props.blockProps.togglePlayMedia(false);\n\n    // does the whole thing after making sure it's really paused\n    const doIt = () => {\n      const currentBlockTime = secondsToTimecode(this.props.block.getData().get('start'));\n      // TODO not accurate; bad practice, but fastest quick fix would be to use js to just grab the element of the video player and grab the text \n      const currentVideoTime = secondsToTimecode(this.props.blockProps.currentTime);\n      let newStartTime = prompt(`Edit Time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds (originally at ${ currentBlockTime })`, currentVideoTime);\n\n      if (newStartTime !== '' && newStartTime !== null && parseInt(newStartTime) !== NaN) {\n        // in case of khmer numbers getting thrown in there\n        newStartTime = convertToArabicNumbers(newStartTime)\n\n        if (newStartTime.includes(':')) {\n          newStartTime = timecodeToSeconds(newStartTime)\n        }\n        newStartTime = parseFloat(newStartTime)\n\n        // make them put in new time or just cancel if start time is after end time\n        let endTime = this.getEndTime()\n        if (!isNaN(newStartTime) && !isNaN(endTime) && newStartTime >= endTime) {\n          alert(\"Start Time must be before next block's start time\")\n\n          return\n        } else if (!isNaN(newStartTime) && !isNaN(endTime) && newStartTime <= this.getPrevStartTime()) {\n          alert(\"Start Time must be after previous block's start time\")\n\n          return\n        }\n\n        this.setState({ start: newStartTime });\n\n        // Get key of the currentBlock\n        const keyForCurrentCurrentBlock = this.props.block.getKey();\n\n        // create empty selection for current block\n        // https://draftjs.org/docs/api-reference-selection-state#createempty\n        const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n        const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n        const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n\n        let wordsData = this.props.block.getData().get('words') || [ {} ]; // really should just break...being too flexible here...\n        // if (!List.isList(wordsData) || !Map.isMap(wordsData)) {\n        if (Map.isMap(wordsData)) {\n          console.log(\"words data was a map\");\n          wordsData = wordsData.toJSON();\n        }\n        // wordsData = wordsData.setIn([ 0, 'start' ], newStartTime)\n        console.log(\"words data\", wordsData);\n        wordsData[0].start = newStartTime;\n\n        const newBlockData = {\n          start: newStartTime,\n          words: wordsData,\n        };\n\n        // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n        const newContentState = Modifier.mergeBlockData(\n          this.props.contentState,\n          currentBlockSelectionState,\n          newBlockData\n        );\n\n        const newerEditorState = this.props.blockProps.setEditorNewContentState(newContentState);\n\n        //////////////////////////////////////////////////////\n        // set end time of previous block to this start time TODO (though if never use end time in app, might not be necessary\n        const previousBlock = this.props.contentState.getBlockBefore(keyForCurrentCurrentBlock);\n        // won't be a prev block if it's the first block\n        if (previousBlock) {\n          const previousBlockSelection = SelectionState.createEmpty(previousBlock.getKey());\n          const editorStateWithSelectedPrevBlock = EditorState.acceptSelection(this.props.blockProps.editorState, previousBlockSelection);\n\n          const prevBlockSelectionState = editorStateWithSelectedPrevBlock.getSelection();\n          let prevWordsData = previousBlock.getData().get('words') || [ {} ]// really should just break...being too flexible here...\n          // draft js will turn into immutable anyways, so might as well beat them to the punch\n          // if (!List.isList(prevWordsData) || !Map.isMap(prevWordsData)) {\n          if (List.isList(prevWordsData)) {\n            prevWordsData = prevWordsData.toJSON()\n          }\n          if (Map.isMap(prevWordsData[0])) {\n            prevWordsData[0] = prevWordsData[0].toJSON()\n          }\n          // prevWordsData = prevWordsData.setIn([ 0, 'end' ], newStartTime)\n          prevWordsData[0].end = newStartTime\n\n          const newPrevBlockData = {\n            words: prevWordsData,\n          };\n\n          // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n          const newPrevBlockContentState = Modifier.mergeBlockData(\n            newerEditorState.getCurrentContent(),\n            prevBlockSelectionState,\n            newPrevBlockData\n          );\n\n          this.props.blockProps.setEditorNewContentState(newPrevBlockContentState);\n        }\n      } else {\n        console.error(\"What went wrong setting timeblock time?\", newStartTime)\n      }\n      if (wasPlaying) {\n        this.props.blockProps.togglePlayMedia(true)\n      }\n    }\n\n    // this is so bad...but so is using prompt ha\n    // makes sure that the video stops, because if prompt opens before it stops, it keeps playign\n    const interval = setInterval(() => {\n      if (!this.props.blockProps.isPlaying()) {\n        clearInterval(interval)\n        doIt();\n      }\n    }, 20)\n\n  }\n\n  handleJumpToHereClick = (e) => {\n    // https://github.com/facebook/draft-js/issues/696#issuecomment-302903086\n    e.preventDefault() // prevents cursor from moving away\n    this.props.blockProps.onJumpToHereClick(this.state.start);\n  }\n\n  render() {\n    let startTimecode = this.state.start;\n    const { blockProps } = this.props\n    if (blockProps.timecodeOffset) {\n      startTimecode += this.props.blockProps.timecodeOffset;\n    }\n\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement = <span className={ style.time } onClick={ this.handleTimecodeClick }>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          {blockProps.showSpeakers ? speakerElement : ''}\n          <FontAwesomeIcon icon={ faMapMarker } onMouseDown={ this.handleJumpToHereClick } className= { style.jumpToHere }/>\n          {blockProps.showTimecodes ? timecodeElement : ''}\n        </div>\n        <div className={ style.text }>\n          <Word block={ this.props.block }>\n            <EditorBlock { ...this.props } />\n          </Word>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\n// import generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  // for us, until can figure out a way to go from speech recognition to punctuation, so can divide up speech blocks, with Khmer just want to make each word a paragraph, since that's kind of what ends up happening.\n  words.forEach((word) => {\n    // if word contains punctuation TODO add Khmer punctuation. Right now, will always return false\n    if (true || /[.?!\\s]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n  // RQ added. If we don't add this though, I think it ends up skipping the last paragraph...or for Khmer, maybe the whole transcript!\n  results.push(paragraph);\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    if (!paragraph.words.length) {\n      return\n    }\n\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","/**\n *  Convert Speechmatics\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from speechmatics based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @todo As this function is also used in the bbc-kaldi adapter, should it be refactored into its own file?\n * @param {array} words - array of words objects from speechmatics transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\n/**\n * Determines the speaker of a paragraph by comparing the start time of the paragraph with\n * the speaker times.\n * @param {float} start - Starting point of paragraph\n * @param {array} speakers - list of all speakers with start and end time\n */\nconst getSpeaker = (start, speakers) => {\n  for (var speakerIdx in speakers) {\n    const speaker = speakers[speakerIdx];\n    if (start >= speaker.start & start < speaker.end) {\n      return speaker.name;\n    }\n  }\n\n  return 'UNK';\n};\n\n/**\n * Speechmatics treats punctuation as own words. This function merges punctuations with\n * the pevious word and adjusts the total duration of the word.\n * @param {array} words - array of words objects from speechmatics transcript\n */\nconst curatePunctuation = (words) => {\n  const curatedWords = [];\n  words.forEach((word) => {\n    if (/[.?!]/.test(word.name)) {\n      curatedWords[curatedWords.length-1].name = curatedWords[curatedWords.length-1].name + word.name;\n      curatedWords[curatedWords.length-1].duration = (parseFloat(curatedWords[curatedWords.length-1].duration) + parseFloat(word.duration)).toString();\n    } else {\n      curatedWords.push(word);\n    }\n  }\n  );\n\n  return curatedWords;\n};\n\nconst speechmaticsToDraft = (speechmaticsJson) => {\n  const results = [];\n\n  let tmpWords;\n  tmpWords = curatePunctuation(speechmaticsJson.words);\n  tmpWords = tmpWords.map((element, index) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      confidence: element.confidence,\n      word: element.name.toLowerCase().replace(/[.?!]/g, ''),\n      punct: element.name,\n      index: index,\n    });\n  });\n\n  let tmpSpeakers;\n  tmpSpeakers = speechmaticsJson.speakers;\n  tmpSpeakers = tmpSpeakers.map((element) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      name: element.name,\n    });\n  });\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    const paragraphStart = paragraph.words[0].start;\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: getSpeaker(paragraphStart, tmpSpeakers),\n        words: paragraph.words,\n        start: paragraphStart\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default speechmaticsToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\nimport speechmaticsToDraft from './speechmatics/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\n/*\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n*/\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: {} }; //createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: {} }; // createEntityMap(blocks) };\n  case 'speechmatics':\n    blocks = speechmaticsToDraft(transcriptData);\n\n    return { blocks, entityMap: {} }; //  createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'react-simple-tooltip';\nimport { Map, List, fromJS } from 'immutable'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faMousePointer, faICursor, faUserEdit, faKeyboard, faSave } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier,\n  KeyBindingUtil,\n  SelectionState,\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nconst { hasCommandModifier } = KeyBindingUtil;\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      // inputCount: 0,\n      currentWord: {},\n      settingTimecodeFor: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && ( this.props.mediaUrl!== null && !this.isPresentInLocalStorage(this.props.mediaUrl) )\n    ) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 4*1000;\n          // resets timeout\n          clearTimeout(this.pauseWhileTypingTimeOut);\n          this.pauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n\n      /*\n      // trying to keep length to whole block, including latest additions\n      const contentState = editorState.getCurrentContent();\n      const blockKey = contentState.getSelectionAfter().getStartKey() // TODO maybe should be getSelectionAfter\n      const currentBlock = contentState.getBlockForKey(blockKey)\n      console.log(\"block key\", blockKey, currentBlock)\n      const entityKey = this.findEntityKeyForBlock(currentBlock)\n      console.log(entityKey)\n      contentState.mergeEntityData(entityKey, {\n        offset: 0,\n        length: currentBlock.getText().length\n      })\n      */\n    }\n\n    if (this.state.isEditable) {\n      this.setState(() => ({\n        editorState\n      }), () => {\n        // saving when user has stopped typing for more then five seconds\n        if (this.saveTimer!== undefined) {\n          clearTimeout(this.saveTimer);\n        }\n        this.saveTimer = setTimeout(() => {\n          this.localSave(this.props.mediaUrl);\n        }, 5000);\n      });\n    }\n\n  }\n\n  // helper for getting the entity for the block\n  // apparently there's no better way.. https://github.com/facebook/draft-js/issues/1681\n  /*\n  findEntityKeyForBlock = (block) => {\n    let entity\n    for (var i = 0; i < block.getText().length; i++) {\n      entity = block.getEntityAt(i)\n      if (entity) {\n        break\n      }\n    }\n  \n    return entity\n  } */\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      if (blocks.blocks.length === 0) {\n        console.error(\"No Blocks returned!\")\n        alert(\"No Blocks returned!\")\n\n        // TODO this still breaks but allows user to continue doing some stuff at least...\n        // probably want better error handling\n        return \n      }\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    console.log('localSave');\n    clearTimeout(this.saveTimer);\n    let mediaUrlName = this.props.mediaUrl;\n    // if using local media instead of using random blob name\n    // that makes it impossible to retrieve from on page refresh\n    // use file name\n    if (this.props.mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrlName }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrlName }`, newLastLocalSavedDate);\n\n    // return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    if (mediaUrl !== null) {\n      let mediaUrlName = mediaUrl;\n\n      if (mediaUrl.includes('blob')) {\n        mediaUrlName = this.props.fileName;\n      }\n\n      const data = localStorage.getItem(`draftJs-${ mediaUrlName }`);\n      if (data !== null) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    let mediaUrlName = mediaUrl;\n    if (mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrlName }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrlName }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  // originally from\n  // https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-counter-plugin/src/WordCounter/index.js#L12\n  getWordCount = (editorState) => {\n    const plainText = editorState.getCurrentContent().getPlainText('');\n    const regex = /(?:\\r\\n|\\r|\\n)/g; // new line, carriage return, line feed\n    const cleanString = plainText.replace(regex, ' ').trim(); // replace above characters w/ space\n    const wordArray = cleanString.match(/\\S+/g); // matches words according to whitespace\n\n    return wordArray ? wordArray.length : 0;\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    if (!data || !data.blocks.length) {\n      console.error(\"No data given!\")\n    }\n    const contentState = convertFromRaw(data);\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState); // , decorator);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TimedTextEditor',\n        action: 'setEditorContentState',\n        name: 'getWordCount',\n        value: this.getWordCount(editorState)\n      });\n    }\n\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  // RQ: trying without decorator for speed \n  forceRenderDecorator = () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState = this.state.editorState.getCurrentContent();\n    // const decorator = this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      // decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n\n    return newEditorState\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = (e) => {\n    const enterKey = 13;\n    const spaceKey =32;\n    const kKey = 75;\n    const lKey = 76;\n    const jKey = 74;\n    const equalKey = 187;//used for +\n    const minusKey = 189; // -\n    const rKey = 82;\n    const tKey = 84;\n\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n    // if alt key is pressed in combination with these other keys\n    if (e.altKey && ((e.keyCode === spaceKey)\n    || (e.keyCode === spaceKey)\n    || (e.keyCode === kKey)\n    || (e.keyCode === lKey)\n    || (e.keyCode === jKey)\n    || (e.keyCode === equalKey)\n    || (e.keyCode === minusKey)\n    || (e.keyCode === rKey)\n    || (e.keyCode === tKey))\n    ) {\n      e.preventDefault();\n\n      return 'keyboard-shortcuts';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    if (command === 'keyboard-shortcuts') {\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      // splitState is new editor state after the push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n      const blockStartTime = originalBlockData.get('start');\n\n      const wordStartTime = blockStartTime;\n\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n\n      // adding words data too\n      // starts with same worddata, and then replace the 'word' and 'punct' keys\n      let wordsDataForNew = originalBlockData.get('words') || [ {} ];\n      // if (!List.isList(wordsDataForNew) || !Map.isMap(wordsDataForNew)) {\n      if (!Map.isMap(wordsDataForNew)) {\n        wordsDataForNew = fromJS(wordsDataForNew);\n      }\n      const newBlock = newContentState.getBlockAfter(originalBlock.getKey());\n      // make word and punct just the new words and punct\n      // TODO thinking of maybe keeping the original punct and word keys alone, even when splitting, since we never use it. Though it does make things confusing, shows where things originated from, and we never use that data (I think...) in the actual app\n      wordsDataForNew = wordsDataForNew.setIn([ 0, 'word' ], newBlock.getText())\n        .setIn([ 0, 'punct' ], newBlock.getText());\n\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker,\n          'words': wordsDataForNew,\n        }\n      );\n      const newestEditorState = this.setEditorNewContentState(afterMergeContentState);\n\n      // update old transcript word and punct\n      let wordsDataForOld = originalBlockData.get('words') || [ {} ];\n      // if (!List.isList(wordsDataForOld) || !Map.isMap(wordsDataForOld)) {\n      if (!Map.isMap(wordsDataForOld)) {\n        wordsDataForOld = fromJS(wordsDataForOld);\n      }\n      const wordsLeft = originalBlock.getText().slice(0, - (newBlock.getText().length));\n      // TODO thinking of maybe keeping the original punct and word keys alone, even when splitting, since we never use it. Though it does make things confusing, shows where things originated from, and we never use that data (I think...) in the actual app\n      wordsDataForOld = wordsDataForOld.setIn([ 0, 'word' ], wordsLeft)\n        .setIn([ 0, 'punct' ], wordsLeft);\n\n      const afterMergeContentState2 = Modifier.mergeBlockData(\n        newestEditorState.getCurrentContent(),\n        SelectionState.createEmpty(originalBlock.getKey()),\n        {\n          'words': wordsDataForOld,\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState2);\n\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n    /*\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }*/\n\n  updateTimecode = (data) => {\n    console.log(\"updating with data\", data)\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onJumpToHereClick: this.props.onJumpToHereClick,\n        onWordClick: this.props.onWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents,\n        settingTimecodeFor: this.state.settingTimecodeFor,\n        updateTimecode: this.updateTimecode,\n        togglePlayMedia: this.props.playMedia,\n        isPlaying: this.props.isPlaying,\n        currentTime: this.props.currentTime,\n      }\n    };\n  }\n\n  // TODO just do 2 js calls, one to scroll, the other to get current word. Much neater\n  getCurrentWord = (checkToScroll = true) => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    const nextWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    let blockMap\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      blockMap = contentStateConvertEdToRaw.blocks;\n\n      // TODO since ran so many times, consider slightly faster loop (reg for loop?)\n      for (var i = 0; i < blockMap.length; i++) {\n        const block = blockMap[i] || {};\n        let word = ((block.data || {}).words || [])\n        \n        // TODO happens if we split a paragraph...need a better more consistent system for this...\n        if (List.isList(word)) {\n          word = word.toJSON()[0] || {};\n        } else {\n          word = word[0] || {}\n        }\n        if (word.end === undefined || word.end === undefined) {\n          console.log(\"this word is broken...\", word, block)\n        }\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n\n          const nextBlock = blockMap[i + 2] || blockMap[i + 1]\n          const next = ((nextBlock.data || {}).words || [])[0] || {};\n          if (next) {\n            // won't be a next for last word in transcript\n            nextWord.start = next.start;\n            nextWord.end = next.end;\n          }\n          break\n        }\n\n      }\n    }\n\n    if (checkToScroll && currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const nextWordElement = document.querySelector(`.Word[data-start=\"${ nextWord.start }\"]`);\n        // there should always be currentWordElement, but just in case...\n        nextWordElement && nextWordElement.scrollIntoView({ block: 'nearest', inline: 'center' });\n      }\n    }\n    if (this.state.transcriptData && currentWord.start === \"NA\") {\n      // there's a bug in the code!\n      // console.log(\"What is going wrong with the blocks?\", blockMap, \"currentWord\", currentWord);\n      // console.log(\"for the time:\", this.props.currentTime);\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const helpMessage = <div className={ style.helpMessage }>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faMousePointer } />Double click on a word or timestamp to jump to that point in the video.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faICursor } />Start typing to edit text.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faUserEdit } />You can add and change names of speakers in your transcript.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faKeyboard } />Use keyboard shortcuts for quick control.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faSave } />Save & export to get a copy to your desktop.</span>\n    </div>;\n\n    const tooltip = <Tooltip\n      className={ style.help }\n      content={ helpMessage }\n      fadeDuration={ 250 }\n      fadeEasing={ 'ease-in' }\n      placement={ 'bottom' }\n      radius={ 5 }>\n      <FontAwesomeIcon className={ style.icon } icon={ faQuestionCircle } />\n      How does this work?\n    </Tooltip>;\n\n    const currentWord = this.getCurrentWord(true); // true, so scrolls if setting says to\n    const highlightColour = '#c0def3';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {/*`div.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }` This would highlight edits that are added to the original. Doesn't highlight text before though...would have to use JS and dig into draft js more   */}\n          {`.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { tooltip }\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\n  /*\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n*/ // NOTE no longer using entities, so not really using the Word component in same way either, just using the WrapperBlock\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default TimedTextEditor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        onLoadedData={ this.props.onLoadedDataGetDuration }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object,\n  onLoadedDataGetDuration: PropTypes.func\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n  render() {\n    return (\n      <div className={ styles.switchContainer }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked=\"true\"\n            onChange={ this.props.handleMuteVolume }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        <label className={ styles.label }>Volume</label>\n      </div>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VolumeControl from './VolumeControl';\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faSave,\n  faTv,\n  faPlay,\n  faPause,\n  faBackward,\n  faForward,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          title=\"Rollback\"\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          <FontAwesomeIcon icon={ faUndo } />\n        </button>\n\n        <button\n          title=\"Rewind\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faBackward } />\n\n        </button>\n\n        <button\n          title=\"Play\"\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? <FontAwesomeIcon icon={ faPause } /> : <FontAwesomeIcon icon={ faPlay } />}\n        </button>\n\n        <button\n          title=\"Forward\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faForward } />\n        </button>\n\n        <span className={ style.playBackRate }>\n          <Select\n            title=\"Playback rate\"\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playbackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate } />\n        </span>\n\n        <div className={ style.timeBox }>\n          <span title=\"Current time\" className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span title=\"Clip duration\" className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        <button\n          title=\"Save\"\n          className={ style.playerButton }\n          onClick={ this.props.handleSaveTranscript }>\n          <FontAwesomeIcon icon={ faSave } />\n        </button>\n\n        <button\n          title=\"Picture-in-picture\"\n          className={ style.playerButton }\n          onClick={ this.props.pictureInPicture }\n        >\n          <FontAwesomeIcon icon={ faTv } />\n        </button>\n\n        <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        />\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func,\n  pictureInPicture: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max.toString() }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.string,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'alt+k': {\n      priority: 1,\n      handler: () => {\n        self.togglePlayMedia();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+k',\n          name: 'togglePlayMedia',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + k',\n      label: 'Play Media',\n    },\n    'alt+l': {\n      priority: 1,\n      handler: () => {\n        self.skipForward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+l',\n          name: 'skipForward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + l',\n      label: 'Fast Forward',\n    },\n    /*'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.skipBackward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'skipBackward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Rewind',\n    },*/\n    'alt+-': {\n      priority: 1,\n      handler: () => {\n        self.decreasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+-',\n          name: 'decreasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + -',\n      label: 'Decrease Playback Speed',\n    },\n    // https://github.com/ccampbell/mousetrap/issues/266\n    'alt+=': {\n      priority: 1,\n      handler: () => {\n        self.increasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+plus',\n          name: 'increasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + +',\n      label: 'Increase Playback Speed',\n    },\n    'alt+u': {\n      priority: 1,\n      handler: () => {\n        self.jumpToStartOfBlock();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+u',\n          name: 'jumpToStartOfBlock',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + u',\n      label: 'Jump to Start of Current Section',\n    },\n    /*\n    'alt+h': {\n      priority: 1,\n      handler: () => {\n        self.editCurrentBlockTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+h',\n          name: 'editCurrentBlockTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + h',\n      label: 'Edit Current Section Time',\n    },*/\n    'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.rollBack();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'rollBack',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Roll Back',\n    },\n    'alt+t': {\n      priority: 1,\n      handler: () => {\n        self.promptSetCurrentTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+t',\n          name: 'promptSetCurrentTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + t',\n      label: 'set current time',\n    }\n  };\n}\nexport default returnHotKeys;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\nimport { timingSafeEqual } from 'crypto';\nimport { convertToArabicNumbers } from '../../Util/khmer-numbers/';\n\nconst PLAYBACK_RATES = [\n  //  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  // { value: 2, label: '2' },\n  // { value: 2.5, label: '2.5' },\n  // { value: 3, label: '3' },\n  // { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES,\n      mediaDuration: '00:00:00:00',\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds,\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.state.isPlaying) {\n      this.playMedia()\n    }\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null && !isNaN(newCurrentTimeInSeconds)) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      } else {\n        console.log(\"failed to jump to time:\", newCurrentTimeInSeconds, newCurrentTime)\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // TODO: add some validation, eg if user types just a string it won't crash.\n    // needs function to check it's either timecode on the formats specified above or a number\n    // this could be part of the timecode module(?)\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'promptSetCurrentTime',\n        name: 'userTimecodeValue',\n        value: userTimecodeValue\n      });\n    }\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      userTimecodeValue = convertToArabicNumbers(userTimecodeValue)\n\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n\n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'setTimeCodeOffset',\n        name: 'timecodeOffsetValue',\n        value: newTimeCodeOffSet\n      });\n    }\n\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'rollBack',\n          name: 'rollBackValue',\n          value: this.state.rollBackValueInSeconds\n        });\n      }\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n\n    }\n  }\n\n  jumpToStartOfBlock = () => {\n    // NOTE this is so bad...so messy. Oh well\n    const currentWord = this.props.timedTextEditorRef.getCurrentWord()\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'jumpToStartOfBlock',\n          name: 'jumpToStartOfBlock',\n          value: currentWord.start\n        });\n      }\n      // some blocks don't have start time set due to data getting messed up, so just rollback\n      currentWord.start ? this.setCurrentTime(currentWord.start) : this.rollback()\n\n    }\n  }\n\n    /*  TODO use refs on all blocks to access the WrapperBlock react child, and then call the edit block time func\n  editCurrentBlockTime = () => {\n    // NOTE this is so bad...so messy. Oh well\n    console.log(this.props.timedTextEditorRef)\n    const currentWord = this.props.timedTextEditorRef.getCurrentWord()\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'editCurrentBlockTime',\n          name: 'editCurrentBlockTime',\n          value: currentWord.start\n        });\n      }\n      // some blocks don't have start time set due to data getting messed up, so just rollback\n      currentWord.start ? this.setCurrentTime(currentWord.start) : this.rollback()\n\n    }\n  }\n  */\n\n  handleTimeUpdate = (e) => {\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.videoRef.current.playbackRate = input;\n\n          if (this.props.handleAnalyticsEvents !== undefined) {\n            this.props.handleAnalyticsEvents({\n              category: 'MediaPlayer',\n              action: 'setPlayBackRate',\n              name: 'playbackRateNewValue',\n              value: input\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'pauseMedia',\n        name: 'pauseMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'playMedia',\n        name: 'playMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = (e, bool) => {\n    // if no bool specified, then really just toggle\n    if (bool === undefined) {\n      bool = !this.state.isPlaying\n    }\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying && !bool) {\n        this.pauseMedia();\n      }\n      else if (!this.state.isPlaying && bool) {\n        this.playMedia();\n      }\n      // in other situations, do nothing\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      // TODO track this?\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    // TODO track this?\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'handleProgressBarClick',\n        name: 'roundNewCurrentTime',\n        value: time\n      });\n    }\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n  handleMediaDurationChange =(e) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'mediaDuration',\n        name: secondsToTimecode(e.target.duration),\n        value: e.target.duration\n      });\n    }\n  }\n\n  onLoadedDataGetDuration = (e) => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset = currentDuration + this.state.timecodeOffset;\n\n    const durationInSeconds = secondsToTimecode(currentDurationWithOffset);\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'onLoadedDataGetDuration',\n        name: 'durationInSeconds-WithoutOffset',\n        value: secondsToTimecode( currentDuration)\n      });\n    }\n\n  }\n\n  handlePictureInPicture = () => {\n    if (this.videoRef.current !== null) {\n      if (document.pictureInPictureElement !== undefined) {\n      // from https://developers.google.com/web/updates/2017/09/picture-in-picture\n        if (!document.pictureInPictureElement) {\n\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-on'\n          });\n\n          this.videoRef.current.requestPictureInPicture()\n            .catch(error => {\n              // Video failed to enter Picture-in-Picture mode.\n              console.error('Video failed to enter Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-on-error'\n              });\n\n            });\n\n        } else {\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-off'\n          });\n          document.exitPictureInPicture()\n            .catch(error => {\n              // Video failed to leave Picture-in-Picture mode.\n              console.error('Video failed to leave Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-off-error'\n              });\n            });\n        }\n      } else {\n        alert('Picture in Picture not supported in this browser, try chrome.');\n\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'handlePictureInPicture',\n          name: 'picture-in-picture-not-supported'\n        });\n\n      }\n    }\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n      onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.fileName? this.props.fileName : this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.state.mediaDuration }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n          pictureInPicture={ this.handlePictureInPicture }\n          handleSaveTranscript={ () => {this.props.handleSaveTranscript();} }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration).toString() : '100' }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  fileName: PropTypes.string,\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'resetTimecodeOffset',\n      name: 'resetTimecodeOffset',\n      value: 0\n    });\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'setTimecodeOffset',\n      name: 'setTimecodeOffset',\n      value: this.state.timecodeOffset\n    });\n\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds ==='string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"text\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key, i) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ i } className={ style.listItem }>\n        <div className={ style.shortcut }>{shortcut.displayKeyCombination}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <h2 className={ style.header }>Shortcuts</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleShortcutsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nShortcuts.propTypes = {\n  handleShortcutsToggle: PropTypes.func\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faKeyboard } from '@fortawesome/free-solid-svg-icons';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\nimport { secondsToTimecode } from '../Util/timecode-converter/index';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: true,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 5,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n    this.timedTextEditorRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Transcript and media passed to component at same time\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n        && (prevProps.mediaUrl !== this.props.mediaUrl )\n    ) {\n      console.info('Transcript and media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Transcript first and then media passed to component\n    else if (\n      (prevState.transcriptData === this.state.transcriptData)\n      && (prevProps.mediaUrl !== this.props.mediaUrl)\n    ) {\n      console.info('Transcript first and then media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Media first and then transcript passed to component\n    else if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && (prevProps.mediaUrl === this.props.mediaUrl)\n    ) {\n      console.info('Media first and then transcript');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n  }\n\n  ifPresentRetrieveTranscriptFromLocalStorage = () => {\n    // if (this.timedTextEditorRef.current!== undefined) {\n    if (this.timedTextEditorRef.current) {\n      if (this.timedTextEditorRef.current.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.info('was already present in local storage');\n        this.timedTextEditorRef.current.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.info('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  // when double click a single word\n  handleWordClick = (startTime) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'doubleClickOnWord',\n        name: 'startTime',\n        value: secondsToTimecode(startTime)\n      });\n    }\n\n    this.jumpToHere(startTime)\n  }\n\n  handleJumpToHereClick = (startTime) => {\n    this.jumpToHere(startTime)\n  }\n\n  jumpToHere = (startTime) => {\n    // TODO add analytics stuff...except I don't care right now haha\n\n    // happens if the data gets messed up and they click on a paragraph that has that faulty data\n    // TODO allow editing timing so this can get fixed\n    if ([ NaN, undefined ].includes(startTime)) {\n      console.error(\"startTime cannot be set to be NaN or undefined\");\n\n      return\n    }\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(null, bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleIsScrollIntoViewChange',\n        name: 'isScrollIntoViewOn',\n        value: isChecked\n      });\n    }\n\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handlePauseWhileTyping',\n        name: 'isPauseWhileTypingOn',\n        value: isChecked\n      });\n    }\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleRollBackValueInSeconds',\n        name: 'rollBackValueInSeconds',\n        value: rollBackValue\n      });\n    }\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n\n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.timedTextEditorRef.current.forceUpdate();\n      });\n  }\n\n  handleShowTimecodes = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowTimecodes',\n        name: 'showTimecodes',\n        value: isChecked\n      });\n    }\n  }\n\n  handleShowSpeakers = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowSpeakers',\n        name: 'showSpeakers',\n        value:  isChecked\n      });\n    }\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleSettingsToggle',\n        name: 'showSettings',\n        value:  !this.state.showSettings\n      });\n    }\n  }\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShortcutsToggle',\n        name: 'showShortcuts',\n        value:  !this.state.showShortcuts\n      });\n    }\n  }\n\n  getEditorContent = (exportFormat) => {\n    return this.timedTextEditorRef.current.getEditorContent(exportFormat);\n  }\n\n  handleSaveTranscript = () => {\n    return this.timedTextEditorRef.current.localSave(this.props.mediaUrl);\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      fileName={ this.props.fileName }\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n      // ref={ 'MediaPlayer' }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n      handleSaveTranscript={ this.handleSaveTranscript }\n      playingWhileListening = { this.props.playingWhileListening }\n      timedTextEditorRef = { this.timedTextEditorRef.current }\n    />;\n\n    const settings = <Settings\n      handleSettingsToggle={ this.handleSettingsToggle }\n      defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n      defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n      defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      handlePauseWhileTyping={ this.handlePauseWhileTyping }\n      handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n      handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n      handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n      handleShowTimecodes={ this.handleShowTimecodes }\n      handleShowSpeakers={ this.handleShowSpeakers }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    const shortcuts = <Shortcuts\n      handleShortcutsToggle={ this.handleShortcutsToggle }\n    />;\n\n    const timedTextEditor = <TimedTextEditor\n      fileName={ this.props.fileName }\n      transcriptData={ this.state.transcriptData }\n      timecodeOffset={ this.state.timecodeOffset }\n      onWordClick={ this.handleWordClick }\n      onJumpToHereClick={ this.handleJumpToHereClick }\n      playMedia={ this.handlePlayMedia }\n      isPlaying={ this.handleIsPlaying }\n      currentTime={ this.state.currentTime }\n      isEditable={ this.props.isEditable }\n      sttJsonType={ this.props.sttJsonType }\n      mediaUrl={ this.props.mediaUrl }\n      isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n      isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      ref={ this.timedTextEditorRef }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    return (\n      <div className={ style.container }>\n        <header className={ style.header }>\n          { this.state.showSettings ? settings : null }\n          { this.state.showShortcuts ? shortcuts : null }\n        </header>\n\n        <aside className={ style.aside }>{ this.props.mediaUrl ? mediaPlayer : null }</aside>\n\n        <div className={ style.settingsContainer }>\n          <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }>\n            <FontAwesomeIcon icon={ faCog } />\n          </button>\n          <button className={ style.settingsButton } onClick={ this.handleShortcutsToggle }>\n            <FontAwesomeIcon icon={ faKeyboard } />\n          </button>\n        </div>\n\n        <main className={ style.main }>\n          {this.props.mediaUrl === null? null : timedTextEditor}\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n  handleAnalyticsEvents: PropTypes.func,\n  fileName: PropTypes.string\n};\n\nexport default TranscriptEditor;\n","import SpeechRecognition from './SpeechRecognition'\n\nexport default SpeechRecognition\n","import React, { Component } from 'react'\n\nexport default function SpeechRecognition(options) {\n  const SpeechRecognitionInner = function (WrappedComponent) {\n    const BrowserSpeechRecognition =\n      typeof window !== 'undefined' &&\n      (window.SpeechRecognition ||\n        window.webkitSpeechRecognition ||\n        window.mozSpeechRecognition ||\n        window.msSpeechRecognition ||\n        window.oSpeechRecognition)\n    const recognition = BrowserSpeechRecognition\n      ? new BrowserSpeechRecognition()\n      : null\n    const browserSupportsSpeechRecognition = recognition !== null\n    let listening\n    if (\n      !browserSupportsSpeechRecognition ||\n      (options && options.autoStart === false)\n    ) {\n      listening = false\n    } else {\n      recognition.start()\n      listening = true\n    }\n    let pauseAfterDisconnect = false\n    let interimTranscript = ''\n    let finalTranscript = ''\n\n    // TODO put this as the retval key using template found in src/sample-data/KateDarling_2018S-bbc-kaldi.json\n    const newTranscriptData = () => ({\n      status: true,\n      wonid: \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\", // don't know this one, probably will generate something\n      punct: \"\", // total transcript of all the words TODO currently not setting\n      words: [], // array of newWordData objects\n    })\n    \n\n    return class SpeechRecognitionContainer extends Component {\n      constructor(props) {\n        super(props)\n\n        this.state = {\n          interimTranscript,\n          finalTranscript,\n          transcriptData: {},\n          listening: false,\n          allResults: [],\n          speechTimerStartedAt: false, // ms since Jan 1 1970\n        }\n\n        // TODO do the binding thing so don't have to do the crazy arrow funcs here\n      }\n\n      componentWillMount() {\n        if (recognition) {\n          recognition.continuous = false // originally set to true, but this breaks up the words into smaller fragments much better\n          recognition.interimResults = true\n          recognition.onresult = this.updateTranscript.bind(this)\n          recognition.onend = this.onRecognitionDisconnect.bind(this)\n          // onspeechstart/end or onsoundstart/end might be useful\n          /*\n    recognition.onspeechend = () => {console.log(\"speech is now ending\")}\n    recognition.onspeechstart = () => {console.log(\"speech is now starting\")}\n    recognition.onsoundstart = () => {console.log(\"sound is now starting\")}\n    recognition.onsoundend = () => {console.log(\"sound is now ending\")}\n    recognition.nomatch = () => {console.log(\"no match!!!11\")}\n    recognition.onboundary = () => {console.log(\"boundary found!\")}\n    recognition.onresume = () => {console.log(\"resume found!\")}\n    recognition.onmark = () => {console.log(\"mark found!\")}\n    recognition.onpause = () => {console.log(\"pause found!\")}\n    */\n          this.setState({\n            listening,\n            transcriptData: newTranscriptData()\n          })\n        }\n      }\n\n      disconnect (disconnectType) {\n        if (recognition) {\n          switch (disconnectType) {\n            case 'ABORT':\n              pauseAfterDisconnect = true\n              recognition.abort()\n              break\n            case 'RESET':\n              pauseAfterDisconnect = false\n              recognition.abort()\n              break\n            case 'STOP':\n            default:\n              pauseAfterDisconnect = true\n              recognition.stop()\n          }\n        }\n      }\n\n      // minutes elapsed since started.\n      minElapsed = () => {\n        return (Date.now() - this.state.speechTimerStartedAt)/1000;\n      }\n\n      newWordData = (wordResults) => {\n        const words = wordResults.transcript;\n        // remove all punctuation and lowercase it\n        const allWordData = this.state.transcriptData.words;\n        const start = allWordData.length > 0 ? allWordData[allWordData.length - 1].end : 0;\n        const end = this.minElapsed();\n        const punct = words.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '');\n\n        // format required for the bbc lib\n        return {\n          start, // time in minutes, using decimals not seconds, eg 13.02 (float)\n          confidence: wordResults.confidence, // %, out of 1, eg 0.68 (float)\n          end, // end time in min\n          word: words, // all words, not formatted (and lowercase), eg \"there\" (string)\n          punct, // word, as displayed, eg \"There\" (string)\n          index: allWordData.length,\n        }\n      }\n\n      onRecognitionDisconnect = () => {\n        listening = false\n        if (pauseAfterDisconnect) {\n          this.setState({ listening })\n        } else {\n          this.startListening()\n        }\n        pauseAfterDisconnect = false\n      }\n\n      // TODO might stop getting interim results and handling them if it hurts performance\n      updateTranscript = (event) => {\n        interimTranscript = ''\n        // looks like they iterate over same results every time, rather than gradually compiling as it goes. Could slow things down if transcript gets long TODO\n        let newState = {\n          // might not need\n          allResults: event.results\n        }\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            let wordResults = event.results[i][0]\n            finalTranscript = this.concatTranscripts(\n              finalTranscript,\n              wordResults.transcript\n            )\n\n            let newWordData = this.newWordData(wordResults)\n            //TODO bad practice modifying original object like this!\n            let transcriptData = this.state.transcriptData\n            transcriptData.words.push(newWordData)\n            \n            newState.finalTranscript = finalTranscript\n            newState.transcriptData = transcriptData\n\n          } else {\n            interimTranscript = this.concatTranscripts(\n              interimTranscript,\n              event.results[i][0].transcript\n            )\n            newState.finalTranscript = interimTranscript\n          }\n        }\n\n        this.setState(newState)\n      }\n\n      // returns string with all transcript together\n      concatTranscripts(...transcriptParts) {\n        return transcriptParts.map(t => t.trim()).join(' ').trim()\n      }\n\n      resetTranscript = () => {\n        interimTranscript = ''\n        finalTranscript = ''\n        this.disconnect('RESET')\n        this.setState({ \n          interimTranscript, \n          finalTranscript,\n          transcriptData: newTranscriptData(),\n          speechTimerStartedAt: false,\n        })\n      }\n\n      startListening = () => {\n        if (recognition && !listening) {\n          try {\n            recognition.start()\n          } catch (DOMException) {\n            // Tried to start recognition after it has already started - safe to swallow this error\n          }\n          listening = true\n          let newState = {listening}\n          if (!this.state.speechTimerStartedAt) {\n            newState.speechTimerStartedAt = Date.now()\n          }\n\n          this.setState(newState)\n        }\n      }\n\n      abortListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('ABORT')\n      }\n\n      stopListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('STOP')\n      }\n\n      render() {\n        // includes both\n        const transcript = this.concatTranscripts(\n          finalTranscript,\n          interimTranscript\n        )\n\n        const totalTimeElapsed = this.minElapsed()\n\n        return (\n          <WrappedComponent\n            resetTranscript={this.resetTranscript}\n            startListening={this.startListening}\n            abortListening={this.abortListening}\n            stopListening={this.stopListening}\n            transcript={transcript}\n            recognition={recognition}\n            allResults={this.state.allResults}\n            listening={this.state.listening}\n            transcriptData={this.state.transcriptData}\n            interimTranscript={this.state.interimTranscript}\n            finalTranscript={this.state.finalTranscript}\n            browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n            totalTimeElapsed={totalTimeElapsed}\n            {...this.props} />\n        )\n      }\n    }\n  }\n\n  if (typeof options === 'function') {\n    return SpeechRecognitionInner(options)\n  } else {\n    return SpeechRecognitionInner\n  }\n}\n","import React, { Component } from 'react'\n// import getAudio from './getAudio'\nimport SpeechRecognition from '../updated-react-speech-recognition/src/'\nimport { secondsToTimecode, timecodeToSeconds } from '../Util/timecode-converter/index';\n\n/*\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n}\n*/\n\nclass GenerateTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.stop = this.stop.bind(this)\n    this.start = this.start.bind(this)\n    this.reset = this.reset.bind(this)\n    this.generateJSON = this.generateJSON.bind(this)\n\n    // props.recognition.onresult\n    // set default language to Khmer TODO add options?\n    // https://www.science.co.il/language/Locale-codes.php for codes\n    props.recognition.lang = \"km\"\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.props.listening) {\n      this.props.startListening()\n    }\n  }\n\n  stop(e) {\n    this.props.stopListening()\n  }\n  start(e) {\n    // console.log(\"starting\")\n    this.props.startListening()\n  }\n  generateJSON(e) {\n    let transcriptJSON = {\n      action: \"audio-transcribe\",\n      retval: this.props.transcriptData\n    }\n    // if use finalTranscript, anything that hasn't been finalized isn't counted, which would be confusing, since even if you wait sometimes it isn't yet made final\n    transcriptJSON.retval.punct = this.props.transcript\n\n    this.setState({\n      transcriptJSON\n    })\n\n    // console.log(transcriptJSON)\n    // content, filename, format\n    let filename = this.props.fileName.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/\\s/g, \"-\")\n    let prettyData = JSON.stringify(transcriptJSON, null, 4)\n\n    this.props.download(prettyData, `${ filename }.json`)\n\n    return transcriptJSON\n  }\n  reset(e) {\n    this.props.resetTranscript()\n  }\n  render() {\n    const {\n      transcript,\n      browserSupportsSpeechRecognition,\n      // interimTranscript,\n      listening,\n      // allResults\n    } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      // NOTE happens several times, as this gets rerendered for some reason. Returns false even when browser can support sometimes for some reason too, but eventually returns true\n      return null\n    }\n    //TODO add back in once we switch over to using my fork  which passes down all results as an array rather than compiling all into a string\n\n    return (\n      <div>\n        <h1>Speech Recognition</h1>\n        <button onClick = { this.reset } >Reset</button>\n        <button onClick = { this.start } >Start</button>\n        <button onClick = { this.stop } >Stop</button>\n        <button onClick = { this.generateJSON } >Generate Transcript JSON</button>\n        <div className=\"transcript-container\" style={ { height: '240px', overflowY: 'auto' } }>\n          {\n            <div>{transcript}</div>\n          }\n        </div>\n        { listening ? (\n          <span>\n            *Listening* Total Time Elapsed: {secondsToTimecode(this.props.totalTimeElapsed)}\n          </span>\n        ) : (\n          <div>&nbsp;</div>\n        )}\n        {false && <div>\n          <p>Volume</p>\n          <input id=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.5\"/>\n        </div>}\n\n      </div>\n    )\n  }\n}\n\n// GenerateTranscript.propTypes = propTypes\n\nconst options = {\n  autoStart: false\n}\nexport default SpeechRecognition(options)(GenerateTranscript)\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\">Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor, GenerateTranscript } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nimport hunSenInterviewPart1Transcript from './sample-data/Hun-Sen-interview-part1-transcript-data.json';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\nconst hunSenInterview1Url360px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/4/43/43e10b36-b843-4fea-9a66-1160373adede.mp4?download=1';\nconst hunSenInterview1Url270px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/4/43/43e10b36-b843-4fea-9a66-1160373adede_mobile.mp4?download=1';\nconst hunSenInterview2Url360px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/8/85/85b38eb5-a8cc-4ef9-827c-eab331e7f5a2.mp4?download=1';\nconst hunSenInterview2Url270px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/8/85/85b38eb5-a8cc-4ef9-827c-eab331e7f5a2_mobile.mp4?download=1';\nconst hunSenInterview3Url360px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/a/af/af67500f-9491-47f6-8e26-1c6f7a3827d6.mp4?download=1';\nconst hunSenInterview3Url270px = 'https://av.voanews.com/Videoroot/Pangeavideo/2018/09/a/af/af67500f-9491-47f6-8e26-1c6f7a3827d6_mobile.mp4?download=1';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n      analyticsEvents: [],\n      fileName: 'Khmer Transcript Data',\n      playingWhileListening: false,\n    };\n\n    this.transcriptEditorRef = React.createRef();\n    this.startListeningAndPlayingMedia = this.startListeningAndPlayingMedia.bind(this)\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: hunSenInterviewPart1Transcript,\n      mediaUrl: hunSenInterview1Url360px,\n      sttType: 'bbckaldi',\n      fileName: 'Hun Sen interview part1 transcript data',\n    });\n  }\n\n  startListeningAndPlayingMedia(e) {\n    this.setState({playingWhileListening: true})\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n        fileName: file.name\n      });\n    }\n    else {\n      alert('select a valid audio or video file');\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const file = files[0];\n\n    if (file.type ==='application/json') {\n      const fr = new FileReader();\n\n      fr.onload = (evt) => {\n        this.setState({\n          transcriptData: JSON.parse(evt.target.result)\n        });\n      };\n\n      fr.readAsText(file);\n\n    }\n    else {\n      alert('select a valid json file');\n    }\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.transcriptEditorRef.current.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n  download = (content, filename, contentType) => {\n    const type = contentType || 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([ content ], { type: type });\n\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n  }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   handleAnalyticsEvents = (event) => {\n     this.setState({ analyticsEvents: [ ...this.state.analyticsEvents, event ] });\n   }\n\n   handleChangeTranscriptName = (value) => {\n     this.setState({ fileName: value });\n   }\n\n   playMedia\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>Khmer Transcript Creator</mark> - Component |&nbsp;\n           <a\n             href=\"https://github.com/RyanQuey/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <GenerateTranscript\n           download = { this.download }\n           fileName = {this.state.fileName}\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>Load Local Audio or Video Media:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or&nbsp;\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n         <br/>\n         <label>Transcript Json Format:&nbsp;</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         &nbsp;&nbsp;\n         <label>Transcript Json:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n         <br />\n\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n\n         <label>Transcript Name</label>\n         <input\n           type=\"text\"\n           onChange={ e => this.handleChangeTranscriptName(e.target.value) }\n           value={ this.state.fileName }\n         />\n         <br />\n\n         <label>Export Edited Transcript:&nbsp;</label>\n         <button onClick={ () => this.exportTranscript() }>Export</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         {this.state.mediaUrl &&\n           <button onClick={ () => this.startListeningAndPlayingMedia() }>Generate Transcript from Media</button>\n         }\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData = { this.state.transcriptData }\n           fileName = { this.state.fileName }\n           mediaUrl = { this.state.mediaUrl }\n           isEditable = { this.state.isTextEditable }\n           sttJsonType = { this.state.sttType }\n           handleAnalyticsEvents = { this.handleAnalyticsEvents }\n           ref = { this.transcriptEditorRef }\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <hr/>\n\n         <label>Components Analytics</label>\n         <textarea\n           style={ { height: '200px', width: '100%' } }\n           value={ JSON.stringify(this.state.analyticsEvents, null, 2) }\n           disabled>\n         </textarea>\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__E-szq\",\"header\":\"Shortcuts_header__ujg-G\",\"closeButton\":\"Shortcuts_closeButton__1uaCk\",\"list\":\"Shortcuts_list__1wVGG\",\"listItem\":\"Shortcuts_listItem__Jnjzl\",\"shortcut\":\"Shortcuts_shortcut__GWLsC\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__1cOKX\",\"settingElement\":\"Shortcuts_settingElement__38_ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"container\":\"TranscriptEditor_container__2Ykm6\",\"header\":\"TranscriptEditor_header__3PNk9\",\"main\":\"TranscriptEditor_main__VyUon\",\"aside\":\"TranscriptEditor_aside__fkJSE\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__LUrRi\",\"settingsButton\":\"TranscriptEditor_settingsButton__1jEwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__2Wqp0\",\"playerSection\":\"MediaPlayer_playerSection__1WRFX\",\"controlsSection\":\"MediaPlayer_controlsSection__2JdaW\",\"titleBox\":\"MediaPlayer_titleBox__2Alx5\",\"title\":\"MediaPlayer_title__1Tw_5\",\"helpText\":\"MediaPlayer_helpText__3vCf-\",\"hideInMobile\":\"MediaPlayer_hideInMobile__1PWAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"VolumeControl_switchContainer__3Rvar\",\"label\":\"VolumeControl_label__3BTVJ\",\"switch\":\"VolumeControl_switch__39OLJ\",\"slider\":\"VolumeControl_slider__nvKJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__3IRin\",\"inputBox\":\"TimecodeOffset_inputBox__1lmnx\",\"button\":\"TimecodeOffset_button__5qwpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__3zVEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__3i-of\",\"label\":\"Toggle_label__1xsUr\",\"switch\":\"Toggle_switch__v31XM\",\"slider\":\"Toggle_slider__3r6Az\"};"],"sourceRoot":""}