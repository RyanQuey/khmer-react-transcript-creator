{"version":3,"sources":["lib/TranscriptEditor/MediaPlayer/ProgressBar.module.css","lib/TranscriptEditor/MediaPlayer/Select.module.css","lib/TranscriptEditor/Settings/index.module.css","lib/TranscriptEditor/MediaPlayer/PlayerControls.module.css","lib/TranscriptEditor/TimedTextEditor/index.module.css","lib/TranscriptEditor/TimedTextEditor/index.js","lib/TranscriptEditor/TimedTextEditor/Word.js","lib/TranscriptEditor/TimedTextEditor/SpeakerLabel.js","lib/Util/timecode-converter/secondsToTimecode.js","lib/Util/timecode-converter/timecodeToSeconds.js","lib/Util/timecode-converter/padTimeToTimecode.js","lib/Util/timecode-converter/index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.js","lib/Util/adapters/generate-entities-ranges/index.js","lib/Util/adapters/bbc-kaldi/index.js","lib/Util/adapters/autoEdit2/index.js","lib/Util/adapters/speechmatics/index.js","lib/Util/adapters/index.js","lib/Util/export-adapters/txt/index.js","lib/Util/export-adapters/index.js","lib/TranscriptEditor/MediaPlayer/VideoPlayer.js","lib/TranscriptEditor/MediaPlayer/VolumeControl.js","lib/TranscriptEditor/MediaPlayer/Select.js","lib/TranscriptEditor/MediaPlayer/PlayerControls.js","lib/TranscriptEditor/MediaPlayer/ProgressBar.js","lib/TranscriptEditor/MediaPlayer/defaultHotKeys.js","lib/TranscriptEditor/MediaPlayer/index.js","lib/TranscriptEditor/Settings/Toggle/index.js","lib/TranscriptEditor/Settings/TimecodeOffset/index.js","lib/TranscriptEditor/Settings/index.js","lib/TranscriptEditor/Settings/Shortcuts.js","lib/TranscriptEditor/index.js","lib/updated-react-speech-recognition/src/index.js","lib/updated-react-speech-recognition/src/SpeechRecognition.js","lib/GenerateTranscript/index.js","select-stt-json-type.js","select-export-format.js","index.js","lib/TranscriptEditor/TimedTextEditor/WrapperBlock.module.css","lib/TranscriptEditor/Settings/Shortcuts.module.css","lib/TranscriptEditor/index.module.css","lib/TranscriptEditor/MediaPlayer/index.module.css","lib/TranscriptEditor/MediaPlayer/VolumeControl.module.css","lib/TranscriptEditor/Settings/TimecodeOffset/index.module.css","index.module.css","lib/TranscriptEditor/Settings/Toggle/index.module.css"],"names":["module","exports","color-light-grey","color-labs-red","bar","selectPlayerControl","settings","header","closeButton","controlsContainer","settingElement","label","rollbackValue","timecodeLabel","color-darkest-grey","playerControls","playerButton","playBackRate","timeBox","currentTime","separator","duration","color-subt-green","DraftEditor-root","editor","help","icon","helpMessage","mutability","Word","generateConfidence","data","confidence","generatePreviousTimes","prevTimes","i","start","concat","dec","Math","floor","this","props","entityKey","contentState","getEntity","getData","react_default","a","createElement","style","display","data-start","data-end","end","data-confidence","data-prev-times","data-entity-key","key","className","children","PureComponent","SpeakerLabel","speaker","EditLabel","onClick","handleOnClickEdit","index_es","faUserEdit","name","secondsToTimecode","seconds","framePerSeconds","fps","undefined","normalisedSeconds","Number","toPrecision","toFixed","normalisePlayerTime","wholeSeconds","frames","_padZero","n","parseInt","timecodeToSecondsHelper","tc","s","split","timecodeToFrames","isOneDigit","str","length","padTimeToTimecode","time","timecode","includes","includesFullStop","replace","timecodeToSeconds","resultPadded","parseFloat","WrapperBlock","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newSpeakerName","prompt","setState","blockProps","handleAnalyticsEvents","category","action","value","keyForCurrentCurrentBlock","block","getKey","currentBlockSelection","SelectionState","createEmpty","currentBlockSelectionState","EditorState","acceptSelection","editorState","getSelection","newBlockDataWithSpeakerName","newContentState","Modifier","mergeBlockData","setEditorNewContentState","getPrevStartTime","prevBlock","getBlockBefore","prevBlockStart","get","getEndTime","nextBlock","getBlockAfter","nextBlockStart","handleTimecodeClick","wasPlaying","isPlaying","togglePlayMedia","interval","setInterval","clearInterval","newStartTime","alert","wordsData","console","log","List","isList","Map","isMap","fromJS","setIn","newBlockData","words","toJSON","newerEditorState","previousBlock","previousBlockSelection","prevBlockSelectionState","prevWordsData","newPrevBlockData","newPrevBlockContentState","getCurrentContent","doIt","handleJumpToHereClick","onJumpToHereClick","state","timecodeOffset","startTimecode","speakerElement","TimedTextEditor_SpeakerLabel","timecodeElement","slice","markers","showSpeakers","showTimecodes","text","Draft","React","Component","generateEntitiesRanges","wordAttributeName","position","map","word","result","offset","random","toString","substring","bbcKaldiToDraft","bbcKaldiJson","results","paragraph","forEach","push","punct","groupWordsInParagraphs","retval","draftJsContentBlockParagraph","join","type","entityRanges","autoEdit2ToDraft","autoEdit2Json","autoEditText","autoEditparagraph","autoEditLine","line","tmpWord","startTime","endTime","test","getSpeaker","speakers","speakerIdx","speechmaticsToDraft","speechmaticsJson","tmpWords","tmpSpeakers","curatedWords","curatePunctuation","element","index","toLowerCase","paragraphStart","createEntityMap","blocks","flatEntityRanges","flatten","list","reduce","b","Array","isArray","entityMap","sttJsonAdapter","transcriptData","sttJsonType","error","txt","blockData","x","exportAdapter","exportFormat","JSON","stringify","ext","draftToTxt","TimedTextEditor","KeyBindingUtil","hasCommandModifier","onChange","isPauseWhileTypingOn","playMedia","clearTimeout","pauseWhileTypingTimeOut","setTimeout","bind","assertThisInitialized","isEditable","saveTimer","localSave","mediaUrl","handleDoubleClick","event","nativeEvent","target","hasAttribute","parentElement","t","getAttribute","onWordClick","mediaUrlName","fileName","convertToRaw","localStorage","setItem","newLastLocalSavedDate","Date","getWordCount","wordArray","getPlainText","trim","match","setEditorContentState","convertFromRaw","createWithContent","decorator","forceRenderDecorator","getDecorator","newState","newEditorState","customKeyBindingFn","e","keyCode","altKey","getDefaultKeyBinding","preventDefault","handleKeyCommand","command","splitParagraph","currentSelection","isCollapsed","currentContent","splitBlock","splitState","targetSelection","originalBlock","blockMap","selectionBefore","getStartKey","originalBlockData","blockSpeaker","wordStartTime","isEndOfParagraph","getEntityAt","getStartOffset","closestEntityToSelection","findClosestEntityKeyToSelectionPoint","entityData","wordsDataForNew","newBlock","getText","afterMergeContentState","newestEditorState","wordsDataForOld","wordsLeft","afterMergeContentState2","startSelectionOffsetKey","lengthPlainTextForTheBlock","getLength","remainingCharNumber","j","initialSelectionOffset","updateTimecode","renderBlockWithTimecodes","component","editable","settingTimecodeFor","getCurrentWord","currentWord","isScrollIntoViewOn","document","querySelector","scrollIntoView","inline","loadData","prevProps","prevState","isPresentInLocalStorage","format","getItem","parse","lastLocalSavedDate","_this2","faMousePointer","faICursor","faKeyboard","faSave","tooltip","es","content","fadeDuration","fadeEasing","placement","radius","faQuestionCircle","round","onDoubleClick","scoped","stripPastedStyles","blockRendererFn","keyBindingFn","nextProps","CompositeDecorator","strategy","contentBlock","callback","findEntityRanges","character","getMutability","VideoPlayer","id","playsInline","src","onTimeUpdate","data-testid","onLoadedData","onLoadedDataGetDuration","ref","videoRef","VolumeControl","styles","switchContainer","switch","defaultChecked","handleMuteVolume","slider","Select","options","option","currentValue","handleChange","PlayerControls","setIntervalHelperBackward","skipBackward","setIntervalHelperForward","skipForward","clearIntervalHelper","title","rollback","faUndo","onMouseDown","onMouseUp","faBackward","faPause","faPlay","faForward","MediaPlayer_Select","playbackRateOptions","playbackRate","setPlayBackRate","promptSetCurrentTime","handleSaveTranscript","pictureInPicture","faTv","MediaPlayer_VolumeControl","ProgressBar","progress","buttonClick","min","max","returnHotKeys","self","alt+k","priority","handler","displayKeyCombination","alt+l","alt+j","alt+-","decreasePlaybackRate","alt+=","increasePlaybackRate","alt+r","rollBack","alt+t","PLAYBACK_RATES","MediaPlayer","hot_keys","setCurrentTime","newCurrentTime","newCurrentTimeInSeconds","current","readyState","userTimecodeValue","setTimeCodeOffset","newTimeCodeOffSet","rollBackValueInSeconds","tmpDesiredCurrentTime","handleTimeUpdate","hookOnTimeUpdate","handlePlayBackRateChange","input","slower","reverse","find","newSpeed","faster","handleChangeReplayRollbackValue","volume","paused","pauseMedia","pause","play","bool","handleProgressBarClick","getMediaCurrentTime","handleMediaDurationChange","currentDuration","currentDurationWithOffset","durationInSeconds","mediaDuration","handlePictureInPicture","pictureInPictureElement","exitPictureInPicture","catch","requestPictureInPicture","createRef","hotKeys","hookSeek","hookPlayMedia","hookIsPlaying","playingWhileListening","player","MediaPlayer_VideoPlayer","playerControlsSection","controlsSection","titleBox","MediaPlayer_PlayerControls","onSetCurrentTime","onSetTimecodeOffset","progressBar","MediaPlayer_ProgressBar","topSection","playerSection","hotkeys","Toggle","defaultValue","handleToggle","TimecodeOffset","resetTimecodeOffset","handleSetTimecodeOffset","setTimecodeOffset","offsetContainer","inputBox","button","Settings","handleSettingsToggle","faWindowClose","Settings_Toggle","defaultValuePauseWhileTyping","handlePauseWhileTyping","defaultValueScrollSync","handleIsScrollIntoViewChange","defaultRollBackValueInSeconds","handleRollBackValueInSeconds","handleShowTimecodes","handleShowSpeakers","Settings_TimecodeOffset","Shortcuts","hotKeysCheatsheet","keys","shortcut","listItem","shortcutLabel","shortcuts","handleShortcutsToggle","TranscriptEditor","ifPresentRetrieveTranscriptFromLocalStorage","timedTextEditorRef","info","loadLocalSavedData","handleWordClick","jumpToHere","NaN","handlePlayMedia","handleIsPlaying","isChecked","checked","rollBackValue","forceUpdate","showSettings","showShortcuts","getEditorContent","lastLocalSavedTime","mediaPlayer","TranscriptEditor_MediaPlayer","foo","TranscriptEditor_Settings","Settings_Shortcuts","timedTextEditor","TranscriptEditor_TimedTextEditor","container","aside","settingsContainer","settingsButton","faCog","main","SpeechRecognition","SpeechRecognitionInner","WrappedComponent","listening","BrowserSpeechRecognition","window","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","browserSupportsSpeechRecognition","autoStart","pauseAfterDisconnect","interimTranscript","finalTranscript","newTranscriptData","status","wonid","_Component","SpeechRecognitionContainer","minElapsed","now","speechTimerStartedAt","newWordData","wordResults","transcript","allWordData","onRecognitionDisconnect","startListening","updateTranscript","allResults","resultIndex","isFinal","concatTranscripts","resetTranscript","disconnect","DOMException","abortListening","stopListening","inherits","createClass","continuous","interimResults","onresult","onend","disconnectType","abort","stop","_len","arguments","transcriptParts","_key","totalTimeElapsed","assign","GenerateTranscript","reset","generateJSON","lang","transcriptJSON","filename","prettyData","download","_this$props","height","overflowY","SttTypeSelect","disabled","ExportFormatSelect","App","handleIsTextEditable","isTextEditable","handleSttTypeChange","defineProperty","handleExportFormatChange","exportTranscript","_this$transcriptEdito","transcriptEditorRef","contentType","blob","Blob","href","URL","createObjectURL","click","clearLocalStorage","clear","analyticsEvents","toConsumableArray","handleChangeTranscriptName","sttType","startListeningAndPlayingMedia","kaldiTedTalkTranscript","files","file","canPlayType","fileURL","fr","FileReader","onload","evt","readAsText","_this3","rel","lib_GenerateTranscript","loadDemo","handleChangeLoadMedia","handleChangeLoadMediaUrl","select_stt_json_type","handleChangeLoadTranscriptJson","select_export_format","lib_TranscriptEditor","width","render","src_App","getElementById","color-mid-grey","color-dark-grey","color-lightest-grey","helpText","hideInMobile"],"mappings":"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","file":"static/js/main.b5054b95.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"bar\":\"ProgressBar_bar__3lESu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectPlayerControl\":\"Select_selectPlayerControl__K8I2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__131gP\",\"header\":\"Settings_header__3gK1h\",\"closeButton\":\"Settings_closeButton__wD_fB\",\"controlsContainer\":\"Settings_controlsContainer__j6tEh\",\"settingElement\":\"Settings_settingElement__ErFP7\",\"label\":\"Settings_label__3QTmN\",\"rollbackValue\":\"Settings_rollbackValue__1OTsV\",\"timecodeLabel\":\"Settings_timecodeLabel__1LKIL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-darkest-grey\":\"#282828\",\"color-light-grey\":\"#767676\",\"color-labs-red\":\"#a0372d\",\"playerControls\":\"PlayerControls_playerControls__17zIK\",\"playerButton\":\"PlayerControls_playerButton__1zxDP\",\"playBackRate\":\"PlayerControls_playBackRate__3b9Gj\",\"timeBox\":\"PlayerControls_timeBox__3gHFS\",\"currentTime\":\"PlayerControls_currentTime__16CX-\",\"separator\":\"PlayerControls_separator__3IO7E\",\"duration\":\"PlayerControls_duration__1r95o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"DraftEditor-root\":\"TimedTextEditor_DraftEditor-root__bIxvS\",\"editor\":\"TimedTextEditor_editor__2Qhw9\",\"help\":\"TimedTextEditor_help__AP8BA\",\"icon\":\"TimedTextEditor_icon__1BfEt\",\"helpMessage\":\"TimedTextEditor_helpMessage__3fn_W\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Tooltip from 'react-simple-tooltip';\nimport { Map, List, fromJS } from 'immutable'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle, faMousePointer, faICursor, faUserEdit, faKeyboard, faSave } from '@fortawesome/free-solid-svg-icons';\n\nimport {\n  Editor,\n  EditorState,\n  CompositeDecorator,\n  convertFromRaw,\n  convertToRaw,\n  getDefaultKeyBinding,\n  Modifier,\n  KeyBindingUtil,\n  SelectionState,\n} from 'draft-js';\n\nimport Word from './Word';\nimport WrapperBlock from './WrapperBlock';\n\nimport sttJsonAdapter from '../../Util/adapters/index.js';\nimport exportAdapter from '../../Util/export-adapters/index.js';\nimport style from './index.module.css';\n\nconst { hasCommandModifier } = KeyBindingUtil;\n\nclass TimedTextEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      transcriptData: this.props.transcriptData,\n      isEditable: this.props.isEditable,\n      sttJsonType: this.props.sttJsonType,\n      timecodeOffset: this.props.timecodeOffset,\n      showSpeakers: this.props.showSpeakers,\n      showTimecodes: this.props.showTimecodes,\n      // inputCount: 0,\n      currentWord: {},\n      settingTimecodeFor: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n\n      return {\n        transcriptData: nextProps.transcriptData,\n        isEditable: nextProps.isEditable,\n        timecodeOffset: nextProps.timecodeOffset,\n        showSpeakers: nextProps.showSpeakers,\n        showTimecodes: nextProps.showTimecodes\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && ( this.props.mediaUrl!== null && !this.isPresentInLocalStorage(this.props.mediaUrl) )\n    ) {\n      this.loadData();\n    }\n    if (prevState.timecodeOffset !== this.state.timecodeOffset\n      || prevState.showSpeakers !== this.state.showSpeakers\n      || prevState.showTimecodes !== this.state.showTimecodes) {\n      // forcing a re-render is an expensive operation and\n      // there might be a way of optimising this at a later refactor (?)\n      // the issue is that WrapperBlock is not update on TimedTextEditor\n      // state change otherwise.\n      // for now compromising on this, as setting timecode offset, and\n      // display preferences for speakers and timecodes are not expected to\n      // be very frequent operations but rather one time setup in most cases.\n      this.forceRenderDecorator();\n    }\n  }\n\n  onChange = (editorState) => {\n    // https://draftjs.org/docs/api-reference-editor-state#lastchangetype\n    // https://draftjs.org/docs/api-reference-editor-change-type\n    // doing editorStateChangeType === 'insert-characters'  is triggered even\n    // outside of draftJS eg when clicking play button so using this instead\n    // see issue https://github.com/facebook/draft-js/issues/1060\n    if (this.state.editorState.getCurrentContent() !== editorState.getCurrentContent()) {\n      if (this.props.isPauseWhileTypingOn) {\n        if (this.props.isPlaying()) {\n          this.props.playMedia(false);\n          // Pause video for X seconds\n          const pauseWhileTypingIntervalInMilliseconds = 3000;\n          // resets timeout\n          clearTimeout(this.pauseWhileTypingTimeOut);\n          this.pauseWhileTypingTimeOut = setTimeout(function() {\n            // after timeout starts playing again\n            this.props.playMedia(true);\n          }.bind(this), pauseWhileTypingIntervalInMilliseconds);\n        }\n      }\n    }\n\n    if (this.state.isEditable) {\n      this.setState(() => ({\n        editorState\n      }), () => {\n        // saving when user has stopped typing for more then five seconds\n        if (this.saveTimer!== undefined) {\n          clearTimeout(this.saveTimer);\n        }\n        this.saveTimer = setTimeout(() => {\n          this.localSave(this.props.mediaUrl);\n        }, 5000);\n      });\n    }\n  }\n\n  loadData() {\n    if (this.props.transcriptData !== null) {\n      const blocks = sttJsonAdapter(this.props.transcriptData, this.props.sttJsonType);\n      console.log(\"transcript data and json type\", this.props.transcriptData, this.props.sttJsonType)\n      console.log(\"blocks\", blocks.blocks)\n      if (blocks.blocks.length === 0) {\n        console.error(\"No Blocks returned!\")\n        alert(\"No Blocks returned!\")\n\n        // TODO this still breaks but allows user to continue doing some stuff at least...\n        // probably want better error handling\n        return \n      }\n      this.setEditorContentState(blocks);\n    }\n  }\n\n  getEditorContent(exportFormat) {\n    const format = exportFormat || 'draftjs';\n\n    return exportAdapter(convertToRaw(this.state.editorState.getCurrentContent()), format);\n  }\n\n  // click on words - for navigation\n  // eslint-disable-next-line class-methods-use-this\n  handleDoubleClick = (event) => {\n    // nativeEvent --> React giving you the DOM event\n    let element = event.nativeEvent.target;\n    // find the parent in Word that contains span with time-code start attribute\n    while (!element.hasAttribute('data-start') && element.parentElement) {\n      element = element.parentElement;\n    }\n\n    if (element.hasAttribute('data-start')) {\n      const t = parseFloat(element.getAttribute('data-start'));\n      this.props.onWordClick(t);\n    }\n  }\n\n  localSave = () => {\n    console.log('localSave');\n    clearTimeout(this.saveTimer);\n    let mediaUrlName = this.props.mediaUrl;\n    // if using local media instead of using random blob name\n    // that makes it impossible to retrieve from on page refresh\n    // use file name\n    if (this.props.mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n\n    const data = convertToRaw(this.state.editorState.getCurrentContent());\n    localStorage.setItem(`draftJs-${ mediaUrlName }`, JSON.stringify(data));\n    const newLastLocalSavedDate = new Date().toString();\n    localStorage.setItem(`timestamp-${ mediaUrlName }`, newLastLocalSavedDate);\n\n    // return newLastLocalSavedDate;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isPresentInLocalStorage(mediaUrl) {\n    if (mediaUrl !== null) {\n      let mediaUrlName = mediaUrl;\n\n      if (mediaUrl.includes('blob')) {\n        mediaUrlName = this.props.fileName;\n      }\n\n      const data = localStorage.getItem(`draftJs-${ mediaUrlName }`);\n      if (data !== null) {\n        return true;\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  loadLocalSavedData(mediaUrl) {\n    let mediaUrlName = mediaUrl;\n    if (mediaUrl.includes('blob')) {\n      mediaUrlName = this.props.fileName;\n    }\n    const data = JSON.parse(localStorage.getItem(`draftJs-${ mediaUrlName }`));\n    if (data !== null) {\n      const lastLocalSavedDate = localStorage.getItem(`timestamp-${ mediaUrlName }`);\n      this.setEditorContentState(data);\n\n      return lastLocalSavedDate;\n    }\n\n    return '';\n  }\n\n  // originally from\n  // https://github.com/draft-js-plugins/draft-js-plugins/blob/master/draft-js-counter-plugin/src/WordCounter/index.js#L12\n  getWordCount = (editorState) => {\n    const plainText = editorState.getCurrentContent().getPlainText('');\n    const regex = /(?:\\r\\n|\\r|\\n)/g; // new line, carriage return, line feed\n    const cleanString = plainText.replace(regex, ' ').trim(); // replace above characters w/ space\n    const wordArray = cleanString.match(/\\S+/g); // matches words according to whitespace\n\n    return wordArray ? wordArray.length : 0;\n  }\n\n  /**\n  * @param {object} data.entityMap - draftJs entity maps - used by convertFromRaw\n  * @param {object} data.blocks - draftJs blocks - used by convertFromRaw\n  * set DraftJS Editor content state from blocks\n  * contains blocks and entityMap\n  */\n  setEditorContentState = (data) => {\n    console.log(\"data\", data)\n    if (!data || !data.blocks.length) {\n      console.error(\"No data given!\")\n    }\n    const contentState = convertFromRaw(data);\n    console.log(\"content State\", contentState)\n    // eslint-disable-next-line no-use-before-define\n    const editorState = EditorState.createWithContent(contentState, decorator);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TimedTextEditor',\n        action: 'setEditorContentState',\n        name: 'getWordCount',\n        value: this.getWordCount(editorState)\n      });\n    }\n\n    this.setState({ editorState });\n  }\n\n  // Helper function to re-render this component\n  // used to re-render WrapperBlock on timecode offset change\n  // or when show / hide preferences for speaker labels and timecodes change\n  forceRenderDecorator = () => {\n    // const { editorState, updateEditorState } = this.props;\n    const contentState = this.state.editorState.getCurrentContent();\n    const decorator = this.state.editorState.getDecorator();\n\n    const newState = EditorState.createWithContent(\n      contentState,\n      decorator\n    );\n\n    // this.setEditorNewContentState(newState);\n    const newEditorState = EditorState.push(newState, contentState);\n    this.setState({ editorState: newEditorState });\n  }\n\n  /**\n  * Update Editor content state\n  */\n  setEditorNewContentState = (newContentState) => {\n    const newEditorState = EditorState.push(this.state.editorState, newContentState);\n    this.setState({ editorState: newEditorState });\n\n    return newEditorState\n  }\n\n  /**\n   * Listen for draftJs custom key bindings\n   */\n  customKeyBindingFn = (e) => {\n    const enterKey = 13;\n    const spaceKey =32;\n    const kKey = 75;\n    const lKey = 76;\n    const jKey = 74;\n    const equalKey = 187;//used for +\n    const minusKey = 189; // -\n    const rKey = 82;\n    const tKey = 84;\n\n    if (e.keyCode === enterKey ) {\n      return 'split-paragraph';\n    }\n    // if alt key is pressed in combination with these other keys\n    if (e.altKey && ((e.keyCode === spaceKey)\n    || (e.keyCode === spaceKey)\n    || (e.keyCode === kKey)\n    || (e.keyCode === lKey)\n    || (e.keyCode === jKey)\n    || (e.keyCode === equalKey)\n    || (e.keyCode === minusKey)\n    || (e.keyCode === rKey)\n    || (e.keyCode === tKey))\n    ) {\n      e.preventDefault();\n\n      return 'keyboard-shortcuts';\n    }\n\n    return getDefaultKeyBinding(e);\n  }\n\n  /**\n   * Handle draftJs custom key commands\n   */\n  handleKeyCommand = (command) => {\n    if (command === 'split-paragraph') {\n      this.splitParagraph();\n    }\n\n    if (command === 'keyboard-shortcuts') {\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function to handle splitting paragraphs with return key\n   * on enter key, perform split paragraph at selection point.\n   * Add timecode of next word after split to paragraph\n   * as well as speaker name to new paragraph\n   */\n  splitParagraph = () => {\n    // https://github.com/facebook/draft-js/issues/723#issuecomment-367918580\n    // https://draftjs.org/docs/api-reference-selection-state#start-end-vs-anchor-focus\n    const currentSelection = this.state.editorState.getSelection();\n    // only perform if selection is not selecting a range of words\n    // in that case, we'd expect delete + enter to achieve same result.\n    if (currentSelection.isCollapsed()) {\n      const currentContent = this.state.editorState.getCurrentContent();\n      // https://draftjs.org/docs/api-reference-modifier#splitblock\n      const newContentState = Modifier.splitBlock(currentContent, currentSelection);\n      // https://draftjs.org/docs/api-reference-editor-state#push\n      // splitState is new editor state after the push\n      const splitState = EditorState.push(this.state.editorState, newContentState, 'split-block');\n      const targetSelection = splitState.getSelection();\n\n      const originalBlock = currentContent.blockMap.get(newContentState.selectionBefore.getStartKey());\n      const originalBlockData = originalBlock.getData();\n      const blockSpeaker = originalBlockData.get('speaker');\n\n      let wordStartTime = 'NA';\n      // eslint-disable-next-line prefer-const\n      let isEndOfParagraph = false;\n      // identify the entity (word) at the selection/cursor point on split.\n      // eslint-disable-next-line prefer-const\n      let entityKey = originalBlock.getEntityAt(currentSelection.getStartOffset());\n      // if there is no word entity associated with a char then there is no entity key\n      // at that selection point\n      if (entityKey === null) {\n        const closestEntityToSelection = this.findClosestEntityKeyToSelectionPoint(currentSelection, originalBlock);\n        entityKey = closestEntityToSelection.entityKey;\n        isEndOfParagraph = closestEntityToSelection.isEndOfParagraph;\n        // handle edge case when it doesn't find a closest entity (word)\n        // eg pres enter on an empty line\n        if (entityKey === null) {\n          return 'not-handled';\n        }\n      }\n      // if there is an entityKey at or close to the selection point\n      // can get the word startTime. for the new paragraph.\n      const entityInstance = currentContent.getEntity(entityKey);\n      const entityData = entityInstance.getData();\n      if (isEndOfParagraph) {\n        // if it's end of paragraph use end time of word for new paragraph\n        wordStartTime = entityData.end;\n      }\n      else {\n        wordStartTime = entityData.start;\n      }\n      // split paragraph\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n\n      // adding words data too\n      // starts with same worddata, and then replace the 'word' and 'punct' keys\n      let wordsDataForNew = originalBlockData.get('words') || [ {} ];\n      if (!List.isList(wordsDataForNew) || !Map.isMap(wordsDataForNew)) {\n        wordsDataForNew = fromJS(wordsDataForNew);\n      }\n      const newBlock = newContentState.getBlockAfter(originalBlock.getKey());\n      // make word and punct just the new words and punct\n      wordsDataForNew = wordsDataForNew.setIn([ 0, 'word' ], newBlock.getText())\n        .setIn([ 0, 'punct' ], newBlock.getText());\n\n      const afterMergeContentState = Modifier.mergeBlockData(\n        splitState.getCurrentContent(),\n        targetSelection,\n        {\n          'start': wordStartTime,\n          'speaker': blockSpeaker,\n          'words': wordsDataForNew,\n        }\n      );\n      const newestEditorState = this.setEditorNewContentState(afterMergeContentState);\n\n      // update old transcript word and punct\n      let wordsDataForOld = originalBlockData.get('words') || [ {} ];\n      if (!List.isList(wordsDataForOld) || !Map.isMap(wordsDataForOld)) {\n        wordsDataForOld = fromJS(wordsDataForOld);\n      }\n      const wordsLeft = originalBlock.getText().slice(0, - (newBlock.getText().length));\n      wordsDataForOld = wordsDataForOld.setIn([ 0, 'word' ], wordsLeft)\n        .setIn([ 0, 'punct' ], wordsLeft);\n\n      const afterMergeContentState2 = Modifier.mergeBlockData(\n        newestEditorState.getCurrentContent(),\n        SelectionState.createEmpty(originalBlock.getKey()),\n        {\n          'words': wordsDataForOld,\n        }\n      );\n      this.setEditorNewContentState(afterMergeContentState2);\n\n\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  /**\n   * Helper function for splitParagraph\n   * to find the closest entity (word) to a selection point\n   * that does not fall on an entity to begin with\n   * Looks before if it's last char in a paragraph block.\n   * After for everything else.\n   */\n  findClosestEntityKeyToSelectionPoint = (currentSelection, originalBlock) => {\n    // set defaults\n    let entityKey = null;\n    let isEndOfParagraph = false;\n\n    // selection offset from beginning of the paragraph block\n    const startSelectionOffsetKey = currentSelection.getStartOffset();\n    // length of the plain text for the ContentBlock\n    const lengthPlainTextForTheBlock = originalBlock.getLength();\n    // number of char from selection point to end of paragraph\n    const remainingCharNumber = lengthPlainTextForTheBlock - startSelectionOffsetKey;\n    // if it's the last char in the paragraph - get previous entity\n    if (remainingCharNumber === 0 ) {\n      isEndOfParagraph = true;\n      for (let j = lengthPlainTextForTheBlock; j >0 ; j--) {\n        entityKey = originalBlock.getEntityAt(j);\n        if (entityKey!== null) {\n          // if it finds it then return\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n    // if it's first char or another within the block - get next entity\n    else {\n      console.log('Main part of paragraph');\n      let initialSelectionOffset = currentSelection.getStartOffset();\n      for (let i = 0; i < remainingCharNumber ; i++) {\n        initialSelectionOffset +=i;\n        entityKey = originalBlock.getEntityAt(initialSelectionOffset);\n        // if it finds it then return\n        if (entityKey !== null) {\n          return { entityKey, isEndOfParagraph };\n        }\n      }\n    }\n\n    // cover edge cases where it doesn't find it\n    return { entityKey, isEndOfParagraph };\n  }\n\n  updateTimecode = (data) => {\n    console.log(\"updating with data\", data)\n  }\n\n  renderBlockWithTimecodes = () => {\n    return {\n      component: WrapperBlock,\n      editable: true,\n      props: {\n        showSpeakers: this.state.showSpeakers,\n        showTimecodes: this.state.showTimecodes,\n        timecodeOffset: this.state.timecodeOffset,\n        editorState: this.state.editorState,\n        setEditorNewContentState: this.setEditorNewContentState,\n        onJumpToHereClick: this.props.onJumpToHereClick,\n        onWordClick: this.props.onWordClick,\n        handleAnalyticsEvents: this.props.handleAnalyticsEvents,\n        settingTimecodeFor: this.state.settingTimecodeFor,\n        updateTimecode: this.updateTimecode,\n        togglePlayMedia: this.props.playMedia,\n        isPlaying: this.props.isPlaying,\n      }\n    };\n  }\n\n  getCurrentWord = () => {\n    const currentWord = {\n      start: 'NA',\n      end: 'NA'\n    };\n\n    if (this.state.transcriptData) {\n      const contentState = this.state.editorState.getCurrentContent();\n      // TODO: using convertToRaw here might be slowing down performance(?)\n      const contentStateConvertEdToRaw = convertToRaw(contentState);\n      const entityMap = contentStateConvertEdToRaw.entityMap;\n\n      for (var entityKey in entityMap) {\n        const entity = entityMap[entityKey];\n        const word = entity.data;\n\n        if (word.start <= this.props.currentTime && word.end >= this.props.currentTime) {\n          currentWord.start = word.start;\n          currentWord.end = word.end;\n        }\n      }\n    }\n\n    if (currentWord.start !== 'NA') {\n      if (this.props.isScrollIntoViewOn) {\n        const currentWordElement = document.querySelector(`.Word[data-start=\"${ currentWord.start }\"]`);\n        currentWordElement.scrollIntoView({ block: 'nearest', inline: 'center' });\n      }\n    }\n\n    return currentWord;\n  }\n\n  render() {\n    const helpMessage = <div className={ style.helpMessage }>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faMousePointer } />Double click on a word or timestamp to jump to that point in the video.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faICursor } />Start typing to edit text.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faUserEdit } />You can add and change names of speakers in your transcript.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faKeyboard } />Use keyboard shortcuts for quick control.</span>\n      <span><FontAwesomeIcon className={ style.icon } icon={ faSave } />Save & export to get a copy to your desktop.</span>\n    </div>;\n\n    const tooltip = <Tooltip\n      className={ style.help }\n      content={ helpMessage }\n      fadeDuration={ 250 }\n      fadeEasing={ 'ease-in' }\n      placement={ 'bottom' }\n      radius={ 5 }>\n      <FontAwesomeIcon className={ style.icon } icon={ faQuestionCircle } />\n      How does this work?\n    </Tooltip>;\n\n    const currentWord = this.getCurrentWord();\n    const highlightColour = '#c0def3';\n    const unplayedColor = '#767676';\n    const correctionBorder = '1px dotted blue';\n\n    // Time to the nearest half second\n    const time = Math.round(this.props.currentTime * 4.0) / 4.0;\n\n    const editor = (\n      <section\n        className={ style.editor }\n        onDoubleClick={ event => this.handleDoubleClick(event) }>\n\n        <style scoped>\n          {`.Word[data-start=\"${ currentWord.start }\"] { background-color: ${ highlightColour }; text-shadow: 0 0 0.01px black }`}\n          {/*`div.Word[data-start=\"${ currentWord.start }\"]+span { background-color: ${ highlightColour } }` This would highlight edits that are added to the original. Doesn't highlight text before though...would have to use JS and dig into draft js more   */}\n          {`.Word[data-prev-times~=\"${ Math.floor(time) }\"] { color: ${ unplayedColor } }`}\n          {`.Word[data-prev-times~=\"${ time }\"] { color: ${ unplayedColor } }`}\n          {`.Word[data-confidence=\"low\"] { border-bottom: ${ correctionBorder } }`}\n        </style>\n\n        <Editor\n          editorState={ this.state.editorState }\n          onChange={ this.onChange }\n          stripPastedStyles\n          blockRendererFn={ this.renderBlockWithTimecodes }\n          handleKeyCommand={ command => this.handleKeyCommand(command) }\n          keyBindingFn={ e => this.customKeyBindingFn(e) }\n        />\n      </section>\n    );\n\n    return (\n      <section>\n        { tooltip }\n        { this.props.transcriptData !== null ? editor : null }\n      </section>\n    );\n  }\n}\n\n// DraftJs decorator to recognize which entity is which\n// and know what to apply to what component\nconst getEntityStrategy = mutability => (contentBlock, callback, contentState) => {\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity();\n    if (entityKey === null) {\n      return false;\n    }\n\n    return contentState.getEntity(entityKey).getMutability() === mutability;\n  }, callback);\n};\n\n// decorator definition - Draftjs\n// defines what to use to render the entity\nconst decorator = new CompositeDecorator([\n  {\n    strategy: getEntityStrategy('MUTABLE'),\n    component: Word,\n  },\n]);\n\nTimedTextEditor.propTypes = {\n  transcriptData: PropTypes.object,\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  onWordClick: PropTypes.func,\n  sttJsonType: PropTypes.string,\n  isPlaying: PropTypes.func,\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.number,\n  isScrollIntoViewOn: PropTypes.bool,\n  isPauseWhileTypingOn: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleAnalyticsEvents: PropTypes.func\n};\n\nexport default TimedTextEditor;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Word extends PureComponent {\n  generateConfidence = (data) => {\n    // handling edge case where confidence score not present\n    if (data.confidence) {\n      return data.confidence > 0.6 ? 'high' : 'low';\n    }\n\n    return 'high';\n  }\n\n  generatePreviousTimes = (data) => {\n    let prevTimes = '';\n\n    for (let i = 0; i < data.start; i++) {\n      prevTimes += `${ i } `;\n    }\n\n    if (data.start % 1 > 0) {\n      // Find the closest quarter-second to the current time, for more dynamic results\n      const dec = Math.floor((data.start % 1) * 4.0) / 4.0;\n      prevTimes += ` ${ Math.floor(data.start) + dec }`;\n    }\n\n    return prevTimes;\n  }\n\n  render() {\n    const data = this.props.entityKey\n      ? this.props.contentState.getEntity(this.props.entityKey).getData()\n      : {};\n\n    return (\n      <div\n        style={ { display: 'inline-block' } }\n        data-start={ data.start }\n        data-end={ data.end }\n        data-confidence = { this.generateConfidence(data) }\n        data-prev-times = { this.generatePreviousTimes(data) }\n        data-entity-key={ data.key }\n        className=\"Word\">\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nWord.propTypes = {\n  contentState: PropTypes.object,\n  entityKey: PropTypes.string,\n  children: PropTypes.array\n};\n\nexport default Word;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserEdit } from '@fortawesome/free-solid-svg-icons';\n\nimport style from './WrapperBlock.module.css';\n\nclass SpeakerLabel extends PureComponent {\n  render() {\n    return (\n      <span className={ style.speaker }>\n        <span\n          className={ style.EditLabel }\n          onClick={ this.props.handleOnClickEdit }>\n          <FontAwesomeIcon icon={ faUserEdit } />\n        </span>\n        {this.props.name}\n      </span>\n    );\n  }\n}\n\nSpeakerLabel.propTypes = {\n  name: PropTypes.string,\n  handleOnClickEdit: PropTypes.func\n};\n\nexport default SpeakerLabel;\n","/**\n* Raised in this comment https://github.com/bbc/react-transcript-editor/pull/9\n* abstracted from https://github.com/bbc/newslabs-cdn/blob/master/js/20-bbcnpf.utils.js\n* In broadcast VIDEO, timecode is NOT hh:mm:ss:ms, it's hh:mm:ss:ff where ff is frames,\n* dependent on the framerate of the media concerned.\n* `hh:mm:ss:ff`\n*/\n\n/**\n * Helper function\n * Rounds to the 14milliseconds boundaries\n * Time in video can only \"exist in\" 14milliseconds boundaries.\n * This makes it possible for the HTML5 player to be frame accurate.\n * @param {*} seconds\n * @param {*} fps\n */\nconst normalisePlayerTime = function (seconds, fps) {\n  return Number((1.0 / fps * Math.floor(Number((fps * seconds).toPrecision(12)))).toFixed(2));\n};\n\n/*\n* @param {*} seconds\n* @param {*} fps\n*/\nconst secondsToTimecode = function (seconds, framePerSeconds) {\n  // written for PAL non-drop timecode\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n\n  const normalisedSeconds = normalisePlayerTime(seconds, fps);\n\n  const wholeSeconds = Math.floor(normalisedSeconds);\n  const frames = ((normalisedSeconds - wholeSeconds) * fps).toFixed(2);\n\n  // prepends zero - example pads 3 to 03\n  function _padZero(n) {\n    if (n < 10) return `0${ parseInt(n) }`;\n\n    return parseInt(n);\n  }\n\n  return `${ _padZero((wholeSeconds / 60 / 60) % 60)\n  }:${\n    _padZero((wholeSeconds / 60) % 60)\n  }:${\n    _padZero(wholeSeconds % 60)\n  }:${\n    _padZero(frames) }`;\n};\n\nexport default secondsToTimecode;\n","/**\n * Helperf unction\n * @param {*} tc\n * @param {*} fps\n */\nconst timecodeToFrames = function (tc, fps) {\n  // TODO make 29.97 fps drop-frame aware - works for 25 only.\n\n  const s = tc.split(':');\n  let frames = parseInt(s[3]);\n  frames += parseInt(s[2]) * fps;\n  frames += parseInt(s[1]) * (fps * 60);\n  frames += parseInt(s[0]) * (fps * 60 * 60);\n\n  return frames;\n};\n\n/**\n * Convert broadcast timecodes to seconds\n * @param {*} tc - `hh:mm:ss:ff`\n * @param {*} framePerSeconds - defaults to 25 if not provided\n */\nconst timecodeToSecondsHelper = function (tc, framePerSeconds) {\n  let fps = 25;\n  if (framePerSeconds !== undefined) {\n    fps = framePerSeconds;\n  }\n  const frames = timecodeToFrames(tc, fps);\n\n  return Number(Number(frames / fps).toFixed(2));\n};\n\nexport default timecodeToSecondsHelper;\n","const countColon = timecode => timecode.split(':').length;\n\nconst includesFullStop = timecode => timecode.includes('.');\n\nconst isOneDigit = str => str.length === 1;\n\nconst padTimeToTimecode = (time) => {\n  if (typeof time === 'string') {\n    switch (countColon(time)) {\n    case 4:\n      // is already in timecode format\n      // hh:mm:ss:ff\n      return time;\n    case 2:\n      // m:ss\n      if (isOneDigit(time.split(':')[0])) {\n        return `00:0${ time }:00`;\n      }\n\n      return `00:${ time }:00`;\n    case 3:\n      // hh:mm:ss\n      return `${ time }:00`;\n    default:\n      // mm.ss\n      if (includesFullStop(time)) {\n        // m.ss\n        if (isOneDigit(time.split('.')[0])) {\n          return `00:0${ time.split('.')[0] }:${ time.split('.')[1] }:00`;\n        }\n\n        return `00:${ time.replace('.', ':') }:00`;\n      }\n\n      // if just int, then it's seconds\n      // s\n      if (isOneDigit(time)) {\n        return `00:00:0${ time }:00`;\n      }\n\n      return `00:00:${ time }:00`;\n    }\n    // edge case if it's number return a number coz cannot refactor\n    // TODO: might need to refactor and move this elsewhere\n  } else {\n    return time;\n  }\n};\n\nexport default padTimeToTimecode;\n","/**\n * Wrapping around \"time stamps\" and timecode conversion modules\n * To provide more support for variety of formats.\n */\nimport secondsToTimecode from './secondsToTimecode';\nimport timecodeToSecondsHelper from './timecodeToSeconds';\nimport padTimeToTimecode from './padTimeToTimecode';\n\n/**\n * @param {*} time\n * Can take as input timecodes in the following formats\n * - hh:mm:ss:ff\n * - mm:ss\n * - m:ss\n * - ss - seconds --> if it's already in seconds then it just returns seconds\n * - hh:mm:ff\n * @todo could be refactored with some helper functions for clarity\n */\nconst timecodeToSeconds = (time) => {\n  if (typeof time === 'string') {\n    const resultPadded = padTimeToTimecode(time);\n    const resultConverted = timecodeToSecondsHelper(resultPadded);\n\n    return resultConverted;\n  }\n\n  // assuming it receive timecode as seconds as string '600'\n  return parseFloat(time);\n};\n\nconst shortTimecode = (time) => {\n  const timecode = secondsToTimecode(time);\n\n  return timecode.slice(0, -3);\n};\n\nexport { secondsToTimecode, timecodeToSeconds, shortTimecode };\n","import React from 'react';\nimport { EditorBlock, Modifier, EditorState, SelectionState } from 'draft-js';\n\nimport SpeakerLabel from './SpeakerLabel';\nimport { shortTimecode, secondsToTimecode } from '../../Util/timecode-converter/';\n\nimport style from './WrapperBlock.module.css';\nimport { Map, List, fromJS } from 'immutable'\n\nclass WrapperBlock extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      speaker: '',\n      start: 0, // time in seconds from start of media\n      timecodeOffset: this.props.blockProps.timecodeOffset\n    };\n  }\n\n  componentDidMount() {\n    const { block } = this.props;\n    const speaker = block.getData().get('speaker');\n\n    const start = block.getData().get('start');\n\n    this.setState({\n      speaker: speaker,\n      start: start,\n    });\n  }\n\n  handleOnClickEdit = () => {\n    const newSpeakerName = prompt('New Speaker Name?');\n\n    if (newSpeakerName !== '' && newSpeakerName !== null) {\n      this.setState({ speaker: newSpeakerName });\n      if (this.props.blockProps.handleAnalyticsEvents !== undefined) {\n        this.props.blockProps.handleAnalyticsEvents({\n          category: 'WrapperBlock',\n          action: 'handleOnClickEdit',\n          name: 'newSpeakerName',\n          value: newSpeakerName\n        });\n      }\n\n      // From docs: https://draftjs.org/docs/api-reference-selection-state#keys-and-offsets\n      // selection points are tracked as key/offset pairs,\n      // where the key value is the key of the ContentBlock where the point is positioned\n      // and the offset value is the character offset within the block.\n\n      // Get key of the currentBlock\n      const keyForCurrentCurrentBlock = this.props.block.getKey();\n      // create empty selection for current block\n      // https://draftjs.org/docs/api-reference-selection-state#createempty\n      const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n      const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n      const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n      const newBlockDataWithSpeakerName = { speaker: newSpeakerName };\n\n      // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n      const newContentState = Modifier.mergeBlockData(\n        this.props.contentState,\n        currentBlockSelectionState,\n        newBlockDataWithSpeakerName\n      );\n\n      this.props.blockProps.setEditorNewContentState(newContentState);\n    }\n  }\n\n  getPrevStartTime = () => {\n    const keyForCurrentCurrentBlock = this.props.block.getKey();\n    const prevBlock = this.props.contentState.getBlockBefore(keyForCurrentCurrentBlock); \n    // won't be a prev block if it's the first block!\n    const prevBlockStart = prevBlock ? prevBlock.getData().get('start') : 0;\n\n    return parseFloat(prevBlockStart)\n  }\n\n  getEndTime = () => {\n    const keyForCurrentCurrentBlock = this.props.block.getKey();\n    const nextBlock = this.props.contentState.getBlockAfter(keyForCurrentCurrentBlock); \n    // won't be a next block if it's the last block, so setting really high number\n    const nextBlockStart = nextBlock ? nextBlock.getData().get('start') : 9*999*999*999;\n\n    return parseFloat(nextBlockStart)\n  }\n\n  handleTimecodeClick = () => {\n    let wasPlaying = this.props.blockProps.isPlaying();\n    this.props.blockProps.togglePlayMedia(false);\n\n    // does the whole thing after making sure it's really paused\n    const doIt = () => {\n      let newStartTime = prompt('New Time in seconds? (Prev time: [coming soon])');\n\n      if (newStartTime !== '' && newStartTime !== null) {\n        newStartTime = parseFloat(newStartTime)\n\n        // make them put in new time or just cancel if start time is after end time\n        if (newStartTime >= this.getEndTime()) {\n          alert(\"Start Time must be before next block's start time\")\n\n          return\n        } else if (newStartTime <= this.getPrevStartTime()) {\n          alert(\"Start Time must be after previous block's start time\")\n\n          return\n        }\n\n\n        this.setState({ start: newStartTime });\n\n        // Get key of the currentBlock\n        const keyForCurrentCurrentBlock = this.props.block.getKey();\n\n        // create empty selection for current block\n        // https://draftjs.org/docs/api-reference-selection-state#createempty\n        const currentBlockSelection = SelectionState.createEmpty(keyForCurrentCurrentBlock);\n        const editorStateWithSelectedCurrentBlock = EditorState.acceptSelection(this.props.blockProps.editorState, currentBlockSelection);\n\n        const currentBlockSelectionState = editorStateWithSelectedCurrentBlock.getSelection();\n\n        let wordsData = this.props.block.getData().get('words') || [ {} ] // really should just break...being too flexible here...\n        console.log(\"words data\", wordsData)\n        if (!List.isList(wordsData) || !Map.isMap(wordsData)) {\n          wordsData = fromJS(wordsData)\n        }\n        wordsData = wordsData.setIn([ 0, 'start' ], newStartTime)\n        console.log(\"words data\", wordsData)\n\n        const newBlockData = {\n          start: newStartTime,\n          words: wordsData,\n        };\n        console.log(newBlockData, newBlockData.words.toJSON()[0])\n\n\n        // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n        const newContentState = Modifier.mergeBlockData(\n          this.props.contentState,\n          currentBlockSelectionState,\n          newBlockData\n        );\n\n        const newerEditorState = this.props.blockProps.setEditorNewContentState(newContentState);\n\n        //////////////////////////////////////////////////////\n        // set end time of previous block to this start time TODO (though if never use end time in app, might not be necessary\n        const previousBlock = this.props.contentState.getBlockBefore(keyForCurrentCurrentBlock);\n        // won't be a prev block if it's the first block\n        if (previousBlock) {\n          const previousBlockSelection = SelectionState.createEmpty(previousBlock.getKey());\n          const editorStateWithSelectedPrevBlock = EditorState.acceptSelection(this.props.blockProps.editorState, previousBlockSelection);\n\n          const prevBlockSelectionState = editorStateWithSelectedPrevBlock.getSelection();\n          let prevWordsData = previousBlock.getData().get('words') || [ {} ]// really should just break...being too flexible here...\n          // draft js will turn into immutable anyways, so might as well beat them to the punch\n          if (!List.isList(prevWordsData) || !Map.isMap(prevWordsData)) {\n            prevWordsData = fromJS(prevWordsData)\n          }\n          prevWordsData = prevWordsData.setIn([ 0, 'end' ], newStartTime)\n\n          const newPrevBlockData = {\n            words: prevWordsData,\n          };\n\n          // https://draftjs.org/docs/api-reference-modifier#mergeblockdata\n          const newPrevBlockContentState = Modifier.mergeBlockData(\n            newerEditorState.getCurrentContent(),\n            prevBlockSelectionState,\n            newPrevBlockData\n          );\n\n          this.props.blockProps.setEditorNewContentState(newPrevBlockContentState);\n        }\n      }\n      if (wasPlaying) {\n        this.props.blockProps.togglePlayMedia(true)\n      }\n    }\n\n    // this is so bad...but so is using prompt ha\n    // makes sure that the video stops, because if prompt opens before it stops, it keeps playign\n    const interval = setInterval(() => {\n      if (!this.props.blockProps.isPlaying()) {\n        clearInterval(interval)\n        doIt();\n      }\n      console.log(\"still waiting\")\n    }, 20)\n\n  }\n\n  handleJumpToHereClick = () => {\n    this.props.blockProps.onJumpToHereClick(this.state.start);\n  }\n\n  render() {\n    let startTimecode = this.state.start;\n    const { blockProps } = this.props\n    if (blockProps.timecodeOffset) {\n      startTimecode += this.props.blockProps.timecodeOffset;\n    }\n\n    const speakerElement = <SpeakerLabel\n      name={ this.state.speaker }\n      handleOnClickEdit={ this.handleOnClickEdit }\n    />;\n\n    const timecodeElement = <span className={ style.time } onClick={this.handleTimecodeClick}>{shortTimecode(startTimecode)}</span>;\n\n    return (\n      <div className={ style.WrapperBlock }>\n        <div className={ style.markers }>\n          <button onClick={ this.handleJumpToHereClick }>Jump to Here</button>\n          {blockProps.showSpeakers ? speakerElement : ''}\n          {blockProps.showTimecodes ? timecodeElement : ''}\n        </div>\n        <div className={ style.text }>\n          <EditorBlock { ...this.props } />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WrapperBlock;\n","/**\n * Helper function to generate draft.js entities,\n * see unit test for example data structure\n * it adds offset and length to recognise word in draftjs\n */\n\n/**\n*  @param {json} words  - List of words\n*  @param {string} wordAttributeName - eg 'punct' or 'text' or etc.\n* attribute for the word object containing the text. eg word ={ punct:'helo', ... }\n*  or eg word ={ text:'helo', ... }\n*/\nconst generateEntitiesRanges = (words, wordAttributeName) => {\n  let position = 0;\n\n  return words.map((word) => {\n    const result = {\n      start: word.start,\n      end: word.end,\n      confidence: word.confidence,\n      text: word[wordAttributeName],\n      offset: position,\n      length: word[wordAttributeName].length,\n      key: Math.random()\n        .toString(36)\n        .substring(6),\n    };\n    // increase position counter - to determine word offset in paragraph\n    position = position + word[wordAttributeName].length + 1;\n\n    return result;\n  });\n};\n\nexport default generateEntitiesRanges;\n","/**\n * Convert BBC Kaldi json\n ```\n {\n    \"action\": \"audio-transcribe\",\n    \"retval\": {\n      \"status\": true,\n      \"wonid\": \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\",\n      \"punct\": \"There is a day. About ten years ago when  ...\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        ...\n```\n *\n * into\n *\n ```\n const blocks = [\n  {\n    \"text\": \"There is a day.\",\n    \"type\": \"paragraph\",\n    \"data\": {\n      \"speaker\": \"TBC 0\",\n      \"words\": [\n        {\n          \"start\": 13.02,\n          \"confidence\": 0.68,\n          \"end\": 13.17,\n          \"word\": \"there\",\n          \"punct\": \"There\",\n          \"index\": 0\n        },\n        {\n          \"start\": 13.17,\n          \"confidence\": 0.61,\n          \"end\": 13.38,\n          \"word\": \"is\",\n          \"punct\": \"is\",\n          \"index\": 1\n        },\n        {\n          \"start\": 13.38,\n          \"confidence\": 0.99,\n          \"end\": 13.44,\n          \"word\": \"a\",\n          \"punct\": \"a\",\n          \"index\": 2\n        },\n        {\n          \"start\": 13.44,\n          \"confidence\": 1,\n          \"end\": 13.86,\n          \"word\": \"day\",\n          \"punct\": \"day.\",\n          \"index\": 3\n        }\n      ],\n      \"start\": 13.02\n    },\n    \"entityRanges\": [\n      {\n        \"start\": 13.02,\n        \"end\": 13.17,\n        \"confidence\": 0.68,\n        \"text\": \"There\",\n        \"offset\": 0,\n        \"length\": 5,\n        \"key\": \"li6c6ld\"\n      },\n      {\n        \"start\": 13.17,\n        \"end\": 13.38,\n        \"confidence\": 0.61,\n        \"text\": \"is\",\n        \"offset\": 6,\n        \"length\": 2,\n        \"key\": \"pcgzkp6\"\n      },\n      {\n        \"start\": 13.38,\n        \"end\": 13.44,\n        \"confidence\": 0.99,\n        \"text\": \"a\",\n        \"offset\": 9,\n        \"length\": 1,\n        \"key\": \"ngomd9\"\n      },\n      {\n        \"start\": 13.44,\n        \"end\": 13.86,\n        \"confidence\": 1,\n        \"text\": \"day.\",\n        \"offset\": 11,\n        \"length\": 4,\n        \"key\": \"sgmfl4f\"\n      }\n    ]\n  },\n  ...\n```\n *\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from kaldi transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words opbjects from kaldi transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  // for us, until can figure out a way to go from speech recognition to punctuation, so can divide up speech blocks, with Khmer just want to make each word a paragraph, since that's kind of what ends up happening.\n  words.forEach((word) => {\n    // if word contains punctuation TODO add Khmer punctuation. Right now, will always return false\n    if (true || /[.?!\\s]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n  // RQ added. If we don't add this though, I think it ends up skipping the last paragraph...or for Khmer, maybe the whole transcript!\n  results.push(paragraph);\n\n  return results;\n};\n\nconst bbcKaldiToDraft = (bbcKaldiJson) => {\n  const results = [];\n  let tmpWords;\n\n  // BBC Octo Labs API Response wraps Kaldi response around retval,\n  // while kaldi contains word attribute at root\n  if (bbcKaldiJson.retval !== undefined) {\n    tmpWords = bbcKaldiJson.retval.words;\n  } else {\n    tmpWords = bbcKaldiJson.words;\n  }\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    if (!paragraph.words.length) {\n      return\n    }\n\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default bbcKaldiToDraft;\n","/**\n * Convert autoEdit2 Json\n *\n * into\n *\n ```\n const blocks = [\n        {\n            text: 'Hello',\n            type: 'paragraph',\n            data: {\n            speaker: 'Foo',\n            },\n            entityRanges: [],\n        },\n        {\n            text: 'World',\n            type: 'paragraph',\n            data: {\n            speaker: 'Bar',\n            },\n            entityRanges: [],\n        },\n        ];\n```\n *\n * See samples folder and test file\n * for reference data structures\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index';\n\n/**\n * groups words list from autoEdit transcript based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @param {array} words - array of words objects from autoEdit transcript\n */\n\nconst groupWordsInParagraphs = (autoEditText) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  autoEditText.forEach((autoEditparagraph) => {\n    autoEditparagraph.paragraph.forEach((autoEditLine) => {\n      autoEditLine.line.forEach((word) => {\n        // adjusting time reference attributes from\n        // `startTime` `endTime` to `start` `end`\n        // for word object\n        const tmpWord = {\n          text: word.text,\n          start: word.startTime,\n          end: word.endTime,\n        };\n        //  if word contains punctuation\n        if (/[.?!]/.test(word.text)) {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n          results.push(paragraph);\n          // reset paragraph\n          paragraph = { words: [], text: [] };\n        } else {\n          paragraph.words.push(tmpWord);\n          paragraph.text.push(word.text);\n        }\n      });\n    });\n  });\n\n  return results;\n};\n\nconst autoEdit2ToDraft = (autoEdit2Json) => {\n  const results = [];\n  const tmpWords = autoEdit2Json.text;\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph, i) => {\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: `TBC ${ i }`,\n        words: paragraph.words,\n        start: paragraph.words[0].start\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'text'),\n    };\n    // console.log(JSON.stringify(draftJsContentBlockParagraph,null,2))\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  // console.log(JSON.stringify(results,null,2))\n  return results;\n};\n\nexport default autoEdit2ToDraft;\n","/**\n *  Convert Speechmatics\n */\n\nimport generateEntitiesRanges from '../generate-entities-ranges/index.js';\n\n/**\n * groups words list from speechmatics based on punctuation.\n * @todo To be more accurate, should introduce an honorifics library to do the splitting of the words.\n * @todo As this function is also used in the bbc-kaldi adapter, should it be refactored into its own file?\n * @param {array} words - array of words objects from speechmatics transcript\n */\n\nconst groupWordsInParagraphs = (words) => {\n  const results = [];\n  let paragraph = { words: [], text: [] };\n\n  words.forEach((word) => {\n    // if word contains punctuation\n    if (/[.?!]/.test(word.punct)) {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n      results.push(paragraph);\n      // reset paragraph\n      paragraph = { words: [], text: [] };\n    } else {\n      paragraph.words.push(word);\n      paragraph.text.push(word.punct);\n    }\n  });\n\n  return results;\n};\n\n/**\n * Determines the speaker of a paragraph by comparing the start time of the paragraph with\n * the speaker times.\n * @param {float} start - Starting point of paragraph\n * @param {array} speakers - list of all speakers with start and end time\n */\nconst getSpeaker = (start, speakers) => {\n  for (var speakerIdx in speakers) {\n    const speaker = speakers[speakerIdx];\n    if (start >= speaker.start & start < speaker.end) {\n      return speaker.name;\n    }\n  }\n\n  return 'UNK';\n};\n\n/**\n * Speechmatics treats punctuation as own words. This function merges punctuations with\n * the pevious word and adjusts the total duration of the word.\n * @param {array} words - array of words objects from speechmatics transcript\n */\nconst curatePunctuation = (words) => {\n  const curatedWords = [];\n  words.forEach((word) => {\n    if (/[.?!]/.test(word.name)) {\n      curatedWords[curatedWords.length-1].name = curatedWords[curatedWords.length-1].name + word.name;\n      curatedWords[curatedWords.length-1].duration = (parseFloat(curatedWords[curatedWords.length-1].duration) + parseFloat(word.duration)).toString();\n    } else {\n      curatedWords.push(word);\n    }\n  }\n  );\n\n  return curatedWords;\n};\n\nconst speechmaticsToDraft = (speechmaticsJson) => {\n  const results = [];\n\n  let tmpWords;\n  tmpWords = curatePunctuation(speechmaticsJson.words);\n  tmpWords = tmpWords.map((element, index) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      confidence: element.confidence,\n      word: element.name.toLowerCase().replace(/[.?!]/g, ''),\n      punct: element.name,\n      index: index,\n    });\n  });\n\n  let tmpSpeakers;\n  tmpSpeakers = speechmaticsJson.speakers;\n  tmpSpeakers = tmpSpeakers.map((element) => {\n    return ({\n      start: element.time,\n      end: (parseFloat(element.time) + parseFloat(element.duration)).toString(),\n      name: element.name,\n    });\n  });\n\n  const wordsByParagraphs = groupWordsInParagraphs(tmpWords);\n\n  wordsByParagraphs.forEach((paragraph) => {\n    const paragraphStart = paragraph.words[0].start;\n    const draftJsContentBlockParagraph = {\n      text: paragraph.text.join(' '),\n      type: 'paragraph',\n      data: {\n        speaker: getSpeaker(paragraphStart, tmpSpeakers),\n        words: paragraph.words,\n        start: paragraphStart\n      },\n      // the entities as ranges are each word in the space-joined text,\n      // so it needs to be compute for each the offset from the beginning of the paragraph and the length\n      entityRanges: generateEntitiesRanges(paragraph.words, 'punct'), // wordAttributeName\n    };\n    results.push(draftJsContentBlockParagraph);\n  });\n\n  return results;\n};\n\nexport default speechmaticsToDraft;\n","import bbcKaldiToDraft from './bbc-kaldi/index';\nimport autoEdit2ToDraft from './autoEdit2/index';\nimport speechmaticsToDraft from './speechmatics/index';\n/**\n * Adapters for STT conversion\n * @param {json} transcriptData - A json transcript with some word accurate timecode\n * @param {string} sttJsonType - the type of transcript supported by the available adapters\n */\n\n// converts nested arrays into one dimensional array\nconst flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n\nconst createEntityMap = (blocks) => {\n  const entityRanges = blocks.map(block => block.entityRanges);\n  // eslint-disable-next-line no-use-before-define\n  const flatEntityRanges = flatten(entityRanges);\n\n  const entityMap = {};\n\n  flatEntityRanges.forEach((data) => {\n    entityMap[data.key] = {\n      type: 'WORD',\n      mutability: 'MUTABLE',\n      data,\n    };\n  });\n\n  return entityMap;\n};\n\nconst sttJsonAdapter = (transcriptData, sttJsonType) => {\n  let blocks;\n  switch (sttJsonType) {\n  case 'bbckaldi':\n    blocks = bbcKaldiToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'autoedit2':\n    blocks = autoEdit2ToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'speechmatics':\n    blocks = speechmaticsToDraft(transcriptData);\n\n    return { blocks, entityMap: createEntityMap(blocks) };\n  case 'draftjs':\n    return transcriptData; // (typeof transcriptData === 'string')? JSON.parse(transcriptData): transcriptData;\n  default:\n    // code block\n    console.error('not recognised the stt enginge');\n  }\n};\n\nexport default sttJsonAdapter;\n","export default (blockData) => {\n  const lines = blockData.blocks.map(x => x.text);\n\n  return lines.join('\\n\\n');\n};\n","import draftToTxt from './txt/index';\n/**\n * Adapters for Draft.js conversion\n * @param {json} blockData - Draft.js blocks\n * @param {string} exportFormat - the type of file supported by the available adapters\n */\n\nconst exportAdapter = (blockData, exportFormat) => {\n  switch (exportFormat) {\n  case 'draftjs':\n    return { data: JSON.stringify(blockData, null, 2), ext: 'json' };\n  case 'txt':\n    return { data: draftToTxt(blockData), ext: 'txt' };\n  default:\n    // code block\n    console.error('Did not recognise the export format');\n  }\n};\n\nexport default exportAdapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass VideoPlayer extends React.Component {\n  render() {\n    return (\n      <video\n        id=\"video\"\n        playsInline\n        src={ this.props.mediaUrl }\n        onTimeUpdate={ this.props.onTimeUpdate }\n        type=\"video/mp4\"\n        data-testid=\"media-player-id\"\n        onClick={ this.props.onClick }\n        onLoadedData={ this.props.onLoadedDataGetDuration }\n        ref={ this.props.videoRef }\n      />\n    );\n  }\n}\n\nVideoPlayer.propTypes = {\n  mediaUrl: PropTypes.string,\n  onTimeUpdate: PropTypes.func,\n  onClick: PropTypes.func,\n  videoRef: PropTypes.object,\n  onLoadedDataGetDuration: PropTypes.func\n};\n\nexport default VideoPlayer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './VolumeControl.module.css';\nclass VolumeControl extends React.Component {\n\n  render() {\n    return (\n      <div className={ styles.switchContainer }>\n        <label className={ styles.switch }>\n          <input type=\"checkbox\"\n            defaultChecked=\"true\"\n            onChange={ this.props.handleMuteVolume }\n          />\n          <span className={ styles.slider }></span>\n        </label>\n        <label className={ styles.label }>Volume</label>\n      </div>\n    );\n  }\n}\n\nVolumeControl.propTypes = {\n  handleMuteVolume: PropTypes.func\n};\n\nexport default VolumeControl;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './Select.module.css';\n\nclass Select extends React.Component {\n\n  render() {\n    const options = this.props.options.map((option, index) => {\n      // eslint-disable-next-line react/no-array-index-key\n      return <option key={ index } value={ option.value }>{option.label}</option>;\n    });\n\n    return (\n      <select className={ style.selectPlayerControl } name={ this.props.name } value={ this.props.currentValue } onChange={ this.props.handleChange }>\n        {options}\n      </select>\n    );\n  }\n}\n\nSelect.propTypes = {\n  options: PropTypes.array,\n  name: PropTypes.string,\n  currentValue: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default Select;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport VolumeControl from './VolumeControl';\nimport Select from './Select';\n\nimport style from './PlayerControls.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  faSave,\n  faTv,\n  faPlay,\n  faPause,\n  faBackward,\n  faForward,\n  faUndo\n} from '@fortawesome/free-solid-svg-icons';\n\nclass PlayerControls extends React.Component {\n  // to handle backward and forward mouse pressed on btn\n  // set a 300 ms  interval to repeat the\n  // backward or forward function\n  // on mouseUp the interval is cleared\n  setIntervalHelperBackward = () => {\n    this.props.skipBackward();\n    this.interval = setInterval(() => {\n      this.props.skipBackward();\n    }, 300);\n  }\n\n  setIntervalHelperForward = () => {\n    this.props.skipForward();\n    this.interval = setInterval(() => {\n      this.props.skipForward();\n    }, 300);\n  }\n\n  clearIntervalHelper = () => {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div className={ style.playerControls }>\n        <button\n          title=\"Rollback\"\n          className={ style.playerButton }\n          onClick={ this.props.rollback }>\n          <FontAwesomeIcon icon={ faUndo } />\n        </button>\n\n        <button\n          title=\"Rewind\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperBackward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faBackward } />\n\n        </button>\n\n        <button\n          title=\"Play\"\n          className={ style.playerButton }\n          onClick={ this.props.playMedia }>\n          {this.props.isPlaying ? <FontAwesomeIcon icon={ faPause } /> : <FontAwesomeIcon icon={ faPlay } />}\n        </button>\n\n        <button\n          title=\"Forward\"\n          className={ style.playerButton }\n          onMouseDown={ this.setIntervalHelperForward }\n          onMouseUp={ this.clearIntervalHelper }>\n          <FontAwesomeIcon icon={ faForward } />\n        </button>\n\n        <span className={ style.playBackRate }>\n          <Select\n            title=\"Playback rate\"\n            options={ this.props.playbackRateOptions }\n            currentValue={ this.props.playbackRate.toString() }\n            name={ 'playbackRate' }\n            handleChange={ this.props.setPlayBackRate } />\n        </span>\n\n        <div className={ style.timeBox }>\n          <span title=\"Current time\" className={ style.currentTime }\n            onClick={ this.props.promptSetCurrentTime }\n          >{ this.props.currentTime }</span>\n          <span className={ style.separator }>|</span>\n          <span title=\"Clip duration\" className={ style.duration }>{this.props.duration}</span>\n        </div>\n\n        <button\n          title=\"Save\"\n          className={ style.playerButton }\n          onClick={ this.props.handleSaveTranscript }>\n          <FontAwesomeIcon icon={ faSave } />\n        </button>\n\n        <button\n          title=\"Picture-in-picture\"\n          className={ style.playerButton }\n          onClick={ this.props.pictureInPicture }\n        >\n          <FontAwesomeIcon icon={ faTv } />\n        </button>\n\n        <VolumeControl\n          handleMuteVolume={ this.props.handleMuteVolume }\n        />\n      </div>\n    );\n  }\n}\n\nPlayerControls.propTypes = {\n  playMedia: PropTypes.func,\n  currentTime: PropTypes.string,\n  timecodeOffset: PropTypes.string,\n  promptSetCurrentTime: PropTypes.func,\n  rollback: PropTypes.func,\n  handleMuteVolume: PropTypes.func,\n  duration: PropTypes.string,\n  isPlaying: PropTypes.bool,\n  skipBackward: PropTypes.func,\n  skipForward: PropTypes.func,\n  playbackRate: PropTypes.number,\n  playbackRateOptions: PropTypes.array,\n  setPlayBackRate: PropTypes.func,\n  pictureInPicture: PropTypes.func\n};\n\nexport default PlayerControls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './ProgressBar.module.css';\n\nclass ProgressBar extends React.Component {\n\n  render() {\n    return (\n      <div className={ style.progress }>\n        <input\n          type='range'\n          className={ style.bar }\n          onChange={ this.props.buttonClick }\n          value={ this.props.value }\n          min='0'\n          max={ this.props.max.toString() }\n        />\n      </div>\n    );\n  }\n}\n\nProgressBar.propTypes = {\n  value: PropTypes.number,\n  max: PropTypes.string,\n  buttonClick: PropTypes.func\n};\n\nexport default ProgressBar;\n","function returnHotKeys(self) {\n  return {\n    'alt+k': {\n      priority: 1,\n      handler: () => {\n        self.togglePlayMedia();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+k',\n          name: 'togglePlayMedia',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + k',\n      label: 'Play Media',\n    },\n    'alt+l': {\n      priority: 1,\n      handler: () => {\n        self.skipForward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+l',\n          name: 'skipForward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + l',\n      label: 'Fast Forward',\n    },\n    'alt+j': {\n      priority: 1,\n      handler: () => {\n        self.skipBackward();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+j',\n          name: 'skipBackward',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + j',\n      label: 'Rewind',\n    },\n    'alt+-': {\n      priority: 1,\n      handler: () => {\n        self.decreasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+-',\n          name: 'decreasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + -',\n      label: 'Decrease Playback Speed',\n    },\n    // https://github.com/ccampbell/mousetrap/issues/266\n    'alt+=': {\n      priority: 1,\n      handler: () => {\n        self.increasePlaybackRate();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+plus',\n          name: 'increasePlaybackRate',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + +',\n      label: 'Increase Playback Speed',\n    },\n    'alt+r': {\n      priority: 1,\n      handler: () => {\n        self.rollBack();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+r',\n          name: 'rollBack',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + r',\n      label: 'Roll Back',\n    },\n    'alt+t': {\n      priority: 1,\n      handler: () => {\n        self.promptSetCurrentTime();\n\n        self.props.handleAnalyticsEvents({\n          category: 'defaultHotKeys',\n          action: 'alt+t',\n          name: 'promptSetCurrentTime',\n          value: 'na'\n        });\n\n      },\n      displayKeyCombination: 'alt + t',\n      label: 'set current time',\n    }\n  };\n}\nexport default returnHotKeys;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { hotkeys } from 'react-keyboard-shortcuts';\n\nimport VideoPlayer from './VideoPlayer';\nimport PlayerControls from './PlayerControls';\nimport ProgressBar from './ProgressBar';\n\nimport returnHotKeys from './defaultHotKeys';\nimport styles from './index.module.css';\n\nimport { secondsToTimecode, timecodeToSeconds } from '../../Util/timecode-converter/index';\nimport { timingSafeEqual } from 'crypto';\n\nconst PLAYBACK_RATES = [\n  { value: 0.2, label: '0.2' },\n  { value: 0.25, label: '0.25' },\n  { value: 0.5, label: '0.5' },\n  { value: 0.75, label: '0.75' },\n  { value: 1, label: '1' },\n  { value: 1.25, label: '1.25' },\n  { value: 1.5, label: '1.5' },\n  { value: 1.75, label: '1.75' },\n  { value: 2, label: '2' },\n  { value: 2.5, label: '2.5' },\n  { value: 3, label: '3' },\n  { value: 3.5, label: '3.5' }\n];\n\nclass MediaPlayer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n\n    this.state = {\n      playbackRate: 1,\n      rollBackValueInSeconds: this.props.rollBackValueInSeconds,\n      timecodeOffset: this.props.timecodeOffset,\n      hotKeys: returnHotKeys(this),\n      isPlaying: false,\n      playbackRateOptions: PLAYBACK_RATES,\n      mediaDuration: '00:00:00:00'\n    };\n  }\n  /*eslint-disable camelcase */\n  hot_keys = returnHotKeys(this);\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.timecodeOffset !== null) {\n      let newCurrentTimeInSeconds = nextProps.timecodeOffset ;\n      if (typeof newCurrentTimeInSeconds ==='string'\n        && newCurrentTimeInSeconds.includes(':')\n        && !newCurrentTimeInSeconds.includes('NaN')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(nextProps.timecodeOffset );\n      }\n\n      return {\n        timecodeOffset: newCurrentTimeInSeconds,\n        rollBackValueInSeconds: nextProps.rollBackValueInSeconds\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    this.props.hookSeek(this.setCurrentTime);\n    this.props.hookPlayMedia(this.togglePlayMedia);\n    this.props.hookIsPlaying(this.isPlaying);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.state.isPlaying) {\n      this.playMedia()\n    }\n  }\n\n  setCurrentTime = (newCurrentTime) => {\n    if (newCurrentTime !== '' && newCurrentTime !== null) {\n    // hh:mm:ss:ff - mm:ss - m:ss - ss - seconds number or string and hh:mm:ss\n      const newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTime);\n      if (this.videoRef.current !== null) {\n        const videoRef = this.videoRef.current;\n\n        if (videoRef.readyState === 4) {\n          videoRef.currentTime = newCurrentTimeInSeconds;\n          this.playMedia();\n        }\n      }\n    }\n  }\n\n  /**\n   * Prompts for a time stamp or time code to set media current time\n   * Also handles use can when the user has set a timecode offset via settings\n   * and the prompt is expected to be relative to that offset\n   */\n  promptSetCurrentTime = () => {\n    let userTimecodeValue = prompt('Jump to time - hh:mm:ss:ff hh:mm:ss mm:ss m:ss m.ss seconds');\n    // TODO: add some validation, eg if user types just a string it won't crash.\n    // needs function to check it's either timecode on the formats specified above or a number\n    // this could be part of the timecode module(?)\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'promptSetCurrentTime',\n        name: 'userTimecodeValue',\n        value: userTimecodeValue\n      });\n    }\n    // user clicks cancel to prompt, prompt returns null\n    if (userTimecodeValue !== null) {\n      if (userTimecodeValue.includes(':')) {\n        userTimecodeValue = timecodeToSeconds(userTimecodeValue);\n      }\n      // remove timecode offset if preset\n      if (this.state.timecodeOffset !== 0) {\n        userTimecodeValue -= this.state.timecodeOffset;\n      }\n\n      this.setCurrentTime(userTimecodeValue);\n    }\n  }\n\n  setTimeCodeOffset = (newTimeCodeOffSet) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'setTimeCodeOffset',\n        name: 'timecodeOffsetValue',\n        value: newTimeCodeOffSet\n      });\n    }\n\n    if (newTimeCodeOffSet !== '' && newTimeCodeOffSet !== null) {\n      // use similar helper function from above to convert\n      let newCurrentTimeInSeconds = newTimeCodeOffSet;\n      if (newTimeCodeOffSet.includes(':')) {\n        newCurrentTimeInSeconds = timecodeToSeconds(newTimeCodeOffSet);\n        this.setState({ timecodeOffset: newCurrentTimeInSeconds });\n      }\n    }\n  }\n\n  rollBack = () => {\n    if (this.videoRef.current !== null) {\n\n      if (this.props.handleAnalyticsEvents !== undefined) {\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'rollBack',\n          name: 'rollBackValue',\n          value: this.state.rollBackValueInSeconds\n        });\n      }\n      // get video duration\n      const videoElem = this.videoRef.current;\n      const tmpDesiredCurrentTime = videoElem.currentTime - this.state.rollBackValueInSeconds;\n      // > 0 < duration of video\n      this.setCurrentTime(tmpDesiredCurrentTime);\n\n    }\n  }\n\n  handleTimeUpdate = (e) => {\n    this.props.hookOnTimeUpdate(e.target.currentTime);\n  }\n\n  handlePlayBackRateChange = (e) => {\n    this.setPlayBackRate(parseFloat(e.target.value));\n  }\n\n  /**\n   * @param {float} input - playback rate value as a float\n   */\n  setPlayBackRate = (input) => {\n    if (this.videoRef.current !== null) {\n      if (input >= 0.2 && input <= 3.5) {\n        this.setState({\n          playbackRate: input,\n        }, () => {\n          this.videoRef.current.playbackRate = input;\n\n          if (this.props.handleAnalyticsEvents !== undefined) {\n            this.props.handleAnalyticsEvents({\n              category: 'MediaPlayer',\n              action: 'setPlayBackRate',\n              name: 'playbackRateNewValue',\n              value: input\n            });\n          }\n\n        });\n      }\n    }\n  }\n\n  decreasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ].reverse();\n    const slower = speeds.find((option) => {\n      return option.value < this.state.playbackRate;\n    });\n    const newSpeed = slower ? slower.value : 0.2;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  increasePlaybackRate = () => {\n    const speeds = [ ...PLAYBACK_RATES ];\n    const faster = speeds.find((option) => {\n      return option.value > this.state.playbackRate;\n    });\n    const newSpeed = faster ? faster.value : 3.5;\n\n    this.setPlayBackRate(newSpeed);\n  }\n\n  handleChangeReplayRollbackValue = (e) => {\n    if (this.videoRef.current !== null) {\n      this.setState({\n        rollBackValueInSeconds: e.target.value,\n      });\n    }\n  }\n\n  handleMuteVolume = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.volume > 0) {\n        this.videoRef.current.volume = 0;\n      } else {\n        this.videoRef.current.volume = 1;\n      }\n    }\n  }\n\n  // TEMP: keeping this in for now. Might be replaced by state\n  // The pauseWhileTyping logic (in TimedTextEditor) currently uses this\n  isPlaying = () => {\n    if (this.videoRef.current !== null) {\n      if (this.videoRef.current.paused) return false;\n\n      return true;\n    }\n  }\n\n  pauseMedia = () => {\n    this.setState({ isPlaying: false }, () => this.videoRef.current.pause());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'pauseMedia',\n        name: 'pauseMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n  }\n\n  playMedia = () => {\n    this.setState({ isPlaying: true }, () => this.videoRef.current.play());\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'playMedia',\n        name: 'playMedia',\n        value: secondsToTimecode(this.videoRef.current.currentTime)\n      });\n    }\n\n  }\n\n  // Sets isPlaying state and toggles modes on the video player\n  // TODO: modularise these / enable specific play / pause action\n  togglePlayMedia = (e, bool) => {\n    // if no bool specified, then really just toggle\n    console.log(\"in media stopping@\")\n    if (bool === undefined) {\n      bool = !this.state.isPlaying\n    }\n    if (this.videoRef.current !== null) {\n      if (this.state.isPlaying && !bool) {\n        this.pauseMedia();\n      }\n      else if (!this.state.isPlaying && bool) {\n        this.playMedia();\n      }\n      // in other situations, do nothing\n    }\n  }\n\n  skipForward = () => {\n    if (this.videoRef.current !== null) {\n      // TODO track this?\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime + 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  skipBackward = () => {\n    // TODO track this?\n    if (this.videoRef.current !== null) {\n      const currentTime = this.videoRef.current.currentTime;\n      const newCurrentTimeIncreased = currentTime - 10;\n      const newCurrentTime = Number((newCurrentTimeIncreased).toFixed(1));\n      this.setCurrentTime(newCurrentTime);\n    }\n  }\n\n  handleProgressBarClick = (e) => {\n    const time = e.target.value;\n    this.setCurrentTime(time);\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'handleProgressBarClick',\n        name: 'roundNewCurrentTime',\n        value: time\n      });\n    }\n  }\n\n  getMediaCurrentTime = () => {\n    if (this.videoRef.current !== null) {\n      return secondsToTimecode(this.videoRef.current.currentTime + this.state.timecodeOffset);\n    }\n\n    return '00:00:00:00';\n  }\n  handleMediaDurationChange =(e) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'mediaDuration',\n        name: secondsToTimecode(e.target.duration),\n        value: e.target.duration\n      });\n    }\n  }\n\n  onLoadedDataGetDuration = (e) => {\n    const currentDuration = e.target.duration;\n    const currentDurationWithOffset = currentDuration+ this.state.timecodeOffset;\n    const durationInSeconds = secondsToTimecode( currentDuration+ currentDurationWithOffset);\n\n    this.setState({\n      mediaDuration: durationInSeconds\n    });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'MediaPlayer',\n        action: 'onLoadedDataGetDuration',\n        name: 'durationInSeconds-WithoutOffset',\n        value: secondsToTimecode( currentDuration)\n      });\n    }\n\n  }\n\n  handlePictureInPicture = () => {\n    if (this.videoRef.current !== null) {\n      if (document.pictureInPictureElement !== undefined) {\n      // from https://developers.google.com/web/updates/2017/09/picture-in-picture\n        if (!document.pictureInPictureElement) {\n\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-on'\n          });\n\n          this.videoRef.current.requestPictureInPicture()\n            .catch(error => {\n              // Video failed to enter Picture-in-Picture mode.\n              console.error('Video failed to enter Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-on-error'\n              });\n\n            });\n\n        } else {\n          this.props.handleAnalyticsEvents({\n            category: 'MediaPlayer',\n            action: 'handlePictureInPicture',\n            name: 'turning-picture-in-picture-off'\n          });\n          document.exitPictureInPicture()\n            .catch(error => {\n              // Video failed to leave Picture-in-Picture mode.\n              console.error('Video failed to leave Picture-in-Picture mode', error);\n\n              this.props.handleAnalyticsEvents({\n                category: 'MediaPlayer',\n                action: 'handlePictureInPicture',\n                name: 'turning-picture-in-picture-off-error'\n              });\n            });\n        }\n      } else {\n        alert('Picture in Picture not supported in this browser, try chrome.');\n\n        this.props.handleAnalyticsEvents({\n          category: 'MediaPlayer',\n          action: 'handlePictureInPicture',\n          name: 'picture-in-picture-not-supported'\n        });\n\n      }\n    }\n  }\n\n  render() {\n    const player = <VideoPlayer\n      mediaUrl={ this.props.mediaUrl }\n      onTimeUpdate= { this.handleTimeUpdate }\n      onClick= { this.togglePlayMedia.bind(this) }\n      videoRef={ this.videoRef }\n      onLoadedDataGetDuration={ this.onLoadedDataGetDuration }\n    />;\n\n    const playerControlsSection = (\n      <div className={ styles.controlsSection }>\n        <div className={ styles.titleBox }>\n          <h1 className={ styles.title }>{ this.props.fileName? this.props.fileName : this.props.mediaUrl }</h1>\n        </div>\n        <PlayerControls\n          playMedia={ this.togglePlayMedia.bind(this) }\n          isPlaying={ this.state.isPlaying }\n          playbackRate={ this.state.playbackRate }\n          skipBackward={ this.skipBackward.bind(this) }\n          skipForward={ this.skipForward.bind(this) }\n          rollback={ this.rollBack }\n          currentTime={ this.getMediaCurrentTime() }\n          duration={ this.state.mediaDuration }\n          onSetCurrentTime={ '' }\n          onSetTimecodeOffset={ '' }\n          promptSetCurrentTime={ this.promptSetCurrentTime.bind(this) }\n          setTimeCodeOffset={ this.setTimeCodeOffset.bind(this) }\n          timecodeOffset={ secondsToTimecode(this.state.timecodeOffset) }\n          handleMuteVolume={ this.handleMuteVolume.bind(this) }\n          setPlayBackRate={ this.handlePlayBackRateChange.bind(this) }\n          playbackRateOptions={ this.state.playbackRateOptions }\n          pictureInPicture={ this.handlePictureInPicture }\n          handleSaveTranscript={ () => {this.props.handleSaveTranscript();} }\n        />\n      </div>\n    );\n\n    const progressBar = <ProgressBar\n      max={ this.videoRef.current !== null ? parseInt(this.videoRef.current.duration).toString() : '100' }\n      value={ this.videoRef.current !== null ? parseInt(this.videoRef.current.currentTime) : 0 }\n      buttonClick={ this.handleProgressBarClick.bind(this) }\n    />;\n\n    return (\n      <section className={ styles.topSection }>\n        <div className={ styles.playerSection }>\n          { this.props.mediaUrl !== null ? player : null }\n          { this.props.mediaUrl !== null ? playerControlsSection : null }\n        </div>\n        { this.props.mediaUrl !== null ? progressBar : null }\n      </section>\n    );\n  }\n}\n\nMediaPlayer.propTypes = {\n  fileName: PropTypes.string,\n  hookSeek: PropTypes.func,\n  hookPlayMedia: PropTypes.func,\n  hookIsPlaying: PropTypes.func,\n  mediaUrl: PropTypes.string,\n  hookOnTimeUpdate: PropTypes.func,\n  rollBackValueInSeconds: PropTypes.number,\n  timecodeOffset: PropTypes.number\n};\n\nexport default hotkeys(MediaPlayer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nclass Toggle extends React.Component {\n  render() {\n    return (\n      <div className={ style.switchContainer }>\n        <label className={ style.switch }>\n          <input type='checkbox'\n            defaultChecked={ this.props.defaultValue }\n            onChange={ this.props.handleToggle }\n          />\n          <span className={ style.slider }></span>\n        </label>\n      </div>\n    );\n  }\n}\n\nToggle.propTypes = {\n  handleToggle: PropTypes.func,\n  label: PropTypes.string,\n  defaultValue: PropTypes.bool\n};\n\nexport default Toggle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport style from './index.module.css';\n\nimport { timecodeToSeconds, secondsToTimecode } from '../../../Util/timecode-converter/index';\n\nclass TimecodeOffset extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timecodeOffset: secondsToTimecode(this.props.timecodeOffset)\n    };\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      timecodeOffset: e.target.value\n    });\n  }\n\n  resetTimecodeOffset = () => {\n    const resetTimecodeOffsetValue = 0;\n\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'resetTimecodeOffset',\n      name: 'resetTimecodeOffset',\n      value: 0\n    });\n\n    this.setState({\n      timecodeOffset: secondsToTimecode(resetTimecodeOffsetValue)\n    }, () => {\n      this.props.handleSetTimecodeOffset(resetTimecodeOffsetValue);\n    });\n  }\n\n  setTimecodeOffset = () => {\n    this.props.handleAnalyticsEvents({\n      category: 'TimecodeOffset',\n      action: 'setTimecodeOffset',\n      name: 'setTimecodeOffset',\n      value: this.state.timecodeOffset\n    });\n\n    let newCurrentTimeInSeconds = this.state.timecodeOffset;\n    if (typeof newCurrentTimeInSeconds ==='string'\n    && newCurrentTimeInSeconds.includes(':')\n    && !newCurrentTimeInSeconds.includes('NaN')) {\n      newCurrentTimeInSeconds = timecodeToSeconds(newCurrentTimeInSeconds );\n    }\n    this.props.handleSetTimecodeOffset(newCurrentTimeInSeconds);\n  }\n\n  render() {\n    return (\n      <div className={ style.offsetContainer }>\n        <input\n          className={ style.inputBox }\n          type=\"text\"\n          value={ this.state.timecodeOffset }\n          onChange={ this.handleChange }\n          name=\"lname\"/>\n        <span className={ style.button } onClick={ this.resetTimecodeOffset }><u>Reset</u></span>\n        <span> | </span>\n        <span className={ style.button } onClick={ this.setTimecodeOffset }><u>Save</u></span>\n      </div>\n    );\n  }\n}\n\nTimecodeOffset.propTypes = {\n  handleSetTimecodeOffset: PropTypes.func,\n  onChange: PropTypes.func,\n  timecodeOffset: PropTypes.number\n};\n\nexport default TimecodeOffset;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport Toggle from './Toggle/';\n\nimport style from './index.module.css';\n\nimport TimecodeOffset from './TimecodeOffset';\n\nclass Settings extends React.Component {\n  render() {\n    return (\n      <div className={ style.settings }>\n        <h2 className={ style.header }>Settings Panel</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleSettingsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n\n        <div className={ style.controlsContainer }>\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Pause While Typing</div>\n            <Toggle\n              defaultValue={ this.props.defaultValuePauseWhileTyping }\n              label={ 'Pause while typing' }\n              handleToggle={ this.props.handlePauseWhileTyping }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Scroll Sync</div>\n            <Toggle\n              defaultValue={ this.props.defaultValueScrollSync }\n              label={ 'ScrollSync' }\n              handleToggle={ this.props.handleIsScrollIntoViewChange }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Rollback Interval (sec)</div>\n            <input\n              className={ style.rollbackValue }\n              type=\"text\"\n              value={ this.props.defaultRollBackValueInSeconds }\n              onChange={ this.props.handleRollBackValueInSeconds }\n              name=\"lname\"/>\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Timecodes</div>\n            <Toggle\n              defaultValue={ this.props.showTimecodes }\n              label={ 'Hide Timecodes' }\n              handleToggle={ this.props.handleShowTimecodes }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.label }>Show Speaker Labels</div>\n            <Toggle\n              defaultValue={ this.props.showSpeakers }\n              label={ 'Hide Speaker Labels' }\n              handleToggle={ this.props.handleShowSpeakers }\n            />\n          </section>\n\n          <section className={ style.settingElement }>\n            <div className={ style.timecodeLabel }>Timecode Offset ℹ</div>\n            <TimecodeOffset\n              timecodeOffset={ this.props.timecodeOffset }\n              handleSetTimecodeOffset={ this.props.handleSetTimecodeOffset }\n              handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n            />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  showTimecodes: PropTypes.bool,\n  showSpeakers: PropTypes.bool,\n  timecodeOffset: PropTypes.number,\n  handleShowTimecodes: PropTypes.func,\n  handleShowSpeakers: PropTypes.func,\n  handleSetTimecodeOffset: PropTypes.func,\n  handleSettingsToggle: PropTypes.func,\n  handlePauseWhileTyping: PropTypes.func,\n  handleIsScrollIntoViewChange: PropTypes.func,\n  handleRollBackValueInSeconds: PropTypes.func,\n  defaultValueScrollSync: PropTypes.bool,\n  defaultValuePauseWhileTyping: PropTypes.bool,\n  defaultRollBackValueInSeconds: PropTypes.number\n};\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nimport returnHotKeys from '../MediaPlayer/defaultHotKeys';\n\nimport style from './Shortcuts.module.css';\n\nclass Shortcuts extends React.Component {\n  render() {\n    const hotKeys = returnHotKeys(this);\n    const hotKeysCheatsheet = Object.keys(hotKeys).map((key, i) => {\n    \tconst shortcut = hotKeys[key];\n\n      return <li key={ i } className={ style.listItem }>\n        <div className={ style.shortcut }>{shortcut.displayKeyCombination}</div>\n        <div className={ style.shortcutLabel }>{shortcut.label}</div>\n      </li>;\n    });\n\n    return (\n      <div className={ style.shortcuts }>\n        <h2 className={ style.header }>Shortcuts</h2>\n        <div className={ style.closeButton } onClick={ this.props.handleShortcutsToggle }>\n          <FontAwesomeIcon icon={ faWindowClose } />\n        </div>\n        <ul className={ style.list }>{ hotKeysCheatsheet }</ul>\n      </div>\n    );\n  }\n}\n\nShortcuts.propTypes = {\n  handleShortcutsToggle: PropTypes.func\n};\n\nexport default Shortcuts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog, faKeyboard } from '@fortawesome/free-solid-svg-icons';\n\nimport TimedTextEditor from './TimedTextEditor';\nimport MediaPlayer from './MediaPlayer';\nimport Settings from './Settings';\nimport Shortcuts from './Settings/Shortcuts';\nimport { secondsToTimecode } from '../Util/timecode-converter/index';\n\nimport style from './index.module.css';\n\nclass TranscriptEditor extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTime: 0,\n      lastLocalSavedTime: '',\n      transcriptData: null,\n      isScrollIntoViewOn: false,\n      showSettings: false,\n      showShortcuts: false,\n      isPauseWhileTypingOn: true,\n      rollBackValueInSeconds: 15,\n      timecodeOffset: 0,\n      showTimecodes: true,\n      showSpeakers: true\n    };\n    this.timedTextEditorRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.transcriptData !== null) {\n      return {\n        transcriptData: nextProps.transcriptData\n      };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Transcript and media passed to component at same time\n    if (\n      (prevState.transcriptData !== this.state.transcriptData)\n        && (prevProps.mediaUrl !== this.props.mediaUrl )\n    ) {\n      console.info('Transcript and media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Transcript first and then media passed to component\n    else if (\n      (prevState.transcriptData === this.state.transcriptData)\n      && (prevProps.mediaUrl !== this.props.mediaUrl)\n    ) {\n      console.info('Transcript first and then media');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n    // Media first and then transcript passed to component\n    else if (\n      (prevState.transcriptData !== this.state.transcriptData)\n      && (prevProps.mediaUrl === this.props.mediaUrl)\n    ) {\n      console.info('Media first and then transcript');\n      this.ifPresentRetrieveTranscriptFromLocalStorage();\n    }\n  }\n\n  ifPresentRetrieveTranscriptFromLocalStorage = () => {\n    // if (this.timedTextEditorRef.current!== undefined) {\n    if (this.timedTextEditorRef.current) {\n      if (this.timedTextEditorRef.current.isPresentInLocalStorage(this.props.mediaUrl)) {\n        console.info('was already present in local storage');\n        this.timedTextEditorRef.current.loadLocalSavedData(this.props.mediaUrl);\n      } else {\n        console.info('not present in local storage');\n      }\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  // when double click a single word\n  handleWordClick = (startTime) => {\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'doubleClickOnWord',\n        name: 'startTime',\n        value: secondsToTimecode(startTime)\n      });\n    }\n\n    this.jumpToHere(startTime)\n  }\n\n  handleJumpToHereClick = (startTime) => {\n    this.jumpToHere(startTime)\n  }\n\n  jumpToHere = (startTime) => {\n    // TODO add analytics stuff...except I don't care right now haha\n\n    // happens if the data gets messed up and they click on a paragraph that has that faulty data\n    // TODO allow editing timing so this can get fixed\n    if ([ NaN, undefined ].includes(startTime)) {\n      console.error(\"startTime cannot be set to be NaN or undefined\");\n\n      return\n    }\n    console.log(startTime);\n    this.setCurrentTime(startTime);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  handleTimeUpdate = (currentTime) => {\n    this.setState({\n      currentTime,\n    });\n  }\n\n  handlePlayMedia = (bool) => {\n    this.playMedia(null, bool);\n  }\n\n  handleIsPlaying = () => {\n    return this.isPlaying();\n  }\n\n  handleIsScrollIntoViewChange = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isScrollIntoViewOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleIsScrollIntoViewChange',\n        name: 'isScrollIntoViewOn',\n        value: isChecked\n      });\n    }\n\n  }\n  handlePauseWhileTyping = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ isPauseWhileTypingOn: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handlePauseWhileTyping',\n        name: 'isPauseWhileTypingOn',\n        value: isChecked\n      });\n    }\n  }\n\n  handleRollBackValueInSeconds = (e) => {\n    const rollBackValue = e.target.value;\n    this.setState({ rollBackValueInSeconds: rollBackValue });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleRollBackValueInSeconds',\n        name: 'rollBackValueInSeconds',\n        value: rollBackValue\n      });\n    }\n  }\n\n  handleSetTimecodeOffset = (timecodeOffset) => {\n\n    this.setState({ timecodeOffset: timecodeOffset },\n      () => {\n        // eslint-disable-next-line react/no-string-refs\n        this.timedTextEditorRef.current.forceUpdate();\n      });\n  }\n\n  handleShowTimecodes = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showTimecodes: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowTimecodes',\n        name: 'showTimecodes',\n        value: isChecked\n      });\n    }\n  }\n\n  handleShowSpeakers = (e) => {\n    const isChecked = e.target.checked;\n    this.setState({ showSpeakers: isChecked });\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShowSpeakers',\n        name: 'showSpeakers',\n        value:  isChecked\n      });\n    }\n  }\n\n  handleSettingsToggle = () => {\n    this.setState(prevState => ({\n      showSettings: !prevState.showSettings\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleSettingsToggle',\n        name: 'showSettings',\n        value:  !this.state.showSettings\n      });\n    }\n  }\n\n  handleShortcutsToggle = () => {\n    this.setState(prevState => ({\n      showShortcuts: !prevState.showShortcuts\n    }));\n\n    if (this.props.handleAnalyticsEvents !== undefined) {\n      this.props.handleAnalyticsEvents({\n        category: 'TranscriptEditor',\n        action: 'handleShortcutsToggle',\n        name: 'showShortcuts',\n        value:  !this.state.showShortcuts\n      });\n    }\n  }\n\n  getEditorContent = (exportFormat) => {\n    return this.timedTextEditorRef.current.getEditorContent(exportFormat);\n  }\n\n  handleSaveTranscript = () => {\n    return this.timedTextEditorRef.current.localSave(this.props.mediaUrl);\n  }\n\n  render() {\n    const mediaPlayer = <MediaPlayer\n      fileName={ this.props.fileName }\n      hookSeek={ foo => this.setCurrentTime = foo }\n      hookPlayMedia={ foo => this.playMedia = foo }\n      hookIsPlaying={ foo => this.isPlaying = foo }\n      rollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      hookOnTimeUpdate={ this.handleTimeUpdate }\n      mediaUrl={ this.props.mediaUrl }\n      // ref={ 'MediaPlayer' }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n      handleSaveTranscript={ this.handleSaveTranscript }\n      playingWhileListening = { this.props.playingWhileListening }\n    />;\n\n    const settings = <Settings\n      handleSettingsToggle={ this.handleSettingsToggle }\n      defaultValuePauseWhileTyping={ this.state.isPauseWhileTypingOn }\n      defaultValueScrollSync={ this.state.isScrollIntoViewOn }\n      defaultRollBackValueInSeconds={ this.state.rollBackValueInSeconds }\n      timecodeOffset={ this.state.timecodeOffset }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      handlePauseWhileTyping={ this.handlePauseWhileTyping }\n      handleIsScrollIntoViewChange={ this.handleIsScrollIntoViewChange }\n      handleRollBackValueInSeconds={ this.handleRollBackValueInSeconds }\n      handleSetTimecodeOffset={ this.handleSetTimecodeOffset }\n      handleShowTimecodes={ this.handleShowTimecodes }\n      handleShowSpeakers={ this.handleShowSpeakers }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    const shortcuts = <Shortcuts\n      handleShortcutsToggle={ this.handleShortcutsToggle }\n    />;\n\n    const timedTextEditor = <TimedTextEditor\n      fileName={ this.props.fileName }\n      transcriptData={ this.state.transcriptData }\n      timecodeOffset={ this.state.timecodeOffset }\n      onWordClick={ this.handleWordClick }\n      onJumpToHereClick={ this.handleJumpToHereClick }\n      playMedia={ this.handlePlayMedia }\n      isPlaying={ this.handleIsPlaying }\n      currentTime={ this.state.currentTime }\n      isEditable={ this.props.isEditable }\n      sttJsonType={ this.props.sttJsonType }\n      mediaUrl={ this.props.mediaUrl }\n      isScrollIntoViewOn={ this.state.isScrollIntoViewOn }\n      isPauseWhileTypingOn={ this.state.isPauseWhileTypingOn }\n      showTimecodes={ this.state.showTimecodes }\n      showSpeakers={ this.state.showSpeakers }\n      ref={ this.timedTextEditorRef }\n      handleAnalyticsEvents={ this.props.handleAnalyticsEvents }\n    />;\n\n    return (\n      <div className={ style.container }>\n        <header className={ style.header }>\n          { this.state.showSettings ? settings : null }\n          { this.state.showShortcuts ? shortcuts : null }\n        </header>\n\n        <aside className={ style.aside }>{ this.props.mediaUrl ? mediaPlayer : null }</aside>\n\n        <div className={ style.settingsContainer }>\n          <button className={ style.settingsButton } onClick={ this.handleSettingsToggle }>\n            <FontAwesomeIcon icon={ faCog } />\n          </button>\n          <button className={ style.settingsButton } onClick={ this.handleShortcutsToggle }>\n            <FontAwesomeIcon icon={ faKeyboard } />\n          </button>\n        </div>\n\n        <main className={ style.main }>\n          {this.props.mediaUrl === null? null : timedTextEditor}\n        </main>\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  mediaUrl: PropTypes.string,\n  isEditable: PropTypes.bool,\n  sttJsonType: PropTypes.string,\n  handleAnalyticsEvents: PropTypes.func,\n  fileName: PropTypes.string\n};\n\nexport default TranscriptEditor;\n","import SpeechRecognition from './SpeechRecognition'\n\nexport default SpeechRecognition\n","import React, { Component } from 'react'\n\nexport default function SpeechRecognition(options) {\n  const SpeechRecognitionInner = function (WrappedComponent) {\n    const BrowserSpeechRecognition =\n      typeof window !== 'undefined' &&\n      (window.SpeechRecognition ||\n        window.webkitSpeechRecognition ||\n        window.mozSpeechRecognition ||\n        window.msSpeechRecognition ||\n        window.oSpeechRecognition)\n    const recognition = BrowserSpeechRecognition\n      ? new BrowserSpeechRecognition()\n      : null\n    const browserSupportsSpeechRecognition = recognition !== null\n    let listening\n    if (\n      !browserSupportsSpeechRecognition ||\n      (options && options.autoStart === false)\n    ) {\n      listening = false\n    } else {\n      recognition.start()\n      listening = true\n    }\n    let pauseAfterDisconnect = false\n    let interimTranscript = ''\n    let finalTranscript = ''\n\n    // TODO put this as the retval key using template found in src/sample-data/KateDarling_2018S-bbc-kaldi.json\n    const newTranscriptData = () => ({\n      status: true,\n      wonid: \"octo:2692ea33-d595-41d8-bfd5-aa7f2d2f89ee\", // don't know this one, probably will generate something\n      punct: \"\", // total transcript of all the words TODO currently not setting\n      words: [], // array of newWordData objects\n    })\n    \n\n    return class SpeechRecognitionContainer extends Component {\n      constructor(props) {\n        super(props)\n\n        this.state = {\n          interimTranscript,\n          finalTranscript,\n          transcriptData: {},\n          listening: false,\n          allResults: [],\n          speechTimerStartedAt: false, // ms since Jan 1 1970\n        }\n\n        // TODO do the binding thing so don't have to do the crazy arrow funcs here\n      }\n\n      componentWillMount() {\n        if (recognition) {\n          recognition.continuous = false // originally set to true, but this breaks up the words into smaller fragments much better\n          recognition.interimResults = true\n          recognition.onresult = this.updateTranscript.bind(this)\n          recognition.onend = this.onRecognitionDisconnect.bind(this)\n          // onspeechstart/end or onsoundstart/end might be useful\n          /*\n    recognition.onspeechend = () => {console.log(\"speech is now ending\")}\n    recognition.onspeechstart = () => {console.log(\"speech is now starting\")}\n    recognition.onsoundstart = () => {console.log(\"sound is now starting\")}\n    recognition.onsoundend = () => {console.log(\"sound is now ending\")}\n    recognition.nomatch = () => {console.log(\"no match!!!11\")}\n    recognition.onboundary = () => {console.log(\"boundary found!\")}\n    recognition.onresume = () => {console.log(\"resume found!\")}\n    recognition.onmark = () => {console.log(\"mark found!\")}\n    recognition.onpause = () => {console.log(\"pause found!\")}\n    */\n          this.setState({\n            listening,\n            transcriptData: newTranscriptData()\n          })\n        }\n      }\n\n      disconnect (disconnectType) {\n        if (recognition) {\n          switch (disconnectType) {\n            case 'ABORT':\n              pauseAfterDisconnect = true\n              recognition.abort()\n              break\n            case 'RESET':\n              pauseAfterDisconnect = false\n              recognition.abort()\n              break\n            case 'STOP':\n            default:\n              pauseAfterDisconnect = true\n              recognition.stop()\n          }\n        }\n      }\n\n      // minutes elapsed since started.\n      minElapsed = () => {\n        return (Date.now() - this.state.speechTimerStartedAt)/1000;\n      }\n\n      newWordData = (wordResults) => {\n        const words = wordResults.transcript;\n        // remove all punctuation and lowercase it\n        const allWordData = this.state.transcriptData.words;\n        const start = allWordData.length > 0 ? allWordData[allWordData.length - 1].end : 0;\n        const end = this.minElapsed();\n        const punct = words.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, '');\n\n        // format required for the bbc lib\n        return {\n          start, // time in minutes, using decimals not seconds, eg 13.02 (float)\n          confidence: wordResults.confidence, // %, out of 1, eg 0.68 (float)\n          end, // end time in min\n          word: words, // all words, not formatted (and lowercase), eg \"there\" (string)\n          punct, // word, as displayed, eg \"There\" (string)\n          index: allWordData.length,\n        }\n      }\n\n      onRecognitionDisconnect = () => {\n        listening = false\n        if (pauseAfterDisconnect) {\n          this.setState({ listening })\n        } else {\n          this.startListening()\n        }\n        pauseAfterDisconnect = false\n      }\n\n      // TODO might stop getting interim results and handling them if it hurts performance\n      updateTranscript = (event) => {\n        interimTranscript = ''\n        // looks like they iterate over same results every time, rather than gradually compiling as it goes. Could slow things down if transcript gets long TODO\n        let newState = {\n          // might not need\n          allResults: event.results\n        }\n\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          if (event.results[i].isFinal) {\n            let wordResults = event.results[i][0]\n            finalTranscript = this.concatTranscripts(\n              finalTranscript,\n              wordResults.transcript\n            )\n\n            let newWordData = this.newWordData(wordResults)\n            //TODO bad practice modifying original object like this!\n            let transcriptData = this.state.transcriptData\n            transcriptData.words.push(newWordData)\n            \n            newState.finalTranscript = finalTranscript\n            newState.transcriptData = transcriptData\n\n          } else {\n            interimTranscript = this.concatTranscripts(\n              interimTranscript,\n              event.results[i][0].transcript\n            )\n            newState.finalTranscript = interimTranscript\n          }\n        }\n\n        this.setState(newState)\n      }\n\n      // returns string with all transcript together\n      concatTranscripts(...transcriptParts) {\n        return transcriptParts.map(t => t.trim()).join(' ').trim()\n      }\n\n      resetTranscript = () => {\n        interimTranscript = ''\n        finalTranscript = ''\n        this.disconnect('RESET')\n        this.setState({ \n          interimTranscript, \n          finalTranscript,\n          transcriptData: newTranscriptData(),\n          speechTimerStartedAt: false,\n        })\n      }\n\n      startListening = () => {\n        if (recognition && !listening) {\n          try {\n            recognition.start()\n          } catch (DOMException) {\n            // Tried to start recognition after it has already started - safe to swallow this error\n          }\n          listening = true\n          let newState = {listening}\n          if (!this.state.speechTimerStartedAt) {\n            newState.speechTimerStartedAt = Date.now()\n          }\n\n          this.setState(newState)\n        }\n      }\n\n      abortListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('ABORT')\n      }\n\n      stopListening = () => {\n        listening = false\n        this.setState({ listening })\n        this.disconnect('STOP')\n      }\n\n      render() {\n        // includes both\n        const transcript = this.concatTranscripts(\n          finalTranscript,\n          interimTranscript\n        )\n\n        const totalTimeElapsed = this.minElapsed()\n\n        return (\n          <WrappedComponent\n            resetTranscript={this.resetTranscript}\n            startListening={this.startListening}\n            abortListening={this.abortListening}\n            stopListening={this.stopListening}\n            transcript={transcript}\n            recognition={recognition}\n            allResults={this.state.allResults}\n            listening={this.state.listening}\n            transcriptData={this.state.transcriptData}\n            interimTranscript={this.state.interimTranscript}\n            finalTranscript={this.state.finalTranscript}\n            browserSupportsSpeechRecognition={browserSupportsSpeechRecognition}\n            totalTimeElapsed={totalTimeElapsed}\n            {...this.props} />\n        )\n      }\n    }\n  }\n\n  if (typeof options === 'function') {\n    return SpeechRecognitionInner(options)\n  } else {\n    return SpeechRecognitionInner\n  }\n}\n","import React, { Component } from 'react'\n// import getAudio from './getAudio'\nimport SpeechRecognition from '../updated-react-speech-recognition/src/'\nimport { secondsToTimecode, timecodeToSeconds } from '../Util/timecode-converter/index';\n\n/*\nconst propTypes = {\n  // Props injected by SpeechRecognition\n  transcript: PropTypes.string,\n  resetTranscript: PropTypes.func,\n  browserSupportsSpeechRecognition: PropTypes.bool\n}\n*/\n\nclass GenerateTranscript extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n\n    this.stop = this.stop.bind(this)\n    this.start = this.start.bind(this)\n    this.reset = this.reset.bind(this)\n    this.generateJSON = this.generateJSON.bind(this)\n\n    // props.recognition.onresult\n    // set default language to Khmer TODO add options?\n    // https://www.science.co.il/language/Locale-codes.php for codes\n    props.recognition.lang = \"km\"\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.playingWhileListening && !prevProps.playingWhileListening && !this.props.listening) {\n      this.props.startListening()\n    }\n  }\n\n  stop(e) {\n    this.props.stopListening()\n  }\n  start(e) {\n    // console.log(\"starting\")\n    this.props.startListening()\n  }\n  generateJSON(e) {\n    let transcriptJSON = {\n      action: \"audio-transcribe\",\n      retval: this.props.transcriptData\n    }\n    // if use finalTranscript, anything that hasn't been finalized isn't counted, which would be confusing, since even if you wait sometimes it isn't yet made final\n    transcriptJSON.retval.punct = this.props.transcript\n\n    this.setState({\n      transcriptJSON\n    })\n\n    // console.log(transcriptJSON)\n    // content, filename, format\n    let filename = this.props.fileName.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()]/g, \"\").replace(/\\s/g, \"-\")\n    let prettyData = JSON.stringify(transcriptJSON, null, 4)\n\n    this.props.download(prettyData, `${ filename }.json`)\n\n    return transcriptJSON\n  }\n  reset(e) {\n    this.props.resetTranscript()\n  }\n  render() {\n    const {\n      transcript,\n      browserSupportsSpeechRecognition,\n      // interimTranscript,\n      listening,\n      // allResults\n    } = this.props\n\n    if (!browserSupportsSpeechRecognition) {\n      // NOTE happens several times, as this gets rerendered for some reason. Returns false even when browser can support sometimes for some reason too, but eventually returns true\n      return null\n    }\n    //TODO add back in once we switch over to using my fork  which passes down all results as an array rather than compiling all into a string\n\n    return (\n      <div>\n        <h1>Speech Recognition</h1>\n        <button onClick = { this.reset } >Reset</button>\n        <button onClick = { this.start } >Start</button>\n        <button onClick = { this.stop } >Stop</button>\n        <button onClick = { this.generateJSON } >Generate Transcript JSON</button>\n        <div className=\"transcript-container\" style={ { height: '240px', overflowY: 'auto' } }>\n          {\n            <div>{transcript}</div>\n          }\n        </div>\n        { listening ? (\n          <span>\n            *Listening* Total Time Elapsed: {secondsToTimecode(this.props.totalTimeElapsed)}\n          </span>\n        ) : (\n          <div>&nbsp;</div>\n        )}\n        {false && <div>\n          <p>Volume</p>\n          <input id=\"volume\" type=\"range\" min=\"0\" max=\"1\" step=\"0.1\" value=\"0.5\"/>\n        </div>}\n\n      </div>\n    )\n  }\n}\n\n// GenerateTranscript.propTypes = propTypes\n\nconst options = {\n  autoStart: false\n}\nexport default SpeechRecognition(options)(GenerateTranscript)\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SttTypeSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"bbckaldi\">BBC Kaldi</option>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"gentle-transcript\" disabled>Gentle Transcript</option>\n  <option value=\"gentle-alignement\" disabled>Gentle Alignement</option>\n  <option value=\"iiif\" disabled>IIIF</option>\n  <option value=\"autoedit2\">autoEdit 2</option>\n  <option value=\"ibm\" disabled>IBM Watson STT</option>\n  <option value=\"speechmatics\">Speechmatics</option>\n  <option value=\"assemblyai\" disabled>AssemblyAI</option>\n  <option value=\"rev\" disabled>Rev</option>\n  <option value=\"srt\" disabled>Srt</option>\n  <option value=\"vtt\" disabled>VTT</option>\n  <option value=\"vtt-youtube\" disabled>Youtube VTT</option>\n</select>);\n\nSttTypeSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default SttTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ExportFormatSelect = props => (<select name={ props.name } value={ props.value } onChange={ props.handleChange }>\n  <option value=\"draftjs\">Draft Js</option>\n  <option value=\"txt\">Text file</option>\n  <option value=\"html\" disabled>HTML</option>\n  <option value=\"word\" disabled>MS Word</option>\n</select>);\n\nExportFormatSelect.propTypes = {\n  name: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func\n};\n\nexport default ExportFormatSelect;\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { TranscriptEditor, GenerateTranscript } from './lib';\n\nimport kaldiTedTalkTranscript from './sample-data/KateDarling_2018S-bbc-kaldi.json';\nimport style from './index.module.css';\nimport SttTypeSelect from './select-stt-json-type';\nimport ExportFormatSelect from './select-export-format';\n\nconst tedTalkVideoUrl = 'https://download.ted.com/talks/KateDarling_2018S-950k.mp4';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      transcriptData: null,\n      mediaUrl: null,\n      isTextEditable: true,\n      sttType: 'bbckaldi',\n      analyticsEvents: [],\n      fileName: 'Khmer Transcript Data',\n      playingWhileListening: false,\n    };\n\n    this.transcriptEditorRef = React.createRef();\n    this.startListeningAndPlayingMedia = this.startListeningAndPlayingMedia.bind(this)\n  }\n\n  loadDemo() {\n    this.setState({\n      transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: tedTalkVideoUrl,\n      sttType: 'bbckaldi',\n    });\n  }\n\n  startListeningAndPlayingMedia(e) {\n    this.setState({playingWhileListening: true})\n  }\n\n  // https://stackoverflow.com/questions/8885701/play-local-hard-drive-video-file-with-html5-video-tag\n  handleChangeLoadMedia(files) {\n    console.log(files);\n    const file = files[0];\n    const type = file.type;\n    // check if is playable\n    const videoNode = document.createElement('video');\n    const canPlay = videoNode.canPlayType(type);\n    if (canPlay) {\n      const fileURL = URL.createObjectURL(file);\n      // videoNode.src = fileURL\n      this.setState({\n        // transcriptData: kaldiTedTalkTranscript,\n        mediaUrl: fileURL,\n        fileName: file.name\n      });\n    }\n    else {\n      alert('select a valid audio or video file');\n    }\n  }\n\n  handleChangeLoadMediaUrl() {\n    const fileURL = prompt(\"Paste the URL you'd like to use here\");\n\n    this.setState({\n      // transcriptData: kaldiTedTalkTranscript,\n      mediaUrl: fileURL,\n    });\n  }\n\n  handleChangeLoadTranscriptJson(files) {\n    const file = files[0];\n\n    if (file.type ==='application/json') {\n      const fr = new FileReader();\n\n      fr.onload = (evt) => {\n        this.setState({\n          transcriptData: JSON.parse(evt.target.result)\n        });\n      };\n\n      fr.readAsText(file);\n\n    }\n    else {\n      alert('select a valid json file');\n    }\n  }\n\n  handleIsTextEditable = () => {\n    this.setState((prevState) => ({ isTextEditable: (prevState.isTextEditable) !== true }));\n  }\n\n  // https://stackoverflow.com/questions/21733847/react-jsx-selecting-selected-on-selected-select-option\n  handleSttTypeChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleExportFormatChange = (event) => {\n    console.log(event.target.name, event.target.value);\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  exportTranscript = () => {\n    // eslint-disable-next-line react/no-string-refs\n    const { data, ext } = this.transcriptEditorRef.current.getEditorContent(this.state.exportFormat);\n    this.download(data, `${ this.state.mediaUrl }.${ ext }`);\n  }\n\n  // https://stackoverflow.com/questions/2897619/using-html5-javascript-to-generate-and-save-a-file\n  download = (content, filename, contentType) => {\n    const type = contentType || 'application/octet-stream';\n    const a = document.createElement('a');\n    const blob = new Blob([ content ], { type: type });\n\n    a.href = window.URL.createObjectURL(blob);\n    a.download = filename;\n    a.click();\n  }\n\n   clearLocalStorage = () => {\n     localStorage.clear();\n     console.info('cleared local storage');\n   }\n\n   handleAnalyticsEvents = (event) => {\n     this.setState({ analyticsEvents: [ ...this.state.analyticsEvents, event ] });\n   }\n\n   handleChangeTranscriptName = (value) => {\n     this.setState({ fileName: value });\n   }\n\n   playMedia\n   render() {\n     return (\n       <div className={ style.container }>\n         <span className={ style.title }>\n            Demo page for <mark>Khmer Transcript Creator</mark> - Component |&nbsp;\n           <a\n             href=\"https://github.com/RyanQuey/react-transcript-editor\"\n             rel=\"noopener noreferrer\"\n             target=\"_blank\"\n           >\n            Github Repo\n           </a>\n         </span>\n         <GenerateTranscript\n           download = { this.download }\n           fileName = {this.state.fileName}\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <br />\n         <button onClick={ () => this.loadDemo() }>load demo</button>\n         <hr />\n         <label>Load Local Audio or Video Media:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadMedia(e.target.files) }\n         />\n         or&nbsp;\n         <button onClick={ () => this.handleChangeLoadMediaUrl() }>\n          Load Media From Url\n         </button>\n         <br/>\n         <label>Transcript Json Format:&nbsp;</label>\n         <SttTypeSelect\n           name={ 'sttType' }\n           value={ this.state.sttType }\n           handleChange={ this.handleSttTypeChange }\n         />\n         &nbsp;&nbsp;\n         <label>Transcript Json:&nbsp;</label>\n         <input\n           type=\"file\"\n           onChange={ e => this.handleChangeLoadTranscriptJson(e.target.files) }\n         />\n         <br />\n\n         <label>Text Is Editable</label>\n         <label className={ style.switch }>\n           <input type=\"checkbox\"\n             defaultChecked=\"true\"\n             onChange={ this.handleIsTextEditable }\n           />\n           <span className={ style.slider }></span>\n         </label>\n         <br />\n\n         <label>Transcript Name</label>\n         <input\n           type=\"text\"\n           onChange={ e => this.handleChangeTranscriptName(e.target.value) }\n           value={ this.state.fileName }\n         />\n         <br />\n\n         <label>Export Edited Transcript:&nbsp;</label>\n         <button onClick={ () => this.exportTranscript() }>Export</button>\n\n         <ExportFormatSelect\n           name={ 'exportFormat' }\n           value={ this.state.exportFormat }\n           handleChange={ this.handleExportFormatChange }\n         />\n         <br />\n\n         <button onClick={ () => this.clearLocalStorage() }>Clear Local Storage</button>\n         {this.state.mediaUrl &&\n           <button onClick={ () => this.startListeningAndPlayingMedia() }>Generate Transcript from Media</button>\n         }\n         <hr/>\n\n         <TranscriptEditor\n           transcriptData = { this.state.transcriptData }\n           fileName = { this.state.fileName }\n           mediaUrl = { this.state.mediaUrl }\n           isEditable = { this.state.isTextEditable }\n           sttJsonType = { this.state.sttType }\n           handleAnalyticsEvents = { this.handleAnalyticsEvents }\n           ref = { this.transcriptEditorRef }\n           playingWhileListening = { this.state.playingWhileListening }\n         />\n         <hr/>\n\n         <label>Components Analytics</label>\n         <textarea\n           style={ { height: '200px', width: '100%' } }\n           value={ JSON.stringify(this.state.analyticsEvents, null, 2) }\n           disabled>\n         </textarea>\n       </div>\n     );\n   }\n}\n\nrender(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"color-light-grey\":\"#767676\",\"color-mid-grey\":\"#696969\",\"color-dark-grey\":\"#4a4a4a\",\"WrapperBlock\":\"WrapperBlock_WrapperBlock__3Ky6T\",\"markers\":\"WrapperBlock_markers__3ILw6\",\"text\":\"WrapperBlock_text__29dkP\",\"speaker\":\"WrapperBlock_speaker__3hDu5\",\"time\":\"WrapperBlock_time__7MR_0\",\"EditLabel\":\"WrapperBlock_EditLabel__3srCB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-lightest-grey\":\"#f2f2f2\",\"color-labs-red\":\"#a0372d\",\"color-dark-grey\":\"#4a4a4a\",\"shortcuts\":\"Shortcuts_shortcuts__E-szq\",\"header\":\"Shortcuts_header__ujg-G\",\"closeButton\":\"Shortcuts_closeButton__1uaCk\",\"list\":\"Shortcuts_list__1wVGG\",\"listItem\":\"Shortcuts_listItem__Jnjzl\",\"shortcut\":\"Shortcuts_shortcut__GWLsC\",\"shortcutLabel\":\"Shortcuts_shortcutLabel__1cOKX\",\"settingElement\":\"Shortcuts_settingElement__38_ln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-subt-green\":\"#69e3c2\",\"color-darkest-grey\":\"#282828\",\"color-labs-red\":\"#a0372d\",\"container\":\"TranscriptEditor_container__2Ykm6\",\"header\":\"TranscriptEditor_header__3PNk9\",\"main\":\"TranscriptEditor_main__VyUon\",\"aside\":\"TranscriptEditor_aside__fkJSE\",\"settingsContainer\":\"TranscriptEditor_settingsContainer__LUrRi\",\"settingsButton\":\"TranscriptEditor_settingsButton__1jEwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-light-grey\":\"#767676\",\"topSection\":\"MediaPlayer_topSection__2Wqp0\",\"playerSection\":\"MediaPlayer_playerSection__1WRFX\",\"controlsSection\":\"MediaPlayer_controlsSection__2JdaW\",\"titleBox\":\"MediaPlayer_titleBox__2Alx5\",\"title\":\"MediaPlayer_title__1Tw_5\",\"helpText\":\"MediaPlayer_helpText__3vCf-\",\"hideInMobile\":\"MediaPlayer_hideInMobile__1PWAN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"VolumeControl_switchContainer__3Rvar\",\"label\":\"VolumeControl_label__3BTVJ\",\"switch\":\"VolumeControl_switch__39OLJ\",\"slider\":\"VolumeControl_slider__nvKJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"offsetContainer\":\"TimecodeOffset_offsetContainer__3IRin\",\"inputBox\":\"TimecodeOffset_inputBox__1lmnx\",\"button\":\"TimecodeOffset_button__5qwpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"src_container__3zVEP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"color-labs-red\":\"#a0372d\",\"switchContainer\":\"Toggle_switchContainer__3i-of\",\"label\":\"Toggle_label__1xsUr\",\"switch\":\"Toggle_switch__v31XM\",\"slider\":\"Toggle_slider__3r6Az\"};"],"sourceRoot":""}